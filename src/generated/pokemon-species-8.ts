// AUTO GENERATED FILE
import {Language} from './language.enum.js';
import {Species} from './species.enum.js';
import {Variety} from './variety.enum.js';
import {Form} from './form.enum.js';
import {Type} from './type.enum.js';
import {VersionGroup} from './version-group.enum.js';
import {Color} from './color.enum.js';
import {EggGroup} from './egg-group.enum.js';
import {Stat} from './stat.enum.js';
import {Item} from './item.enum.js';
import {Ability} from './ability.enum.js';
import {Generation} from './generation.enum.js';
import {GrowthRate} from './growth-rate.enum.js';
import {Shape} from './shape.enum.js';
import {Move} from './move.enum.js';
import {MoveLearnMethod} from './move-learn-method.enum.js';

import {Version} from './version.enum.js';
import {PokemonSpecies} from './pokemon-species.js';
import type {MoveLearnData} from './pokemon-species.js';

// This is a used to shorten the code by collapsing data into a single line
function move(
	versionGroupMin: VersionGroup,
	versionGroupMax: VersionGroup,
	learnMethod: MoveLearnMethod,
	move: Move,
	levelLearnedAt?: number,
): MoveLearnData {
	return {
		versionGroups: [versionGroupMin, versionGroupMax],
		learnMethod,
		move,
		levelLearnedAt,
	};
}

// This is a used to shorten the code by collapsing moves that have the same general data into a single line
function moves(
	data: Omit<MoveLearnData, 'move'>,
	...moves: Move[]
): MoveLearnData[] {
	return moves.map<MoveLearnData>((move) => ({
		...data,
		move,
	}));
}

import {PokemonSpeciesBits, PokemonFormBits} from './pokemon-species.js';
const VersionGroup_RedBlue = VersionGroup.RedBlue;
const VersionGroup_Yellow = VersionGroup.Yellow;
const VersionGroup_GoldSilver = VersionGroup.GoldSilver;
const VersionGroup_Crystal = VersionGroup.Crystal;
const VersionGroup_RubySapphire = VersionGroup.RubySapphire;
const VersionGroup_Emerald = VersionGroup.Emerald;
const VersionGroup_FireredLeafgreen = VersionGroup.FireredLeafgreen;
const VersionGroup_DiamondPearl = VersionGroup.DiamondPearl;
const VersionGroup_Platinum = VersionGroup.Platinum;
const VersionGroup_HeartgoldSoulsilver = VersionGroup.HeartgoldSoulsilver;
const VersionGroup_BlackWhite = VersionGroup.BlackWhite;
const VersionGroup_Colosseum = VersionGroup.Colosseum;
const VersionGroup_Xd = VersionGroup.Xd;
const VersionGroup_Black2White2 = VersionGroup.Black2White2;
const VersionGroup_XY = VersionGroup.XY;
const VersionGroup_OmegaRubyAlphaSapphire = VersionGroup.OmegaRubyAlphaSapphire;
const VersionGroup_SunMoon = VersionGroup.SunMoon;
const VersionGroup_UltraSunUltraMoon = VersionGroup.UltraSunUltraMoon;
const VersionGroup_LetsGoPikachuLetsGoEevee =
	VersionGroup.LetsGoPikachuLetsGoEevee;
const VersionGroup_SwordShield = VersionGroup.SwordShield;
const VersionGroup_TheIsleOfArmor = VersionGroup.TheIsleOfArmor;
const VersionGroup_TheCrownTundra = VersionGroup.TheCrownTundra;
const VersionGroup_BrilliantDiamondAndShiningPearl =
	VersionGroup.BrilliantDiamondAndShiningPearl;
const VersionGroup_LegendsArceus = VersionGroup.LegendsArceus;
const VersionGroup_ScarletViolet = VersionGroup.ScarletViolet;
const VersionGroup_TheTealMask = VersionGroup.TheTealMask;
const VersionGroup_TheIndigoDisk = VersionGroup.TheIndigoDisk;
const MoveLearnMethod_LevelUp = MoveLearnMethod.LevelUp;
const MoveLearnMethod_Egg = MoveLearnMethod.Egg;
const MoveLearnMethod_Tutor = MoveLearnMethod.Tutor;
const MoveLearnMethod_Machine = MoveLearnMethod.Machine;
const MoveLearnMethod_StadiumSurfingPikachu =
	MoveLearnMethod.StadiumSurfingPikachu;
const MoveLearnMethod_LightBallEgg = MoveLearnMethod.LightBallEgg;
const MoveLearnMethod_ColosseumPurification =
	MoveLearnMethod.ColosseumPurification;
const MoveLearnMethod_XdShadow = MoveLearnMethod.XdShadow;
const MoveLearnMethod_XdPurification = MoveLearnMethod.XdPurification;
const MoveLearnMethod_FormChange = MoveLearnMethod.FormChange;
const MoveLearnMethod_ZygardeCube = MoveLearnMethod.ZygardeCube;

new PokemonSpecies(
	Species.Grookey,
	50,
	45,
	Color.Green,
	[EggGroup.Ground, EggGroup.Plant],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['サルノリ'],
		[Language.Roomaji]: ['Sarunori'],
		[Language.Ko]: ['흥나숭'],
		[Language.ZhHant]: ['敲音猴'],
		[Language.Fr]: ['Ouistempo'],
		[Language.De]: ['Chimpep'],
		[Language.Es]: ['Grookey'],
		[Language.It]: ['Grookey'],
		[Language.En]: ['Grookey'],
		[Language.Ja]: ['サルノリ'],
		[Language.ZhHans]: ['敲音猴'],
	},
	{
		[Language.JaHrkt]: ['こざるポケモン'],
		[Language.Ko]: ['꼬마원숭이포켓몬'],
		[Language.ZhHant]: ['小猴寶可夢'],
		[Language.Fr]: ['Pokémon Chimpanzé'],
		[Language.De]: ['Schimpansen-Pokémon'],
		[Language.Es]: ['Pokémon Chimpancé'],
		[Language.It]: ['Pokémon Scimpanzé'],
		[Language.En]: ['Chimp Pokémon'],
		[Language.Ja]: ['こざるポケモン'],
		[Language.ZhHans]: ['小猴宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'とくべつな　スティックで　リズムを\nきざむと　くさばなを　げんきにする\nパワーが　おんぱになって　ひろがる。',
			'スティックの　れんだで　こうげき。\nすごい　スピードで　たたくうちに\nどんどん　テンションが　あがるのだ。',
		],
		[Language.Ko]: [
			'특별한 스틱으로 리듬을 타면\n화초를 생생하게 만드는 힘이\n음파가 되어 퍼진다.',
			'스틱으로 연타하여 공격한다.\n굉장한 속도로 치다 보면\n점점 텐션이 올라간다.',
		],
		[Language.ZhHant]: [
			'當牠用特別的木棒敲奏時，\n能夠給予花草活力的力量\n就會變成音波擴散開來。',
			'會用木棒連續擊打來攻擊。\n在以飛快的速度擊打的同時，\n情緒也會變得越來越高漲。',
		],
		[Language.Fr]: [
			'Le rythme qu’il crée en tapant avec son bâton\ntrès spécial génère des ondes sonores\nqui ont le pouvoir de vivifier les plantes.',
			'Il attaque en frappant frénétiquement avec\nson bâton. Son enthousiasme grandit à mesure\nque le rythme s’accélère.',
		],
		[Language.De]: [
			'Der Rhythmus, den es mit seinem besonderen\nSchlägel erzeugt, verbreitet Schallwellen, die\nPflanzen neue Vitalität verleihen können.',
			'Es greift an, indem es wiederholt seinen Schlägel\nschwingt. Diese rasanten Trommelbewegungen\nbringen es immer mehr in Fahrt.',
		],
		[Language.Es]: [
			'Al marcar el ritmo con su baqueta especial,\nproduce unas ondas sonoras capaces de devolver\nla vitalidad a la flora.',
			'Ataca golpeando sin cesar con su baqueta, con\nun entusiasmo que crece a medida que acelera\nel ritmo.',
		],
		[Language.It]: [
			'Segnando il ritmo con la sua bacchetta speciale\ndiffonde onde sonore che hanno il potere\ndi rinvigorire fiori e piante.',
			'Attacca percuotendo il nemico con la sua\nbacchetta, con un entusiasmo che cresce\nall’aumentare del ritmo sfrenato con cui colpisce.',
		],
		[Language.En]: [
			'When it uses its special stick to strike up a beat,\nthe sound waves produced carry revitalizing\nenergy to the plants and flowers in the area.',
			'It attacks with rapid beats of its stick.\nAs it strikes with amazing speed, it gets\nmore and more pumped.',
		],
		[Language.Ja]: [
			'特別な　スティックで　リズムを\n刻むと　草花を　元気にする\nパワーが　音波になって　広がる。',
			'スティックの　連打で　攻撃。\nすごい　スピードで　叩くうちに\nどんどん　テンションが　上がるのだ。',
		],
		[Language.ZhHans]: [
			'当它用特别的木棒敲奏时，\n能够给予花草活力的力量\n就会变成音波扩散开来。',
			'会用木棒连续击打来攻击。\n在以飞快的速度击打的同时，\n情绪也会变得越来越高涨。',
		],
	},
	[
		[
			Variety.Grookey,
			62,
			3,
			50,
			[Type.Grass],
			{
				frontDefault: '954159e6.png',
				frontShiny: 'ddfeb038.png',
				backDefault: 'd9d2c56d.png',
				backShiny: '6afe1f4d.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 65, effort: 1},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 40},
				[Stat.Speed]: {baseStat: 65},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.LowKick,
					Move.SolarBeam,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.Fling,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GrassKnot,
					Move.Acrobatics,
					Move.GrassPledge,
					Move.SolarBlade,
					Move.GrassyGlide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					24,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Thief,
					Move.KnockOff,
					Move.Endeavor,
					Move.BulletSeed,
					Move.SeedBomb,
					Move.LeafStorm,
					Move.GrassyTerrain,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Strength,
					Move.LeechSeed,
					Move.Growth,
					Move.FakeOut,
					Move.HammerArm,
					Move.WorrySeed,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					17,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Endeavor,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WoodHammer,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BranchPoke,
					6,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.SwordsDance,
					Move.MegaKick,
					Move.LowKick,
					Move.SolarBeam,
					Move.Screech,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.FalseSwipe,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.Assurance,
					Move.Fling,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GrassKnot,
					Move.Round,
					Move.Acrobatics,
					Move.WorkUp,
					Move.SolarBlade,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					24,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Strength,
					Move.LeechSeed,
					Move.Growth,
					Move.FakeOut,
					Move.NaturePower,
					Move.HammerArm,
					Move.WorrySeed,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					17,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Endeavor,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WoodHammer,
					32,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.GrassPledge,
					Move.GrassyGlide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BranchPoke,
					6,
				),
			].flat(),
			[
				{
					ability: Ability.Overgrow,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.GrassySurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Grookey,
					PokemonFormBits.Default,
					{
						frontDefault: '954159e6.png',
						frontShiny: 'ddfeb038.png',
						backDefault: 'd9d2c56d.png',
						backShiny: '6afe1f4d.png',
					},
					[Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Thwackey,
	50,
	45,
	Color.Green,
	[EggGroup.Ground, EggGroup.Plant],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['バチンキー'],
		[Language.Roomaji]: ['Bachinkey'],
		[Language.Ko]: ['채키몽'],
		[Language.ZhHant]: ['啪咚猴'],
		[Language.Fr]: ['Badabouin'],
		[Language.De]: ['Chimstix'],
		[Language.Es]: ['Thwackey'],
		[Language.It]: ['Thwackey'],
		[Language.En]: ['Thwackey'],
		[Language.Ja]: ['バチンキー'],
		[Language.ZhHans]: ['啪咚猴'],
	},
	{
		[Language.JaHrkt]: ['ビートポケモン'],
		[Language.Ko]: ['비트포켓몬'],
		[Language.ZhHant]: ['節拍寶可夢'],
		[Language.Fr]: ['Pokémon Percussions'],
		[Language.De]: ['Beat-Pokémon'],
		[Language.Es]: ['Pokémon Ritmo'],
		[Language.It]: ['Pokémon Ritmo'],
		[Language.En]: ['Beat Pokémon'],
		[Language.Ja]: ['ビートポケモン'],
		[Language.ZhHans]: ['节拍宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'２ほんの　スティックで　はげしい\nビートを　きざめる　バチンキーほど\nなかまたちの　そんけいを　あつめる。',
			'はげしい　ビートを　きざむことに\nむちゅうになる　あまり　たたかいで\nあいてが　きぜつしても　きづかない。',
		],
		[Language.Ko]: [
			'2개의 스틱으로 격렬한\n비트를 만드는 채키몽일수록\n동료들에게 존경받는다.',
			'격렬한 비트를 내는데\n열중한 나머지 싸움에서\n상대가 기절해도 모른다.',
		],
		[Language.ZhHant]: [
			'越是能用２根木棒敲奏出\n激烈節拍的啪咚猴，越是\n能獲得夥伴們的尊敬。',
			'打著激烈的節拍戰鬥時，\n由於過於忘我，甚至不會\n意識到自己已經把對手打昏了。',
		],
		[Language.Fr]: [
			'Les Badabouin qui parviennent à suivre le rythme\nle plus effréné avec leurs deux bâtons sont\nles plus respectés par leurs camarades.',
			'Il est tellement concentré à battre à un rythme\neffréné que même lorsque son adversaire\ntombe K.O., il ne s’en rend pas compte.',
		],
		[Language.De]: [
			'Je wilder der Beat, den ein Chimstix mit seinen\nzwei Schlägeln erzeugt, desto mehr wird es von\nseinen Artgenossen respektiert.',
			'Verliert es sich im Kampf in seinem wilden Beat,\nbemerkt es ab und zu nicht mal, dass sein Gegner\nbereits zu Boden gegangen ist.',
		],
		[Language.Es]: [
			'Los Thwackey que marcan el ritmo más\ncontundente con sus dos baquetas son los\nmás respetados por sus congéneres.',
			'Se concentra tanto en marcar el ritmo que,\ncuando su rival se debilita en combate, no se\nda ni cuenta.',
		],
		[Language.It]: [
			'I Thwackey più rispettati dai propri simili sono\nquelli in grado di produrre un ritmo forsennato\ncon le due bacchette.',
			'Durante la lotta si concentra così tanto nel tenere\nun ritmo febbrile che non si accorge nemmeno\nse il nemico va KO.',
		],
		[Language.En]: [
			'The faster a Thwackey can beat out a rhythm\nwith its two sticks, the more respect it wins from\nits peers.',
			'When it’s drumming out rapid beats in battle, it\ngets so caught up in the rhythm that it won’t even\nnotice that it’s already knocked out its opponent.',
		],
		[Language.Ja]: [
			'２本の　スティックで　激しい\nビートを　刻める　バチンキーほど\n仲間たちの　尊敬を　集める。',
			'激しい　ビートを　刻むことに\n夢中になる　あまり　戦いで\n相手が　気絶しても　気づかない。',
		],
		[Language.ZhHans]: [
			'越是能用２根木棒敲奏出\n激烈节拍的啪咚猴，\n越是能获得伙伴们的尊敬。',
			'打着激烈的节拍战斗时，\n由于过于忘我，甚至不会\n意识到自己已经把对手打昏了。',
		],
	},
	[
		[
			Variety.Thwackey,
			147,
			7,
			140,
			[Type.Grass],
			{
				frontDefault: 'd37adf19.png',
				frontShiny: 'ac88d6ab.png',
				backDefault: '9b7ccf82.png',
				backShiny: '46175a0c.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 85, effort: 2},
				[Stat.Defense]: {baseStat: 70},
				[Stat.SpecialAttack]: {baseStat: 55},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 80},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
					Move.Taunt,
					Move.BranchPoke,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.LowKick,
					Move.SolarBeam,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.Fling,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GrassKnot,
					Move.Acrobatics,
					Move.GrassPledge,
					Move.SolarBlade,
					Move.GrassyGlide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.Thief,
					Move.ScaryFace,
					Move.KnockOff,
					Move.Endeavor,
					Move.BulletSeed,
					Move.SeedBomb,
					Move.LeafStorm,
					Move.GrassyTerrain,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Strength,
					Move.LeechSeed,
					Move.Growth,
					Move.FakeOut,
					Move.HammerArm,
					Move.WorrySeed,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Endeavor,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WoodHammer,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.SwordsDance,
					Move.MegaKick,
					Move.LowKick,
					Move.SolarBeam,
					Move.Screech,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.FalseSwipe,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.Assurance,
					Move.Fling,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GrassKnot,
					Move.Round,
					Move.Acrobatics,
					Move.WorkUp,
					Move.SolarBlade,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
					Move.Taunt,
					Move.DoubleHit,
					Move.BranchPoke,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Endeavor,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WoodHammer,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.GrassPledge,
					Move.GrassyGlide,
				),
			].flat(),
			[
				{
					ability: Ability.Overgrow,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.GrassySurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Thwackey,
					PokemonFormBits.Default,
					{
						frontDefault: 'd37adf19.png',
						frontShiny: 'ac88d6ab.png',
						backDefault: '9b7ccf82.png',
						backShiny: '46175a0c.png',
					},
					[Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Rillaboom,
	50,
	45,
	Color.Green,
	[EggGroup.Ground, EggGroup.Plant],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['ゴリランダー'],
		[Language.Roomaji]: ['Gorirander'],
		[Language.Ko]: ['고릴타'],
		[Language.ZhHant]: ['轟擂金剛猩'],
		[Language.Fr]: ['Gorythmic'],
		[Language.De]: ['Gortrom'],
		[Language.Es]: ['Rillaboom'],
		[Language.It]: ['Rillaboom'],
		[Language.En]: ['Rillaboom'],
		[Language.Ja]: ['ゴリランダー'],
		[Language.ZhHans]: ['轰擂金刚猩'],
	},
	{
		[Language.JaHrkt]: ['ドラマーポケモン'],
		[Language.Ko]: ['드러머포켓몬'],
		[Language.ZhHant]: ['鼓手寶可夢'],
		[Language.Fr]: ['Pokémon Batteur'],
		[Language.De]: ['Drummer-Pokémon'],
		[Language.Es]: ['Pokémon Percusión'],
		[Language.It]: ['Pokémon Percussione'],
		[Language.En]: ['Drummer Pokémon'],
		[Language.Ja]: ['ドラマーポケモン'],
		[Language.ZhHans]: ['鼓手宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'とくべつな　きりかぶの　パワーを\nドラミングで　コントロール。\nねっこを　あやつって　たたかう。',
			'ドラムテクニックに　すぐれた　ものが\nボスになる。　おだやかな　きしょうで\nグループの　ちょうわを　おもんじる。',
		],
		[Language.Ko]: [
			'특별한 그루터기의 파워를\n드럼 연주로 컨트롤한다.\n뿌리를 조종해서 싸운다.',
			'드럼 테크닉이 가장 뛰어난 자가\n보스가 된다. 천성이 온화해서\n그룹의 조화를 중히 여긴다.',
		],
		[Language.ZhHant]: [
			'能夠透過打鼓來控制\n特別的樹樁中的力量，\n操縱樹根進行戰鬥。',
			'打鼓技巧最高超的那一隻\n會成為首領。性情溫和，\n重視族群的和諧相處。',
		],
		[Language.Fr]: [
			'Il contrôle le pouvoir de sa souche singulière\nen tapant en rythme dessus.\nIl se bat en manipulant des racines.',
			'Celui qui possède les meilleures techniques\nde percussion devient le chef. De nature calme,\nil privilégie l’harmonie du groupe.',
		],
		[Language.De]: [
			'Es kontrolliert die Macht seines speziellen\nBaumstumpfes durch Trommeln. Im Kampf\nmanipuliert es damit Wurzeln.',
			'Wer die beste Trommeltechnik hat, wird zum\nAnführer. Da es ein ruhiges Gemüt hat, legt es\nviel Wert auf Harmonie in der Gruppe.',
		],
		[Language.Es]: [
			'Controla los poderes y las raíces de su singular\ntocón en combate golpeándolo como si fuera\nun tambor.',
			'El percusionista con la técnica más depurada se\nconvierte en líder. Son de carácter tranquilo y\ndan mucha importancia a la armonía del grupo.',
		],
		[Language.It]: [
			'Controlla il potere del suo ceppo speciale\nusandolo come un tamburo e lotta servendosi\ndelle radici.',
			'Colui che ha una migliore tecnica di percussione\ndiventa il capo. Ha un carattere tranquillo e\ndà molta importanza all’armonia del gruppo.',
		],
		[Language.En]: [
			'By drumming, it taps into the power of its special\ntree stump. The roots of the stump follow its\ndirection in battle.',
			'The one with the best drumming techniques\nbecomes the boss of the troop. It has a gentle\ndisposition and values harmony among its group.',
		],
		[Language.Ja]: [
			'特別な　切り株の　パワーを\nドラミングで　コントロール。\n根っこを　操って　戦う。',
			'ドラムテクニックに　優れた　ものが\nボスになる。　穏やかな　気性で\nグループの　調和を　重んじる。',
		],
		[Language.ZhHans]: [
			'能够通过打鼓来控制\n特别的树桩中的力量，\n操纵树根进行战斗。',
			'打鼓技巧最高超的那一只\n会成为首领。性情温和，\n重视族群的和谐相处。',
		],
	},
	[
		[
			Variety.Rillaboom,
			265,
			21,
			900,
			[Type.Grass],
			{
				frontDefault: '9bdb80bf.png',
				frontShiny: '8ee424fb.png',
				backDefault: 'ecc419a4.png',
				backShiny: 'e7b4596f.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 125, effort: 3},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
					Move.Taunt,
					Move.DoubleHit,
					Move.NobleRoar,
					Move.GrassyTerrain,
					Move.BranchPoke,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.SolarBeam,
					Move.Earthquake,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.FrenzyPlant,
					Move.BulkUp,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.Fling,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.EnergyBall,
					Move.EarthPower,
					Move.GigaImpact,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Acrobatics,
					Move.GrassPledge,
					Move.Bulldoze,
					Move.Snarl,
					Move.GrassyTerrain,
					Move.HighHorsepower,
					Move.SolarBlade,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.GrassyGlide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Thief,
					Move.FocusPunch,
					Move.KnockOff,
					Move.Endeavor,
					Move.SeedBomb,
					Move.LowSweep,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Strength,
					Move.LeechSeed,
					Move.Growth,
					Move.FakeOut,
					Move.HammerArm,
					Move.WorrySeed,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Endeavor,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WoodHammer,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Boomburst,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrumBeating,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.SwordsDance,
					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.SolarBeam,
					Move.Earthquake,
					Move.Screech,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.FalseSwipe,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.BulkUp,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.Assurance,
					Move.Fling,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.EnergyBall,
					Move.EarthPower,
					Move.GigaImpact,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Round,
					Move.Acrobatics,
					Move.Bulldoze,
					Move.WorkUp,
					Move.Snarl,
					Move.GrassyTerrain,
					Move.DarkestLariat,
					Move.HighHorsepower,
					Move.SolarBlade,
					Move.BrutalSwing,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
					Move.Taunt,
					Move.DoubleHit,
					Move.NobleRoar,
					Move.GrassyTerrain,
					Move.DrumBeating,
					Move.BranchPoke,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Endeavor,
					54,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.FrenzyPlant,
					Move.GrassPledge,
					Move.GrassyGlide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WoodHammer,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Boomburst,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrumBeating,
				),
			].flat(),
			[
				{
					ability: Ability.Overgrow,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.GrassySurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Rillaboom,
					PokemonFormBits.Default,
					{
						frontDefault: '9bdb80bf.png',
						frontShiny: '8ee424fb.png',
						backDefault: 'ecc419a4.png',
						backShiny: 'e7b4596f.png',
					},
					[Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.RillaboomGmax,
			265,
			280,
			10000,
			[Type.Grass],
			{
				frontDefault: 'b59f59a7.png',
				frontShiny: '3ee12932.png',
				backDefault: '5216f127.png',
				backShiny: '9cd9d050.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 125, effort: 3},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Overgrow,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.GrassySurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.RillaboomGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'b59f59a7.png',
						frontShiny: '3ee12932.png',
						backDefault: '5216f127.png',
						backShiny: '9cd9d050.png',
					},
					[Type.Grass],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Gorythmic Gigamax'],
						[Language.De]: ['Gigadynamax-Gortrom'],
						[Language.En]: ['Gigantamax Rillaboom'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Scorbunny,
	50,
	45,
	Color.White,
	[EggGroup.Ground, EggGroup.Humanshape],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ヒバニー'],
		[Language.Roomaji]: ['Hibanny'],
		[Language.Ko]: ['염버니'],
		[Language.ZhHant]: ['炎兔兒'],
		[Language.Fr]: ['Flambino'],
		[Language.De]: ['Hopplo'],
		[Language.Es]: ['Scorbunny'],
		[Language.It]: ['Scorbunny'],
		[Language.En]: ['Scorbunny'],
		[Language.Ja]: ['ヒバニー'],
		[Language.ZhHans]: ['炎兔儿'],
	},
	{
		[Language.JaHrkt]: ['うさぎポケモン'],
		[Language.Ko]: ['토끼포켓몬'],
		[Language.ZhHant]: ['兔子寶可夢'],
		[Language.Fr]: ['Pokémon Lapin'],
		[Language.De]: ['Hasen-Pokémon'],
		[Language.Es]: ['Pokémon Conejo'],
		[Language.It]: ['Pokémon Coniglio'],
		[Language.En]: ['Rabbit Pokémon'],
		[Language.Ja]: ['うさぎポケモン'],
		[Language.ZhHans]: ['兔子宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'はしりまわって　たいおんを　あげると\nほのおエネルギーが　からだを　めぐり\nほんらいの　ちからを　はっきできる。',
			'たたかう　じゅんびが　ととのうと\nはなの　あたまと　あしの　うらの\nにくきゅうが　こうねつを　はっする。',
		],
		[Language.Ko]: [
			'뛰어다니며 체온을 높이면\n불꽃 에너지가 몸 안에 맴돌아\n본래의 힘을 발휘할 수 있다.',
			'싸울 준비가 되면\n코끝과 발바닥의\n볼록살에서 고열을 낸다.',
		],
		[Language.ZhHant]: [
			'不斷奔跑使體溫升高後，\n火之能量會在牠體內循環，\n促使牠發揮出真正的力量。',
			'一旦做好了戰鬥的準備，\n牠鼻頭上和腳底的肉球\n就會散發出極度的高溫。',
		],
		[Language.Fr]: [
			'Il court pour augmenter sa température et faire\ncirculer l’énergie incandescente dans son corps.\nIl peut ainsi déployer toute sa puissance.',
			'Quand il est prêt à se battre, la partie\nqui surmonte son museau ainsi que les coussinets\nde ses pattes postérieures émettent de la chaleur.',
		],
		[Language.De]: [
			'Erhöht es durch Rennen seine Körpertemperatur,\nströmt Feuer-Energie durch seinen Körper. Dann\nkann es seine wahre Kraft entfesseln.',
			'Ist es kampfbereit, verströmt es von seiner\nNasenspitze und von den Ballen an seinen\nLäufen Hitze.',
		],
		[Language.Es]: [
			'Se pone a correr para elevar su temperatura\ncorporal y propagar la energía ígnea por todo\nel cuerpo. Desata así su verdadera fuerza.',
			'Cuando se prepara para combatir, irradia calor\npor la punta de la nariz y el pelo que le recubre\nlas patas.',
		],
		[Language.It]: [
			'Quando corre, la sua temperatura corporea sale\npervadendolo di un’energia infuocata che gli\npermette di scatenare la sua vera potenza.',
			'Quando si prepara a lottare, la punta del naso\ne i cuscinetti sotto le zampe irradiano calore.',
		],
		[Language.En]: [
			'A warm-up of running around gets fire energy\ncoursing through this Pokémon’s body. Once that\nhappens, it’s ready to fight at full power.',
			'It has special pads on the backs of its feet, and\none on its nose. Once it’s raring to fight, these\npads radiate tremendous heat.',
		],
		[Language.Ja]: [
			'走りまわって　体温を　上げると\n炎エネルギーが　体を　巡り\n本来の　力を　発揮できる。',
			'戦う　準備が　整うと\n鼻の　頭と　足の　裏の\n肉球が　高熱を　発する。',
		],
		[Language.ZhHans]: [
			'不断奔跑使体温升高后，\n火之能量会在它身体循环，\n促使它发挥出真正的力量。',
			'一旦做好了战斗的准备，\n它鼻头上和脚底的肉球\n就会发出极度的高温。',
		],
	},
	[
		[
			Variety.Scorbunny,
			62,
			3,
			45,
			[Type.Fire],
			{
				frontDefault: 'af5c3896.png',
				frontShiny: '2d81fafa.png',
				backDefault: '24f4d1e7.png',
				backShiny: '06f0d712.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 71},
				[Stat.Defense]: {baseStat: 40},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 40},
				[Stat.Speed]: {baseStat: 69, effort: 1},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.HighJumpKick,
					Move.SuperFang,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.FireSpin,
					Move.SuperFang,
					Move.HelpingHand,
					Move.FlareBlitz,
					Move.FlameCharge,
					Move.BurningJealousy,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.TemperFlare,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Ember,
					6,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.LowKick,
					Move.Agility,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.HeatWave,
					Move.Facade,
					Move.Taunt,
					Move.Overheat,
					Move.UTurn,
					Move.FireFang,
					Move.GunkShot,
					Move.ElectroBall,
					Move.LowSweep,
					Move.Acrobatics,
					Move.FirePledge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bounce,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
					17,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaKick,
					Move.Flamethrower,
					Move.LowKick,
					Move.Agility,
					Move.FocusEnergy,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.HeatWave,
					Move.Facade,
					Move.Taunt,
					Move.BlazeKick,
					Move.Overheat,
					Move.Bounce,
					Move.MudShot,
					Move.UTurn,
					Move.Assurance,
					Move.FireFang,
					Move.GunkShot,
					Move.ElectroBall,
					Move.LowSweep,
					Move.Round,
					Move.AllySwitch,
					Move.Acrobatics,
					Move.WorkUp,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.HighJumpKick,
					Move.SuperFang,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Ember,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bounce,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
					17,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.FirePledge,
				),
			].flat(),
			[
				{
					ability: Ability.Blaze,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Libero,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Scorbunny,
					PokemonFormBits.Default,
					{
						frontDefault: 'af5c3896.png',
						frontShiny: '2d81fafa.png',
						backDefault: '24f4d1e7.png',
						backShiny: '06f0d712.png',
					},
					[Type.Fire],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Raboot,
	50,
	45,
	Color.Gray,
	[EggGroup.Ground, EggGroup.Humanshape],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ラビフット'],
		[Language.Roomaji]: ['Rabbifuto'],
		[Language.Ko]: ['래비풋'],
		[Language.ZhHant]: ['騰蹴小將'],
		[Language.Fr]: ['Lapyro'],
		[Language.De]: ['Kickerlo'],
		[Language.Es]: ['Raboot'],
		[Language.It]: ['Raboot'],
		[Language.En]: ['Raboot'],
		[Language.Ja]: ['ラビフット'],
		[Language.ZhHans]: ['腾蹴小将'],
	},
	{
		[Language.JaHrkt]: ['うさぎポケモン'],
		[Language.Ko]: ['토끼포켓몬'],
		[Language.ZhHant]: ['兔子寶可夢'],
		[Language.Fr]: ['Pokémon Lapin'],
		[Language.De]: ['Hasen-Pokémon'],
		[Language.Es]: ['Pokémon Conejo'],
		[Language.It]: ['Pokémon Coniglio'],
		[Language.En]: ['Rabbit Pokémon'],
		[Language.Ja]: ['うさぎポケモン'],
		[Language.ZhHans]: ['兔子宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ふかふかの　たいもうで　さむさに\nつよくなり　さらに　こうおんの\nほのおわざを　だせるようになった。',
			'てを　つかわずに　きの　えだから\nきのみを　つみとり　リフティング。\nあしわざを　みがく　れんしゅう。',
		],
		[Language.Ko]: [
			'푹신푹신한 털 덕분에 추위에\n강해지고 더 높은 온도의\n불꽃 기술도 쓸 수 있게 되었다.',
			'손을 쓰지 않고 나뭇가지에서\n나무열매를 따내고 리프팅한다.\n발 기술을 연마하는 연습이다.',
		],
		[Language.ZhHant]: [
			'蓬鬆的體毛幫助牠增強了抵禦\n寒冷的能力，也使牠能夠使出\n溫度更高的火屬性招式。',
			'會用腳把樹果從樹木上\n踢落，用來練習挑球，\n藉此鍛鍊自己的腳法。',
		],
		[Language.Fr]: [
			'Son pelage épais lui permet de mieux résister\nau froid et d’augmenter la température\nde ses capacités Feu.',
			'Pour parfaire son jeu de jambes,\nil cueille des Baies puis drible avec,\nle tout sans se servir de ses mains.',
		],
		[Language.De]: [
			'Sein flauschiges Fell schützt es vor Kälte und\nermöglicht es ihm, noch heißere Feuer-Attacken\nauszuteilen.',
			'Es pflückt Beeren von Ästen, ohne seine Hände\nzu benutzen, und jongliert sie mit den Füßen.\nDamit trainiert es seine Fußfertigkeiten.',
		],
		[Language.Es]: [
			'Su suave pelaje lo protege del frío y le permite\nincrementar todavía más la temperatura de sus\nmovimientos de tipo Fuego.',
			'Para mejorar su habilidad con los pies, toma\nbayas de las ramas de los árboles sin usar las\nmanos y juega a darles toques.',
		],
		[Language.It]: [
			'Grazie alla folta pelliccia resiste al freddo\ned è in grado di sferrare mosse infuocate\na temperature ancora più alte.',
			'Per perfezionare i suoi calci, si esercita\nprendendo le bacche dai rami degli alberi\ne palleggiando senza usare le mani.',
		],
		[Language.En]: [
			'Its thick and fluffy fur protects it from the cold\nand enables it to use hotter fire moves.',
			'It kicks berries right off the branches of trees\nand then juggles them with its feet, practicing\nits footwork.',
		],
		[Language.Ja]: [
			'ふかふかの　体毛で　寒さに\n強くなり　さらに　高温の\n炎技を　出せるようになった。',
			'手を　使わずに　木の　枝から\n木の実を　摘み取り　リフティング。\n足技を　磨く　練習。',
		],
		[Language.ZhHans]: [
			'蓬松的体毛帮助它增强了抵御\n寒冷的能力，也使它能够使出\n温度更高的火属性招式。',
			'会用脚把树果从树木上\n踢落，用来练习颠球，\n借此锻炼自己的脚法。',
		],
	},
	[
		[
			Variety.Raboot,
			147,
			6,
			90,
			[Type.Fire],
			{
				frontDefault: 'b2d06919.png',
				frontShiny: '2f0219c1.png',
				backDefault: '21a43860.png',
				backShiny: '2714bada.png',
			},
			{
				[Stat.Hp]: {baseStat: 65},
				[Stat.Attack]: {baseStat: 86},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 55},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 94, effort: 2},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.FireSpin,
					Move.SuperFang,
					Move.HelpingHand,
					Move.WeatherBall,
					Move.FlameCharge,
					Move.BurningJealousy,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.TemperFlare,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.HighJumpKick,
					Move.SuperFang,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.Ember,
					Move.QuickAttack,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					48,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.LowKick,
					Move.Agility,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.HeatWave,
					Move.Facade,
					Move.Taunt,
					Move.Overheat,
					Move.BulkUp,
					Move.MudShot,
					Move.UTurn,
					Move.FlareBlitz,
					Move.FireFang,
					Move.GunkShot,
					Move.ElectroBall,
					Move.LowSweep,
					Move.Acrobatics,
					Move.FirePledge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bounce,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaKick,
					Move.Flamethrower,
					Move.LowKick,
					Move.Agility,
					Move.FocusEnergy,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.HeatWave,
					Move.Facade,
					Move.Taunt,
					Move.BlazeKick,
					Move.Overheat,
					Move.BulkUp,
					Move.Bounce,
					Move.MudShot,
					Move.UTurn,
					Move.Assurance,
					Move.FlareBlitz,
					Move.FireFang,
					Move.GunkShot,
					Move.ElectroBall,
					Move.LowSweep,
					Move.Round,
					Move.AllySwitch,
					Move.Acrobatics,
					Move.WorkUp,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					30,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.Ember,
					Move.QuickAttack,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bounce,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.FirePledge,
				),
			].flat(),
			[
				{
					ability: Ability.Blaze,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Libero,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Raboot,
					PokemonFormBits.Default,
					{
						frontDefault: 'b2d06919.png',
						frontShiny: '2f0219c1.png',
						backDefault: '21a43860.png',
						backShiny: '2714bada.png',
					},
					[Type.Fire],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Cinderace,
	50,
	45,
	Color.White,
	[EggGroup.Ground, EggGroup.Humanshape],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['エースバーン'],
		[Language.Roomaji]: ['Aceburn'],
		[Language.Ko]: ['에이스번'],
		[Language.ZhHant]: ['閃焰王牌'],
		[Language.Fr]: ['Pyrobut'],
		[Language.De]: ['Liberlo'],
		[Language.Es]: ['Cinderace'],
		[Language.It]: ['Cinderace'],
		[Language.En]: ['Cinderace'],
		[Language.Ja]: ['エースバーン'],
		[Language.ZhHans]: ['闪焰王牌'],
	},
	{
		[Language.JaHrkt]: ['ストライカーポケモン'],
		[Language.Ko]: ['스트라이커포켓몬'],
		[Language.ZhHant]: ['前鋒寶可夢'],
		[Language.Fr]: ['Pokémon Buteur'],
		[Language.De]: ['Torschützen-Pokémon'],
		[Language.Es]: ['Pokémon Delantero'],
		[Language.It]: ['Pokémon Cannoniere'],
		[Language.En]: ['Striker Pokémon'],
		[Language.Ja]: ['ストライカーポケモン'],
		[Language.ZhHans]: ['前锋宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'こいしを　リフティングして　ほのおの\nサッカーボールを　つくる。　するどい\nシュートで　あいてを　もやす。',
			'こうしゅに　すぐれ　おうえんされると\nさらに　もえるが　スタンドプレイに\nはしり　ピンチを　まねくこともある。',
		],
		[Language.Ko]: [
			'작은 돌을 리프팅해서 불꽃의\n축구공을 만들고 날카로운\n슛으로 상대를 태워버린다.',
			'공수에 뛰어나고 응원을 받으면\n더 뜨겁게 타오르지만 스탠드 플레이를\n하다가 위기에 처하는 경우도 있다.',
		],
		[Language.ZhHant]: [
			'會將小石頭像足球般用腳挑起，\n製造出纏繞著火焰的足球。\n會用猛烈的踢射來燃燒對手。',
			'擁有熟練的進攻和防守技巧。\n只要得到聲援就會更有衝勁，\n但有時會為了出風頭而弄巧成拙。',
		],
		[Language.Fr]: [
			'Il drible avec des pierres pour en faire\ndes ballons enflammés, avant de tirer\nsur ses adversaires pour les brûler.',
			'Exceptionnel en attaque comme en défense,\nil s’exalte quand on l’encourage, mais il lui\narrive de se mettre en danger en jouant solo.',
		],
		[Language.De]: [
			'Es jongliert kleine Steine mit den Füßen und\nerschafft daraus einen Flammenfußball. Seine\nGegner verbrennt es mit scharfen Schüssen.',
			'Jubel für besonders gelungene Spielzüge schüren\nseinen Enthusiasmus. Spielt es aber zu sehr für die\nPublikumswirkung, geht dies oft nach hinten los.',
		],
		[Language.Es]: [
			'Convierte piedras en balones de fuego dándoles\ntoques y, luego, chuta con fuerza hacia el rival\npara chamuscarlo.',
			'Destaca tanto en ataque como en defensa. Se\ncrece cuando recibe una ovación, pero a veces\nse luce tanto que termina viéndose en apuros.',
		],
		[Language.It]: [
			'Crea un pallone da calcio infuocato palleggiando\ncon un sasso e poi tira una cannonata contro\nil nemico per abbrustolirlo.',
			'Eccelle in attacco e in difesa. Se sente il tifo, a\nvolte si fa prendere dall’entusiasmo e inizia a\ndare spettacolo, finendo per trovarsi in difficoltà.',
		],
		[Language.En]: [
			'It juggles a pebble with its feet, turning it into a\nburning soccer ball. Its shots strike opponents\nhard and leave them scorched.',
			'It’s skilled at both offense and defense, and it\ngets pumped up when cheered on. But if it starts\nshowboating, it could put itself in a tough spot.',
		],
		[Language.Ja]: [
			'小石を　リフティングして　炎の\nサッカーボールを　つくる。　するどい\nシュートで　相手を　燃やす。',
			'攻守に　優れ　応援されると\nさらに　燃えるが　スタンドプレイに\n走り　ピンチを　招くこともある。',
		],
		[Language.ZhHans]: [
			'会将小石头像足球般用脚挑起，\n制造出缠绕着火焰的足球。\n会用猛烈的踢射来燃烧对手。',
			'拥有熟练的进攻和防守技巧。\n只要得到声援就会更有冲劲，\n但有时会为了出风头而弄巧成拙。',
		],
	},
	[
		[
			Variety.Cinderace,
			265,
			14,
			330,
			[Type.Fire],
			{
				frontDefault: '49f2077e.png',
				frontShiny: '6913c150.png',
				backDefault: '45f46d4b.png',
				backShiny: '9cfc98f2.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 116},
				[Stat.Defense]: {baseStat: 75},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 119, effort: 3},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.LowKick,
					Move.FireSpin,
					Move.Agility,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.ShadowBall,
					Move.HeatWave,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.BlastBurn,
					Move.Overheat,
					Move.BulkUp,
					Move.MudShot,
					Move.UTurn,
					Move.FlareBlitz,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.FireFang,
					Move.ZenHeadbutt,
					Move.GunkShot,
					Move.IronHead,
					Move.ElectroBall,
					Move.LowSweep,
					Move.Acrobatics,
					Move.FirePledge,
					Move.Snarl,
					Move.Coaching,
					Move.ScorchingSands,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.SuperFang,
					Move.MudSlap,
					Move.WillOWisp,
					Move.WeatherBall,
					Move.Fling,
					Move.SmackDown,
					Move.FlameCharge,
					Move.BurningJealousy,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.TemperFlare,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.HighJumpKick,
					Move.SuperFang,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.Ember,
					Move.QuickAttack,
					Move.Feint,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bounce,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CourtChange,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PyroBall,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.MegaKick,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.LowKick,
					Move.FireSpin,
					Move.Agility,
					Move.FocusEnergy,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.ShadowBall,
					Move.HeatWave,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Revenge,
					Move.BlazeKick,
					Move.Overheat,
					Move.BulkUp,
					Move.Bounce,
					Move.MudShot,
					Move.UTurn,
					Move.Assurance,
					Move.FlareBlitz,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.FireFang,
					Move.ZenHeadbutt,
					Move.GunkShot,
					Move.IronHead,
					Move.ElectroBall,
					Move.LowSweep,
					Move.Round,
					Move.AllySwitch,
					Move.Acrobatics,
					Move.WorkUp,
					Move.Snarl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					30,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.Ember,
					Move.QuickAttack,
					Move.Feint,
					Move.PyroBall,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.BlastBurn,
					Move.FirePledge,
					Move.Coaching,
					Move.ScorchingSands,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bounce,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CourtChange,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PyroBall,
				),
			].flat(),
			[
				{
					ability: Ability.Blaze,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Libero,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Cinderace,
					PokemonFormBits.Default,
					{
						frontDefault: '49f2077e.png',
						frontShiny: '6913c150.png',
						backDefault: '45f46d4b.png',
						backShiny: '9cfc98f2.png',
					},
					[Type.Fire],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CinderaceGmax,
			265,
			270,
			10000,
			[Type.Fire],
			{
				frontDefault: '2efd8166.png',
				frontShiny: '1b571360.png',
				backDefault: '40861929.png',
				backShiny: '9aaf58a4.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 116},
				[Stat.Defense]: {baseStat: 75},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 119, effort: 3},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Blaze,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Libero,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.CinderaceGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '2efd8166.png',
						frontShiny: '1b571360.png',
						backDefault: '40861929.png',
						backShiny: '9aaf58a4.png',
					},
					[Type.Fire],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Pyrobut Gigamax'],
						[Language.De]: ['Gigadynamax-Liberlo'],
						[Language.En]: ['Gigantamax Cinderace'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Sobble,
	50,
	45,
	Color.Blue,
	[EggGroup.Water1, EggGroup.Ground],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['メッソン'],
		[Language.Roomaji]: ['Messon'],
		[Language.Ko]: ['울머기'],
		[Language.ZhHant]: ['淚眼蜥'],
		[Language.Fr]: ['Larméléon'],
		[Language.De]: ['Memmeon'],
		[Language.Es]: ['Sobble'],
		[Language.It]: ['Sobble'],
		[Language.En]: ['Sobble'],
		[Language.Ja]: ['メッソン'],
		[Language.ZhHans]: ['泪眼蜥'],
	},
	{
		[Language.JaHrkt]: ['みずとかげポケモン'],
		[Language.Ko]: ['물도마뱀포켓몬'],
		[Language.ZhHant]: ['水蜥寶可夢'],
		[Language.Fr]: ['Pokémon Lézard’Eau'],
		[Language.De]: ['Wasserechsen-Pokémon'],
		[Language.Es]: ['Pokémon Acuartija'],
		[Language.It]: ['Pokémon Acquacertola'],
		[Language.En]: ['Water Lizard Pokémon'],
		[Language.Ja]: ['みずとかげポケモン'],
		[Language.ZhHans]: ['水蜥宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'おびえると　タマネギ１００コぶんの\nさいるいせいぶんを　もつ　なみだを\nながして　もらいなき　させる。',
			'ひふの　いろは　ぬれると　かわる。\nカモフラージュ　されたかの　ように\nすがたが　みえなく　なるのだ。',
		],
		[Language.Ko]: [
			'겁을 먹으면 양파 100개와 맞먹는\n최루 성분의 눈물을 흘려서\n상대도 덩달아 울게 만든다.',
			'젖으면 피부색이 변한다.\n위장한 것처럼\n모습이 보이지 않게 된다.',
		],
		[Language.ZhHant]: [
			'害怕時流下的淚水中含有\n相當於１００顆洋蔥的催淚成分，\n能讓對手淚流不止。',
			'皮膚在濕掉時會變色，\n彷彿像是隱身了一樣，\n誰都看不見牠的身影。',
		],
		[Language.Fr]: [
			'Quand il a peur, il pleure des larmes contenant\nune substance lacrymogène d’une puissance\néquivalente à celle de cent oignons.',
			'Sa peau change de couleur et le rend invisible\nquand elle est mouillée, comme un camouflage.',
		],
		[Language.De]: [
			'Hat es Angst, vergießt es Tränen, die Reizstoffe\nenthalten, welche andere ebenfalls zum Weinen\nbringen. Sie sind so stark wie 100 Zwiebeln.',
			'Wird seine Haut feucht, ändert sich ihre Farbe.\nDies dient ihm zur Tarnung, da man es dann\nnicht mehr sehen kann.',
		],
		[Language.Es]: [
			'Cuando se espanta, libera unas lágrimas con un\nfactor lacrimógeno equivalente a 100 cebollas\npara hacer llorar también al rival.',
			'Al mojarse, su piel cambia de color y pasa a ser\ninvisible, como si se hubiese camuflado.',
		],
		[Language.It]: [
			'Se si spaventa, produce lacrime con un fattore\nlacrimogeno cento volte più potente di quello di\nuna cipolla per far piangere anche i nemici.',
			'Quando si bagna, la pelle cambia colore e lo\nrende invisibile, come se si fosse mimetizzato.',
		],
		[Language.En]: [
			'When scared, this Pokémon cries. Its tears pack\nthe chemical punch of 100 onions, and attackers\nwon’t be able to resist weeping.',
			'When it gets wet, its skin changes color,\nand this Pokémon becomes invisible as if\nit were camouflaged.',
		],
		[Language.Ja]: [
			'怯えると　玉ねぎ１００個分の\n催涙成分を　もつ　涙を\n流して　もらい泣き　させる。',
			'皮膚の　色は　濡れると　変わる。\nカモフラージュ　されたかの　ように\n姿が　見えなく　なるのだ。',
		],
		[Language.ZhHans]: [
			'害怕时流下的泪水中含有\n相当于１００颗洋葱的催泪成分，\n能让对手泪流不止。',
			'皮肤在湿掉时会变色，\n仿佛像是隐身了一样，\n谁都看不见它的身影。',
		],
	},
	[
		[
			Variety.Sobble,
			62,
			3,
			40,
			[Type.Water],
			{
				frontDefault: '2920f003.png',
				frontShiny: '9e1c7b62.png',
				backDefault: '50e5f015.png',
				backShiny: '52ca8997.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 40},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 40, effort: 1},
				[Stat.Speed]: {baseStat: 70, effort: 1},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Growl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bind,
					8,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.HydroPump,
					Move.Haze,
					Move.Waterfall,
					Move.WaterPulse,
					Move.TeraBlast,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Mist,
					Move.DoubleTeam,
					Move.Haze,
					Move.AquaRing,
					Move.IceShard,
					Move.AquaJet,
					Move.FellStinger,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					6,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Surf,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.WeatherBall,
					Move.MuddyWater,
					Move.MudShot,
					Move.UTurn,
					Move.WaterPledge,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RainDance,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaterPulse,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TearfulLook,
					17,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Growl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bind,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Mist,
					Move.DoubleTeam,
					Move.Haze,
					Move.AquaRing,
					Move.IceShard,
					Move.AquaJet,
					Move.FellStinger,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					6,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Surf,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.Dive,
					Move.WeatherBall,
					Move.MuddyWater,
					Move.Bounce,
					Move.MudShot,
					Move.UTurn,
					Move.Round,
					Move.WorkUp,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RainDance,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterPulse,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.WaterPledge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TearfulLook,
					17,
				),
			].flat(),
			[
				{
					ability: Ability.Torrent,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Sniper,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Sobble,
					PokemonFormBits.Default,
					{
						frontDefault: '2920f003.png',
						frontShiny: '9e1c7b62.png',
						backDefault: '50e5f015.png',
						backShiny: '52ca8997.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Drizzile,
	50,
	45,
	Color.Blue,
	[EggGroup.Water1, EggGroup.Ground],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ジメレオン'],
		[Language.Roomaji]: ['Jimereon'],
		[Language.Ko]: ['누겔레온'],
		[Language.ZhHant]: ['變澀蜥'],
		[Language.Fr]: ['Arrozard'],
		[Language.De]: ['Phlegleon'],
		[Language.Es]: ['Drizzile'],
		[Language.It]: ['Drizzile'],
		[Language.En]: ['Drizzile'],
		[Language.Ja]: ['ジメレオン'],
		[Language.ZhHans]: ['变涩蜥'],
	},
	{
		[Language.JaHrkt]: ['みずとかげポケモン'],
		[Language.Ko]: ['물도마뱀포켓몬'],
		[Language.ZhHant]: ['水蜥寶可夢'],
		[Language.Fr]: ['Pokémon Lézard’Eau'],
		[Language.De]: ['Wasserechsen-Pokémon'],
		[Language.Es]: ['Pokémon Acuartija'],
		[Language.It]: ['Pokémon Acquacertola'],
		[Language.En]: ['Water Lizard Pokémon'],
		[Language.Ja]: ['みずとかげポケモン'],
		[Language.ZhHans]: ['水蜥宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ての　ひらから　でる　すいぶんを\nまるめて　つくった　みずの　たまを\nつかい　ずのうせんを　くりひろげる。',
			'あたまが　よく　めんどうくさがり。\nナワバリに　てきが　ちかづかないよう\nそこかしこに　ワナを　しかけている。',
		],
		[Language.Ko]: [
			'손바닥에서 나오는 수분을\n빚어서 만든 물구슬로\n두뇌 싸움을 펼친다.',
			'머리가 좋지만 귀찮음이 많다.\n영역에 적이 다가오지 못하게\n여기저기에 함정을 만들어 놓는다.',
		],
		[Language.ZhHant]: [
			'很有戰略頭腦，\n會把手掌分泌出的水分\n做成水彈攻擊敵人。',
			'頭腦聰明但是很怕麻煩。\n為了不讓敵人接近自己的地盤，\n在各個地方都設下了陷阱。',
		],
		[Language.Fr]: [
			'Il crée des bombes à eau grâce au liquide\nqu’il sécrète avec la paume de ses mains.\nIl s’en sert dans les combats où la stratégie prime.',
			'Paresseux, mais malin, il parsème son territoire\nde pièges pour empêcher ses ennemis\nd’y pénétrer.',
		],
		[Language.De]: [
			'Das Sekret, das aus seinen Handflächen austritt,\nformt es zu Wasserkugeln. Diese nutzt es im\nKampf für taktisch ausgeklügelte Angriffe.',
			'Es ist intelligent, fühlt sich aber schnell von jeder\nKleinigkeit genervt. Damit kein Feind in sein\nRevier eindringt, stellt es überall Fallen auf.',
		],
		[Language.Es]: [
			'Crea bolas de agua con el líquido que segrega\npor las palmas de las manos y las usa en combate\nde forma estratégica.',
			'Es inteligente, pero no muestra especial interés\npor nada. Distribuye trampas por su territorio\npara mantener alejados a sus enemigos.',
		],
		[Language.It]: [
			'Lotta in modo strategico servendosi di sfere\nche crea con l’acqua che fuoriesce dalle\nsue zampe.',
			'È intelligente ma svogliato. Dissemina di\ntrappole il suo territorio per tenere alla\nlarga i nemici.',
		],
		[Language.En]: [
			'A clever combatant, this Pokémon battles using\nwater balloons created with moisture secreted\nfrom its palms.',
			'Highly intelligent but also very lazy,\nit keeps enemies out of its territory\nby laying traps everywhere.',
		],
		[Language.Ja]: [
			'手のひらから　出る　水分を\n丸めて　つくった　水の　玉を\n使い　頭脳戦を　繰り広げる。',
			'頭が　よく　面倒くさがり。\n縄張りに　敵が　近づかないよう\nそこかしこに　罠を　仕掛けている。',
		],
		[Language.ZhHans]: [
			'很有战略头脑，\n会把手掌分泌出的水分\n做成水弹攻击敌人。',
			'头脑聪明但是怕麻烦。\n为了不让敌人接近自己的地盘，\n在各个地方都设下了陷阱。',
		],
	},
	[
		[
			Variety.Drizzile,
			147,
			7,
			115,
			[Type.Water],
			{
				frontDefault: 'ff523e1a.png',
				frontShiny: 'c8f563c8.png',
				backDefault: '65eff17c.png',
				backShiny: '59cd5258.png',
			},
			{
				[Stat.Hp]: {baseStat: 65},
				[Stat.Attack]: {baseStat: 60},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 95, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 55},
				[Stat.Speed]: {baseStat: 90},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Bind,
					Move.Growl,
					Move.WaterGun,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.HydroPump,
					Move.Haze,
					Move.Waterfall,
					Move.WaterPulse,
					Move.TeraBlast,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Mist,
					Move.DoubleTeam,
					Move.Haze,
					Move.AquaRing,
					Move.IceShard,
					Move.AquaJet,
					Move.FellStinger,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Surf,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.WeatherBall,
					Move.MuddyWater,
					Move.MudShot,
					Move.UTurn,
					Move.Fling,
					Move.WaterPledge,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RainDance,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaterPulse,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TearfulLook,
					19,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Bind,
					Move.Growl,
					Move.WaterGun,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Surf,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.Dive,
					Move.WeatherBall,
					Move.MuddyWater,
					Move.Bounce,
					Move.MudShot,
					Move.UTurn,
					Move.Fling,
					Move.Round,
					Move.WorkUp,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RainDance,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterPulse,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.WaterPledge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TearfulLook,
					19,
				),
			].flat(),
			[
				{
					ability: Ability.Torrent,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Sniper,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Drizzile,
					PokemonFormBits.Default,
					{
						frontDefault: 'ff523e1a.png',
						frontShiny: 'c8f563c8.png',
						backDefault: '65eff17c.png',
						backShiny: '59cd5258.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Inteleon,
	50,
	45,
	Color.Blue,
	[EggGroup.Water1, EggGroup.Ground],
	1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['インテレオン'],
		[Language.Roomaji]: ['Intereon'],
		[Language.Ko]: ['인텔리레온'],
		[Language.ZhHant]: ['千面避役'],
		[Language.Fr]: ['Lézargus'],
		[Language.De]: ['Intelleon'],
		[Language.Es]: ['Inteleon'],
		[Language.It]: ['Inteleon'],
		[Language.En]: ['Inteleon'],
		[Language.Ja]: ['インテレオン'],
		[Language.ZhHans]: ['千面避役'],
	},
	{
		[Language.JaHrkt]: ['エージェントポケモン'],
		[Language.Ko]: ['에이전트포켓몬'],
		[Language.ZhHant]: ['特工寶可夢'],
		[Language.Fr]: ['Pokémon Agent Secret'],
		[Language.De]: ['Geheimagenten-Pokémon'],
		[Language.Es]: ['Pokémon Agente'],
		[Language.It]: ['Pokémon Agente'],
		[Language.En]: ['Secret Agent Pokémon'],
		[Language.Ja]: ['エージェントポケモン'],
		[Language.ZhHans]: ['特工宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'たさいな　きのうを　かくしもつ。\nゆびから　みずを　ふんしゃして\nせなかの　ひまくで　かぜに　のる。',
			'ゆびさきから　はなつ　みずでっぽうは\nマッハ３の　はやさ。　しゅんまくで\nきゅうしょを　みぬいて　うちぬくぞ。',
		],
		[Language.Ko]: [
			'다채로운 기능을 숨기고 있다.\n손끝에서 물을 분사하고\n등에 있는 피막으로 바람을 탄다.',
			'손가락 끝에서 마하3의 스피드로\n물대포를 쏜다. 눈의 얇은 막으로\n급소를 간파해 꿰뚫어버린다.',
		],
		[Language.ZhHant]: [
			'身上隱藏著多種特殊能力，\n例如從手指噴射水流，\n以及用背部的翼膜滑翔等等。',
			'能從指尖射出速度高達３馬赫\n的水槍。牠的瞬膜能幫助牠看穿\n敵人的弱點，準確地擊中要害。',
		],
		[Language.Fr]: [
			'Il a plus d’un tour dans son sac : il peut tirer\ndes gerbes d’eau du bout de ses doigts et planer\ndans les airs grâce à ses membranes dorsales.',
			'Il repère le point faible de l’ennemi grâce à sa\nmembrane nictitante, puis il transperce sa cible en\ntirant des jets d’eau à Mach 3 du bout des doigts.',
		],
		[Language.De]: [
			'Zu seinen vielen geheimen Talenten gehört es,\nWasser aus den Fingern zu schießen und mit der\nMembran am Rücken durch die Lüfte zu segeln.',
			'Die Wasserschüsse aus seinen Fingern erreichen\nGeschwindigkeiten von bis zu Mach 3. Mit seiner\nNickhaut erkennt es Schwachpunkte des Gegners.',
		],
		[Language.Es]: [
			'Esconde algunos trucos bajo la manga: puede\ndisparar agua por los dedos o planear con las\nmembranas de su espalda.',
			'Dispara chorros de agua por la punta de los\ndedos a 3 mach de velocidad. Con su membrana\nnictitante puede ver los puntos débiles del rival.',
		],
		[Language.It]: [
			'Ha vari assi nella manica. Emette getti d’acqua\ndalle dita e si fa trasportare dal vento grazie\nalla membrana che ha sulla schiena.',
			'Spara getti d’acqua dalla punta delle dita a una\nvelocità di Mach 3. Grazie alle sue membrane\nnittitanti individua i punti deboli del nemico.',
		],
		[Language.En]: [
			'It has many hidden capabilities, such as fingertips\nthat can shoot water and a membrane on its back\nthat it can use to glide through the air.',
			'Its nictitating membranes let it pick out foes’\nweak points so it can precisely blast them with\nwater that shoots from its fingertips at Mach 3.',
		],
		[Language.Ja]: [
			'多彩な　機能を　隠し持つ。\n指から　水を　噴射して\n背中の　皮膜で　風に　乗る。',
			'指先から　放つ　水鉄砲は\nマッハ３の　速さ。　瞬膜で\n急所を　見抜いて　撃ちぬくぞ。',
		],
		[Language.ZhHans]: [
			'身上隐藏着多种特殊能力，\n例如从手指喷射水流，\n以及用背部的翼膜滑翔等等。',
			'能从指尖射出速度高达３马赫\n的水枪。它的瞬膜能帮助它看穿\n敌人的弱点，准确地击中要害。',
		],
	},
	[
		[
			Variety.Inteleon,
			265,
			19,
			452,
			[Type.Water],
			{
				frontDefault: '071ad87e.png',
				frontShiny: 'a004c9b5.png',
				backDefault: '39056a3b.png',
				backShiny: 'd6e1d40d.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 125},
				[Stat.SpecialDefense]: {baseStat: 65},
				[Stat.Speed]: {baseStat: 120, effort: 3},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Bind,
					Move.Growl,
					Move.WaterGun,
					Move.Acrobatics,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.RainDance,
					Move.ShadowBall,
					Move.Whirlpool,
					Move.Facade,
					Move.HydroCannon,
					Move.WeatherBall,
					Move.MuddyWater,
					Move.IcicleSpear,
					Move.MudShot,
					Move.UTurn,
					Move.Fling,
					Move.DarkPulse,
					Move.AirSlash,
					Move.GigaImpact,
					Move.Scald,
					Move.Acrobatics,
					Move.WaterPledge,
					Move.Liquidation,
					Move.BreakingSwipe,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Haze,
					Move.PsychUp,
					Move.Taunt,
					Move.AirCutter,
					Move.WaterPulse,
					Move.VacuumWave,
					Move.SmackDown,
					Move.SkitterSmack,
					Move.FlipTurn,
					Move.TeraBlast,
					Move.Snowscape,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Mist,
					Move.DoubleTeam,
					Move.Haze,
					Move.AquaRing,
					Move.IceShard,
					Move.AquaJet,
					Move.FellStinger,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HydroPump,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RainDance,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaterPulse,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TearfulLook,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SnipeShot,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Bind,
					Move.Growl,
					Move.WaterGun,
					Move.Acrobatics,
					Move.SnipeShot,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.FocusEnergy,
					Move.Metronome,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.RainDance,
					Move.ShadowBall,
					Move.Whirlpool,
					Move.Facade,
					Move.Dive,
					Move.WeatherBall,
					Move.MuddyWater,
					Move.IcicleSpear,
					Move.Bounce,
					Move.MudShot,
					Move.UTurn,
					Move.Fling,
					Move.DarkPulse,
					Move.AirSlash,
					Move.GigaImpact,
					Move.Round,
					Move.Scald,
					Move.Acrobatics,
					Move.WorkUp,
					Move.Liquidation,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HydroPump,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RainDance,
					54,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.HydroCannon,
					Move.WaterPledge,
					Move.ScaleShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterPulse,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TearfulLook,
					19,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SnipeShot,
				),
			].flat(),
			[
				{
					ability: Ability.Torrent,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Sniper,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Inteleon,
					PokemonFormBits.Default,
					{
						frontDefault: '071ad87e.png',
						frontShiny: 'a004c9b5.png',
						backDefault: '39056a3b.png',
						backShiny: 'd6e1d40d.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.InteleonGmax,
			265,
			400,
			10000,
			[Type.Water],
			{
				frontDefault: '4f0d8c57.png',
				frontShiny: 'd20cf9eb.png',
				backDefault: '7d42a3f5.png',
				backShiny: '9386d042.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 125},
				[Stat.SpecialDefense]: {baseStat: 65},
				[Stat.Speed]: {baseStat: 120, effort: 3},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Torrent,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Sniper,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.InteleonGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '4f0d8c57.png',
						frontShiny: 'd20cf9eb.png',
						backDefault: '7d42a3f5.png',
						backShiny: '9386d042.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Lézargus Gigamax'],
						[Language.De]: ['Gigadynamax-Intelleon'],
						[Language.En]: ['Gigantamax Inteleon'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Skwovet,
	50,
	255,
	Color.Brown,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ホシガリス'],
		[Language.Roomaji]: ['Hoshigarisu'],
		[Language.Ko]: ['탐리스'],
		[Language.ZhHant]: ['貪心栗鼠'],
		[Language.Fr]: ['Rongourmand'],
		[Language.De]: ['Raffel'],
		[Language.Es]: ['Skwovet'],
		[Language.It]: ['Skwovet'],
		[Language.En]: ['Skwovet'],
		[Language.Ja]: ['ホシガリス'],
		[Language.ZhHans]: ['贪心栗鼠'],
	},
	{
		[Language.JaHrkt]: ['ほおばりポケモン'],
		[Language.Ko]: ['볼가득포켓몬'],
		[Language.ZhHant]: ['貪吃寶可夢'],
		[Language.Fr]: ['Pokémon Joufflu'],
		[Language.De]: ['Raffbacken-Pokémon'],
		[Language.Es]: ['Pokémon Abazón'],
		[Language.It]: ['Pokémon Guancepiene'],
		[Language.En]: ['Cheeky Pokémon'],
		[Language.Ja]: ['ほおばりポケモン'],
		[Language.ZhHans]: ['贪吃宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ガラルの　いたるところに　いる。\nさゆうの　ほっぺに　きのみを\nたくわえていないと　ふあん。',
			'つねに　きのみを　くっているので\nみかけいじょうに　タフ。　きのみを\nねらって　はたけに　あらわれる。',
		],
		[Language.Ko]: [
			'가라르의 여기저기에 있다.\n양쪽 볼에 나무열매를\n비축해두지 않으면 불안해한다.',
			'항상 나무열매를 먹고 있어\n보기보다 튼튼하다. 나무열매를\n노리고 밭에 출몰한다.',
		],
		[Language.ZhHant]: [
			'在伽勒爾隨處可見。\n如果不往兩邊的頰囊裡\n塞滿樹果，就會感到不安。',
			'由於牠無論何時都在吃樹果，\n使得牠比外表看起來還要頑強。\n會出現在田地裡尋找樹果。',
		],
		[Language.Fr]: [
			'On le trouve partout à Galar. S’il n’a pas de Baies\nen réserve dans ses deux joues, il devient anxieux.',
			'Comme il mange tout le temps des Baies, il est\nplus costaud qu’il n’en a l’air. Il parcourt les\nchamps à la recherche de sa précieuse denrée.',
		],
		[Language.De]: [
			'Es ist überall in der Galar-Region anzutreffen.\nHat es keine Beeren, die es in seinen beiden\nBacken horten kann, wird es unruhig.',
			'Da es unentwegt Beeren futtert, ist es zäher als\nes aussieht. Man sieht es oft auf Feldern, wo es\nnach Beeren sucht.',
		],
		[Language.Es]: [
			'Este Pokémon se encuentra por todo Galar.\nNo se queda tranquilo hasta que tiene ambos\ncarrillos atiborrados de bayas.',
			'Siempre están comiendo bayas, por lo que son\nmás robustos de lo que aparentan. Frecuentan\nlos huertos en busca de su preciado manjar.',
		],
		[Language.It]: [
			'Si trova ovunque a Galar. Se non ha una scorta\ndi bacche dentro le guance, si fa prendere\ndall’ansia.',
			'Per via dell’abitudine di mangiare senza sosta,\nè più forte di quanto possa sembrare. Fa incetta\ndi bacche nei campi coltivati.',
		],
		[Language.En]: [
			'Found throughout the Galar region, this Pokémon\nbecomes uneasy if its cheeks are ever completely\nempty of berries.',
			'It eats berries nonstop—a habit that has made\nit more resilient than it looks. It’ll show up on\nfarms, searching for yet more berries.',
		],
		[Language.Ja]: [
			'ガラルの　いたるところに　いる。\n左右の　ほっぺに　木の実を\n蓄えていないと　不安。',
			'つねに　木の実を　食っているので\n見かけ以上に　タフ。　木の実を\n狙って　畑に　現れる。',
		],
		[Language.ZhHans]: [
			'在伽勒尔随处可见。\n如果不往两边的颊囊里\n塞满树果，就会感到不安。',
			'由于它无论何时都在吃树果，\n使得它比外表看起来还要顽强。\n会出现在田地里寻找树果。',
		],
	},
	[
		[
			Variety.Skwovet,
			55,
			3,
			25,
			[Type.Normal],
			{
				frontDefault: '16adaad3.png',
				frontShiny: 'a2b36123.png',
				backDefault: 'f4d0708e.png',
				backShiny: 'f93f3bff.png',
			},
			{
				[Stat.Hp]: {baseStat: 70, effort: 1},
				[Stat.Attack]: {baseStat: 55},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 35},
				[Stat.SpecialDefense]: {baseStat: 35},
				[Stat.Speed]: {baseStat: 25},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.Dig,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.MudShot,
					Move.GyroBall,
					Move.Fling,
					Move.SeedBomb,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.SuperFang,
					Move.Curse,
					Move.MudSlap,
					Move.Endeavor,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DefenseCurl,
					Move.BellyDrum,
					Move.Rollout,
					Move.LastResort,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Rest,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuperFang,
					40,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 15,
					},

					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Belch,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StuffCheeks,
					10,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.Dig,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.IronTail,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.MudShot,
					Move.GyroBall,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.SeedBomb,
					Move.Round,
					Move.TailSlap,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					30,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DefenseCurl,
					Move.BellyDrum,
					Move.Rollout,
					Move.LastResort,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Rest,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuperFang,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 15,
					},

					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Belch,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StuffCheeks,
					10,
				),
			].flat(),
			[
				{
					ability: Ability.CheekPouch,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Skwovet,
					PokemonFormBits.Default,
					{
						frontDefault: '16adaad3.png',
						frontShiny: 'a2b36123.png',
						backDefault: 'f4d0708e.png',
						backShiny: 'f93f3bff.png',
					},
					[Type.Normal],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Greedent,
	50,
	90,
	Color.Brown,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ヨクバリス'],
		[Language.Roomaji]: ['Yokubarisu'],
		[Language.Ko]: ['요씽리스'],
		[Language.ZhHant]: ['藏飽栗鼠'],
		[Language.Fr]: ['Rongrigou'],
		[Language.De]: ['Schlaraffel'],
		[Language.Es]: ['Greedent'],
		[Language.It]: ['Greedent'],
		[Language.En]: ['Greedent'],
		[Language.Ja]: ['ヨクバリス'],
		[Language.ZhHans]: ['藏饱栗鼠'],
	},
	{
		[Language.JaHrkt]: ['よくばりポケモン'],
		[Language.Ko]: ['욕심쟁이포켓몬'],
		[Language.ZhHant]: ['貪慾寶可夢'],
		[Language.Fr]: ['Pokémon Goulu'],
		[Language.De]: ['Gierschlund-Pokémon'],
		[Language.Es]: ['Pokémon Avaricia'],
		[Language.It]: ['Pokémon Ingordigia'],
		[Language.En]: ['Greedy Pokémon'],
		[Language.Ja]: ['よくばりポケモン'],
		[Language.ZhHans]: ['贪欲宝可梦'],
	},
	{
		[Language.Es]: [
			'Sus incisivos, de fuerza y dureza extraordinarias,\nle permiten mordisquear incluso las bayas más\nduras. Es un Pokémon muy común en Galar.',
			'Se obceca tanto en acumular bayas en la cola\nque no se da ni cuenta de cuando tiene\ndemasiadas y se le acaban cayendo.',
		],
		[Language.JaHrkt]: [
			'しっぽに　きのみを　ためこむ。\nためこみすぎて　ポロポロ　こぼすが\nにぶいので　きがつかない。',
			'どんなに　かたい　きのみの　からも\nじまんの　はで　ボリボリ　かじる。\nガラルでは　よく　みる　ポケモン。',
		],
		[Language.Ko]: [
			'꼬리에 나무열매를 모아둔다.\n너무 많이 모아둬서 툭툭 흘리지만\n둔감해서 눈치채지 못한다.',
			'아무리 단단한 나무열매 껍질도\n이빨로 아작아작 갉아 먹는다.\n가라르에서 쉽게 볼 수 있는 포켓몬이다.',
		],
		[Language.ZhHant]: [
			'在尾巴裡囤積樹果。\n雖然囤過頭了就會掉出來，\n但遲鈍的牠不會發現。',
			'無論多麼堅硬的樹果殼\n都能用引以為傲的大牙咬碎。\n在伽勒爾是很常見的寶可夢。',
		],
		[Language.Fr]: [
			'Il amasse tellement de Baies dans sa queue\nqu’elles tombent les unes après les autres, mais\nil est si étourdi qu’il ne s’en rend pas compte.',
			'On rencontre souvent ce Pokémon à Galar.\nAucune coquille de Baie ne résiste à ses incisives,\ndont il est très fier.',
		],
		[Language.De]: [
			'Es hortet in seinem Schweif Beeren. Versucht es,\nzu viele unterzubringen, fallen sie heraus. Da es\njedoch nicht allzu clever ist, bemerkt es das nicht.',
			'Diesem Pokémon begegnet man häufig in Galar.\nEs ist sehr stolz auf seine Zähne, mit denen es\njede noch so harte Beerenschale knacken kann.',
		],
		[Language.It]: [
			'Conserva talmente tante bacche nella coda\nche le perde una dopo l’altra, ma non essendo\nmolto perspicace non se ne rende conto.',
			'Un Pokémon che si incontra spesso a Galar.\nHa denti eccezionali, con i quali rosicchia anche\nle bacche più dure.',
		],
		[Language.En]: [
			'It stashes berries in its tail—so many berries that\nthey fall out constantly. But this Pokémon is a bit\nslow-witted, so it doesn’t notice the loss.',
			'Common throughout the Galar region, this\nPokémon has strong teeth and can chew\nthrough the toughest of berry shells.',
		],
		[Language.Ja]: [
			'しっぽに　木の実を　溜めこむ。\n溜めこみすぎて　ポロポロ　こぼすが\n鈍いので　気がつかない。',
			'どんなに　硬い　木の実の　殻も\n自慢の　歯で　ボリボリ　齧る。\nガラルでは　よく　見る　ポケモン。',
		],
		[Language.ZhHans]: [
			'在尾巴里囤积树果。\n虽然囤过头了就会掉出来，\n但是迟钝的它不会发现。',
			'无论多么坚硬的树果壳\n都能用引以为傲的大牙咬碎。\n在伽勒尔是很常见的宝可梦。',
		],
	},
	[
		[
			Variety.Greedent,
			161,
			6,
			60,
			[Type.Normal],
			{
				frontDefault: '6f390b49.png',
				frontShiny: '22e839b4.png',
				backDefault: '7b4b1bd4.png',
				backShiny: 'ed10f244.png',
			},
			{
				[Stat.Hp]: {baseStat: 120, effort: 2},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 55},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 20},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.MudShot,
					Move.GyroBall,
					Move.Fling,
					Move.SeedBomb,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.WildCharge,
					Move.PsychicFangs,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
					Move.Bite,
					Move.StuffCheeks,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.SuperFang,
					Move.Curse,
					Move.MudSlap,
					Move.RainDance,
					Move.SunnyDay,
					Move.KnockOff,
					Move.Endeavor,
					Move.Bulldoze,
					Move.HighHorsepower,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Rest,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuperFang,
					48,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 15,
					},

					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					41,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Covet,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Belch,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.IronTail,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.Superpower,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.MudShot,
					Move.GyroBall,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.SeedBomb,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.Round,
					Move.WildCharge,
					Move.TailSlap,
					Move.BrutalSwing,
					Move.PsychicFangs,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
					Move.Bite,
					Move.Covet,
					Move.StuffCheeks,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Rest,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuperFang,
					48,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 15,
					},

					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					41,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Covet,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Belch,
					55,
				),
			].flat(),
			[
				{
					ability: Ability.CheekPouch,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Greedent,
					PokemonFormBits.Default,
					{
						frontDefault: '6f390b49.png',
						frontShiny: '22e839b4.png',
						backDefault: '7b4b1bd4.png',
						backShiny: 'ed10f244.png',
					},
					[Type.Normal],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Rookidee,
	50,
	255,
	Color.Blue,
	[EggGroup.Flying],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.MediumSlow,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['ココガラ'],
		[Language.Roomaji]: ['Kokogara'],
		[Language.Ko]: ['파라꼬'],
		[Language.ZhHant]: ['稚山雀'],
		[Language.Fr]: ['Minisange'],
		[Language.De]: ['Meikro'],
		[Language.Es]: ['Rookidee'],
		[Language.It]: ['Rookidee'],
		[Language.En]: ['Rookidee'],
		[Language.Ja]: ['ココガラ'],
		[Language.ZhHans]: ['稚山雀'],
	},
	{
		[Language.JaHrkt]: ['ことりポケモン'],
		[Language.Ko]: ['아기새포켓몬'],
		[Language.ZhHant]: ['小鳥寶可夢'],
		[Language.Fr]: ['Pokémon Minoiseau'],
		[Language.De]: ['Kleinvogel-Pokémon'],
		[Language.Es]: ['Pokémon Pajarito'],
		[Language.It]: ['Pokémon Uccellino'],
		[Language.En]: ['Tiny Bird Pokémon'],
		[Language.Ja]: ['ことりポケモン'],
		[Language.ZhHans]: ['小鸟宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'どんな　きょうてきにも　いどみかかる\nゆうかんな　せいしつ。　かえりうちに\nあいながらも　きたえられていく。',
			'ちいさい　からだで　きびんに　とんで\nすきを　つく　せんぽうで　からだの\nおおきな　あいてを　てだまにとる。',
		],
		[Language.Ko]: [
			'아무리 강한 상대라도 덤벼드는\n용감한 성격을 가졌다. 도리어\n당하면서도 점점 단련되어 간다.',
			'작은 몸을 기민하게 날려\n틈을 노리는 전법으로\n몸집이 큰 상대를 농락한다.',
		],
		[Language.ZhHant]: [
			'性情勇敢，無論多強的敵人\n都勇於挑戰。即使在敵人的反擊中\n被打敗，也能從中得到鍛鍊。',
			'嬌小的體型讓牠能敏捷地飛翔。\n攻其不備的戰法將體型巨大\n的對手玩弄於股掌之間。',
		],
		[Language.Fr]: [
			'Ce Pokémon brave affronte même les adversaires\nles plus redoutables. Il devient plus fort à mesure\nqu’il subit les contre-attaques.',
			'Son petit corps lui permet de se jouer d’ennemis\nbien plus grands que lui en volant à toute vitesse\npour les piquer où ils sont vulnérables.',
		],
		[Language.De]: [
			'Es ist von Natur aus sehr mutig und fordert daher\njeden noch so starken Feind heraus. Selbst wenn\nes den Kürzeren zieht, dient dies seinem Training.',
			'Mit seinem kleinen Körper kann es flink fliegen\nund so mithilfe von trickreichen Taktiken größere\nGegner überlisten.',
		],
		[Language.Es]: [
			'De naturaleza valiente, planta cara a cualquier\nrival, por muy fuerte que sea. Los contraataques\nque recibe le sirven para fortalecerse.',
			'Su pequeño cuerpo le permite volar a gran\nvelocidad para golpear los puntos débiles de\nrivales mucho más grandes que él.',
		],
		[Language.It]: [
			'Ha un’indole temeraria che lo porta ad attaccare\nbriga anche con nemici molto forti. Diventa più\nforte a forza di subire contrattacchi.',
			'Sconfigge i nemici più grossi sfruttando le sue\npiccole dimensioni per volare con agilità attorno\na loro e colpirli nei punti deboli.',
		],
		[Language.En]: [
			'It will bravely challenge any opponent, no matter\nhow powerful. This Pokémon benefits from every\nbattle—even a defeat increases its strength a bit.',
			'Jumping nimbly about, this small-bodied\nPokémon takes advantage of even the slightest\nopportunity to disorient larger opponents.',
		],
		[Language.Ja]: [
			'どんな　強敵にも　挑みかかる\n勇敢な　性質。　返り討ちに\n遭いながらも　鍛えられていく。',
			'小さい　体で　機敏に　飛んで\n隙を　突く　戦法で　体の\n大きな　相手を　手玉に取る。',
		],
		[Language.ZhHans]: [
			'性格勇敢，无论多强的敌人\n都勇于挑战。即使在敌人的反击中\n被打败，也能从中得到锻炼。',
			'娇小的体型让它能敏捷地飞翔。\n利用攻其不备的战法将体型\n巨大的对手玩弄于股掌之间。',
		],
	},
	[
		[
			Variety.Rookidee,
			49,
			2,
			18,
			[Type.Flying],
			{
				frontDefault: '1a325719.png',
				frontShiny: '767cf42c.png',
				backDefault: '9fa5a66e.png',
				backShiny: '2778059b.png',
			},
			{
				[Stat.Hp]: {baseStat: 38},
				[Stat.Attack]: {baseStat: 47},
				[Stat.Defense]: {baseStat: 35},
				[Stat.SpecialAttack]: {baseStat: 33},
				[Stat.SpecialDefense]: {baseStat: 35},
				[Stat.Speed]: {baseStat: 57, effort: 1},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.FakeTears,
					Move.UTurn,
					Move.AirSlash,
					Move.BraveBird,
					Move.NastyPlot,
					Move.DualWingbeat,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.SkyAttack,
					Move.Spite,
					Move.RockSmash,
					Move.Roost,
					Move.Tailwind,
					Move.Defog,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Spite,
					Move.AirCutter,
					Move.AerialAce,
					Move.Tailwind,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Peck,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PowerTrip,
					4,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Agility,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Revenge,
					Move.FakeTears,
					Move.UTurn,
					Move.Payback,
					Move.Assurance,
					Move.AirSlash,
					Move.BraveBird,
					Move.NastyPlot,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.SkyAttack,
					Move.Spite,
					Move.RockSmash,
					Move.Roost,
					Move.Tailwind,
					Move.Defog,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Peck,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerTrip,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.KeenEye,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unnerve,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.BigPecks,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Rookidee,
					PokemonFormBits.Default,
					{
						frontDefault: '1a325719.png',
						frontShiny: '767cf42c.png',
						backDefault: '9fa5a66e.png',
						backShiny: '2778059b.png',
					},
					[Type.Flying],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Corvisquire,
	50,
	120,
	Color.Blue,
	[EggGroup.Flying],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.MediumSlow,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['アオガラス'],
		[Language.Roomaji]: ['Aogarasu'],
		[Language.Ko]: ['파크로우'],
		[Language.ZhHant]: ['藍鴉'],
		[Language.Fr]: ['Bleuseille'],
		[Language.De]: ['Kranoviz'],
		[Language.Es]: ['Corvisquire'],
		[Language.It]: ['Corvisquire'],
		[Language.En]: ['Corvisquire'],
		[Language.Ja]: ['アオガラス'],
		[Language.ZhHans]: ['蓝鸦'],
	},
	{
		[Language.JaHrkt]: ['カラスポケモン'],
		[Language.Ko]: ['까마귀포켓몬'],
		[Language.ZhHant]: ['烏鴉寶可夢'],
		[Language.Fr]: ['Pokémon Corbeau'],
		[Language.De]: ['Krähen-Pokémon'],
		[Language.Es]: ['Pokémon Cuervo'],
		[Language.It]: ['Pokémon Corvo'],
		[Language.En]: ['Raven Pokémon'],
		[Language.Ja]: ['カラスポケモン'],
		[Language.ZhHans]: ['乌鸦宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あしで　こいしを　つかんで　なげたり\nロープを　てきに　まきつけるなど\nどうぐを　あつかう　ちえを　もつ。',
			'きびしい　たたかいを　くぐりぬけて\nあいての　りきりょうを　せいかくに\nはんだんする　ちからが　みについた。',
		],
		[Language.Ko]: [
			'발로 돌멩이를 쥐어서 던지거나\n로프를 상대에게 휘감는 등\n도구를 다루는 지혜를 가졌다.',
			'혹독한 싸움을 헤쳐 나와\n상대의 역량을 정확히\n판단하는 힘을 습득했다.',
		],
		[Language.ZhHant]: [
			'頭腦聰明，懂得使用工具。\n會用爪子抓起小石頭投向敵人，\n或是用繩子把敵人綑住。',
			'歷經無數次艱難的戰鬥後，\n牠學會了該如何正確地\n判斷敵人的力量。',
		],
		[Language.Fr]: [
			'Il est capable d’utiliser des objets avec ses serres :\nil peut par exemple saisir et lancer des pierres\nou même enrouler une corde autour d’un ennemi.',
			'Après avoir surmonté tant de rudes combats,\nil a appris à déterminer avec précision\nla puissance de ses adversaires.',
		],
		[Language.De]: [
			'Es weiß Objekte geschickt einzusetzen. So greift\nund wirft es zum Beispiel kleine Steine mit seinen\nKrallen oder wickelt Seile um Gegner.',
			'Es hat viele heftige Kämpfe überstanden und\ndabei gelernt, die Stärke seiner Gegner stets\nkorrekt einzuschätzen.',
		],
		[Language.Es]: [
			'Su inteligencia le permite servirse de objetos. Por\nejemplo, recoge y lanza piedras con las patas, o\nutiliza cuerdas para atrapar a su oponente.',
			'Tras haber librado combates muy duros, ha\ndesarrollado la habilidad de determinar con\nprecisión la fuerza de su adversario.',
		],
		[Language.It]: [
			'È in grado di adoperare oggetti. Ad esempio,\nsa afferrare e scagliare pietre con le zampe\no avvolgere il nemico con una corda.',
			'Avendo affrontato lotte molto ardue, ha\nimparato a valutare con precisione la forza\ndel nemico.',
		],
		[Language.En]: [
			'Smart enough to use tools in battle, these\nPokémon have been seen picking up rocks and\nflinging them or using ropes to wrap up enemies.',
			'The lessons of many harsh battles have taught it\nhow to accurately judge an opponent’s strength.',
		],
		[Language.Ja]: [
			'足で　小石を　つかんで　投げたり\nロープを　敵に　巻きつけるなど\n道具を　あつかう　知恵を　もつ。',
			'厳しい　戦いを　くぐり抜けて\n相手の　力量を　正確に\n判断する　力が　身についた。',
		],
		[Language.ZhHans]: [
			'头脑聪明，懂得使用工具。\n会用爪子抓起小石头投向敌人，\n或是用绳子把敌人捆住。',
			'经历无数次艰难的战斗后，\n它学会了该如何正确地\n判断敌人的力量。',
		],
	},
	[
		[
			Variety.Corvisquire,
			128,
			8,
			160,
			[Type.Flying],
			{
				frontDefault: '54ed9620.png',
				frontShiny: 'a7561819.png',
				backDefault: '8cbc57a2.png',
				backShiny: '230a0d6e.png',
			},
			{
				[Stat.Hp]: {baseStat: 68},
				[Stat.Attack]: {baseStat: 67},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 43},
				[Stat.SpecialDefense]: {baseStat: 55},
				[Stat.Speed]: {baseStat: 77, effort: 2},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.FakeTears,
					Move.UTurn,
					Move.AirSlash,
					Move.BraveBird,
					Move.NastyPlot,
					Move.DualWingbeat,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Spite,
					Move.SunnyDay,
					Move.AirCutter,
					Move.AerialAce,
					Move.Tailwind,
					Move.Hurricane,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Peck,
					Move.HoneClaws,
					Move.PowerTrip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					46,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Agility,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Revenge,
					Move.FakeTears,
					Move.UTurn,
					Move.Payback,
					Move.Assurance,
					Move.AirSlash,
					Move.BraveBird,
					Move.NastyPlot,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Peck,
					Move.HoneClaws,
					Move.PowerTrip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.KeenEye,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unnerve,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.BigPecks,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Corvisquire,
					PokemonFormBits.Default,
					{
						frontDefault: '54ed9620.png',
						frontShiny: 'a7561819.png',
						backDefault: '8cbc57a2.png',
						backShiny: '230a0d6e.png',
					},
					[Type.Flying],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Corviknight,
	50,
	45,
	Color.Purple,
	[EggGroup.Flying],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.MediumSlow,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['アーマーガア'],
		[Language.Roomaji]: ['Armorga'],
		[Language.Ko]: ['아머까오'],
		[Language.ZhHant]: ['鋼鎧鴉'],
		[Language.Fr]: ['Corvaillus'],
		[Language.De]: ['Krarmor'],
		[Language.Es]: ['Corviknight'],
		[Language.It]: ['Corviknight'],
		[Language.En]: ['Corviknight'],
		[Language.Ja]: ['アーマーガア'],
		[Language.ZhHans]: ['钢铠鸦'],
	},
	{
		[Language.JaHrkt]: ['カラスポケモン'],
		[Language.Ko]: ['까마귀포켓몬'],
		[Language.ZhHant]: ['烏鴉寶可夢'],
		[Language.Fr]: ['Pokémon Corbeau'],
		[Language.De]: ['Krähen-Pokémon'],
		[Language.Es]: ['Pokémon Cuervo'],
		[Language.It]: ['Pokémon Corvo'],
		[Language.En]: ['Raven Pokémon'],
		[Language.Ja]: ['カラスポケモン'],
		[Language.ZhHans]: ['乌鸦宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ガラルちほうの　そらでは　てきなし。\nくろびかりする　はがねの　すがたは\nあいてを　いあつし　おそれさせる。',
			'ひこう　のうりょくに　すぐれていて\nとても　かしこいため　ガラルちほうで\nそらの　タクシーとして　かつやく。',
		],
		[Language.Ko]: [
			'가라르지방의 하늘에는 적수가 없다.\n검고 윤이 나는 강철의 자태는\n상대에게 위압감을 주어 겁먹게 만든다.',
			'비행 능력이 뛰어나고\n매우 영리해 가라르지방에서\n하늘의 택시로 활약한다.',
		],
		[Language.ZhHant]: [
			'在伽勒爾地區的空中所向無敵。\n牠那黑得發亮的鋼鐵之軀\n有著讓敵人畏懼的威懾力。',
			'擁有優秀飛行能力和\n極度聰明頭腦的牠在伽勒爾地區\n從事飛翔計程車的工作。',
		],
		[Language.Fr]: [
			'Il n’a aucun rival dans le ciel de Galar.\nL’aspect intimidant de son corps d’acier noir\net lustré inspire la crainte chez ses ennemis.',
			'Grâce à son adresse remarquable en vol\net sa grande intelligence, il travaille comme\ntaxi volant de Galar.',
		],
		[Language.De]: [
			'Niemand wagt es, ihm den Himmel über Galar\nstreitig zu machen. Sein schwarz glänzendes,\nstählernes Äußeres schüchtert jeden Gegner ein.',
			'Aufgrund seiner unübertroffenen Flugfertigkeiten\nund seiner hohen Intelligenz ist es in der\nGalar-Region als Flugtaxi im Einsatz.',
		],
		[Language.Es]: [
			'No tiene rival en los cielos de Galar. El acero\nnegro y lustroso de su cuerpo intimida a\ncualquier adversario.',
			'Debido a su excelente capacidad de vuelo y a su\ngran inteligencia, ejerce de taxi volador en Galar.',
		],
		[Language.It]: [
			'Nei cieli di Galar non ha rivali. La vista del suo\ncorpo di acciaio nero e lucente intimorisce\ni suoi avversari.',
			'È dotato di eccellenti capacità di volo e di\ngrande intelligenza. Nella regione di Galar si\nrende utile come taxi del cielo.',
		],
		[Language.En]: [
			'This Pokémon reigns supreme in the skies of the\nGalar region. The black luster of its steel body\ncould drive terror into the heart of any foe.',
			'With their great intellect and flying skills, these\nPokémon very successfully act as the Galar\nregion’s airborne taxi service.',
		],
		[Language.Ja]: [
			'ガラル地方の　空では　敵なし。\n黒光りする　鋼の　姿は\n相手を　威圧し　恐れさせる。',
			'飛行能力に　優れていて\nとても　賢いため　ガラル地方で\n空の　タクシーとして　活躍。',
		],
		[Language.ZhHans]: [
			'在伽勒尔地区的空中所向披靡。\n它那黑得发亮的钢铁之躯\n有着让敌人畏惧的威慑力。',
			'拥有优秀飞行能力和极度\n聪明头脑的它在伽勒尔地区\n从事飞翔出租车的工作。',
		],
	},
	[
		[
			Variety.Corviknight,
			248,
			22,
			750,
			[Type.Flying, Type.Steel],
			{
				frontDefault: 'ebb0103c.png',
				frontShiny: '4456cb1d.png',
				backDefault: '09092442.png',
			},
			{
				[Stat.Hp]: {baseStat: 98},
				[Stat.Attack]: {baseStat: 87},
				[Stat.Defense]: {baseStat: 105, effort: 3},
				[Stat.SpecialAttack]: {baseStat: 53},
				[Stat.SpecialDefense]: {baseStat: 85},
				[Stat.Speed]: {baseStat: 67},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.FakeTears,
					Move.IronDefense,
					Move.BulkUp,
					Move.UTurn,
					Move.AirSlash,
					Move.BraveBird,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.FlashCannon,
					Move.IronHead,
					Move.HeavySlam,
					Move.Hurricane,
					Move.BodyPress,
					Move.SteelBeam,
					Move.DualWingbeat,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Curse,
					Move.Spite,
					Move.MetalClaw,
					Move.RainDance,
					Move.SunnyDay,
					Move.AirCutter,
					Move.MetalSound,
					Move.AerialAce,
					Move.Tailwind,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Peck,
					Move.MetalSound,
					Move.IronDefense,
					Move.HoneClaws,
					Move.PowerTrip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					34,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					1,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SteelWing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Agility,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Revenge,
					Move.FakeTears,
					Move.IronDefense,
					Move.BulkUp,
					Move.UTurn,
					Move.Payback,
					Move.Assurance,
					Move.AirSlash,
					Move.BraveBird,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.FlashCannon,
					Move.IronHead,
					Move.HeavySlam,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.Hurricane,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Peck,
					Move.SteelWing,
					Move.MetalSound,
					Move.IronDefense,
					Move.HoneClaws,
					Move.PowerTrip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SteelWing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SteelBeam,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.Pressure,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unnerve,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MirrorArmor,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Corviknight,
					PokemonFormBits.Default,
					{
						frontDefault: 'ebb0103c.png',
						frontShiny: '4456cb1d.png',
						backDefault: '09092442.png',
					},
					[Type.Flying, Type.Steel],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CorviknightGmax,
			248,
			140,
			10000,
			[Type.Flying, Type.Steel],
			{
				frontDefault: '27d31a74.png',
				frontShiny: '78e20de9.png',
				backDefault: '6ca94416.png',
				backShiny: 'b118b23f.png',
			},
			{
				[Stat.Hp]: {baseStat: 98},
				[Stat.Attack]: {baseStat: 87},
				[Stat.Defense]: {baseStat: 105, effort: 3},
				[Stat.SpecialAttack]: {baseStat: 53},
				[Stat.SpecialDefense]: {baseStat: 85},
				[Stat.Speed]: {baseStat: 67},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Pressure,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unnerve,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MirrorArmor,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.CorviknightGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '27d31a74.png',
						frontShiny: '78e20de9.png',
						backDefault: '6ca94416.png',
						backShiny: 'b118b23f.png',
					},
					[Type.Flying, Type.Steel],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Corvaillus Gigamax'],
						[Language.De]: ['Gigadynamax-Krarmor'],
						[Language.En]: ['Gigantamax Corviknight'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Blipbug,
	50,
	255,
	Color.Blue,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Medium,
	Shape.Armor,
	{
		[Language.JaHrkt]: ['サッチムシ'],
		[Language.Roomaji]: ['Sacchimushi'],
		[Language.Ko]: ['두루지벌레'],
		[Language.ZhHant]: ['索偵蟲'],
		[Language.Fr]: ['Larvadar'],
		[Language.De]: ['Sensect'],
		[Language.Es]: ['Blipbug'],
		[Language.It]: ['Blipbug'],
		[Language.En]: ['Blipbug'],
		[Language.Ja]: ['サッチムシ'],
		[Language.ZhHans]: ['索侦虫'],
	},
	{
		[Language.JaHrkt]: ['ようちゅうポケモン'],
		[Language.Ko]: ['유충포켓몬'],
		[Language.ZhHant]: ['幼蟲寶可夢'],
		[Language.Fr]: ['Pokémon Larve'],
		[Language.De]: ['Larven-Pokémon'],
		[Language.Es]: ['Pokémon Pupa'],
		[Language.It]: ['Pokémon Coleolarva'],
		[Language.En]: ['Larva Pokémon'],
		[Language.Ja]: ['ようちゅうポケモン'],
		[Language.ZhHans]: ['幼虫宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'いつも　せっせと　じょうほうを\nあつめているので　かしこい。\nただし　ちからは　いまいちだ。',
			'はたけで　よくみかける　ポケモン。\nからだに　はえた　けで　まわりで\nおきていることを　かんじとる。',
		],
		[Language.Ko]: [
			'언제나 부지런히 정보를\n모으기 때문에 똑똑하다.\n단, 힘은 그저 그렇다.',
			'밭에서 자주 보이는 포켓몬이다.\n몸에 난 털로 주위에서\n일어나는 일을 감지한다.',
		],
		[Language.ZhHant]: [
			'總是孜孜不倦地收集情報，\n所以頭腦相當地聰明，\n但是力量方面就差了一些。',
			'經常出現在田地裡的寶可夢。\n會透過長在身體上的毛\n來感應周圍發生的事。',
		],
		[Language.Fr]: [
			'Comme il passe tout son temps à recueillir des\ninformations, son intelligence est très développée,\nmais sa force physique laisse à désirer.',
			'On le voit souvent dans les champs.\nLes poils de son corps lui servent à capter\nce qu’il se passe autour de lui.',
		],
		[Language.De]: [
			'Sensect ist ein schlaues Pokémon, da es immer\nfleißig Informationen sammelt. Seine Stärke lässt\njedoch zu wünschen übrig.',
			'Dieses Pokémon trifft man oft auf Feldern an.\nMit den Haaren, die an seinem Körper wachsen,\nspürt es, was in der Umgebung vor sich geht.',
		],
		[Language.Es]: [
			'Siempre está recopilando información, por lo\nque es muy inteligente, aunque su fuerza deja\nbastante que desear.',
			'Es habitual verlo en el campo. Los pelos que\ntiene son sensores con los que percibe lo que\nocurre a su alrededor.',
		],
		[Language.It]: [
			'Sempre impegnato a raccogliere informazioni,\nha sviluppato molto la sua intelligenza, ma non\nha una grande forza.',
			'Si incontra spesso nei campi. Le setole che\ncrescono sul suo corpo gli permettono di\npercepire ciò che accade attorno a lui.',
		],
		[Language.En]: [
			'A constant collector of information, this Pokémon\nis very smart. Very strong is what it isn’t.',
			'Often found in gardens, this Pokémon has hairs\non its body that it uses to assess its surroundings.',
		],
		[Language.Ja]: [
			'いつも　せっせと　情報を\n集めているので　賢い。\nただし　力は　いまいちだ。',
			'畑で　よく見かける　ポケモン。\n体に　生えた　毛で　まわりで\n起きていることを　感じとる。',
		],
		[Language.ZhHans]: [
			'总是孜孜不倦地收集情报，\n所以头脑相当地聪明，\n但力量方面就差了一些。',
			'经常出现在田地里的宝可梦。\n会通过长在身体上的毛\n来感应周围发生的事。',
		],
	},
	[
		[
			Variety.Blipbug,
			36,
			4,
			80,
			[Type.Bug],
			{
				frontDefault: 'c3a8fb22.png',
				frontShiny: 'd19d5aab.png',
				backDefault: '8302bb7f.png',
				backShiny: '4af8538d.png',
			},
			{
				[Stat.Hp]: {baseStat: 25},
				[Stat.Attack]: {baseStat: 20},
				[Stat.Defense]: {baseStat: 20},
				[Stat.SpecialAttack]: {baseStat: 25},
				[Stat.SpecialDefense]: {baseStat: 45, effort: 1},
				[Stat.Speed]: {baseStat: 45},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Supersonic,
					Move.Recover,
					Move.StickyWeb,
					Move.Infestation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StruggleBug,
					1,
				),
			].flat(),
			[
				{
					ability: Ability.Swarm,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.CompoundEyes,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Telepathy,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Blipbug,
					PokemonFormBits.Default,
					{
						frontDefault: 'c3a8fb22.png',
						frontShiny: 'd19d5aab.png',
						backDefault: '8302bb7f.png',
						backShiny: '4af8538d.png',
					},
					[Type.Bug],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Dottler,
	50,
	120,
	Color.Yellow,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Medium,
	Shape.Armor,
	{
		[Language.JaHrkt]: ['レドームシ'],
		[Language.Roomaji]: ['Redomushi'],
		[Language.Ko]: ['레돔벌레'],
		[Language.ZhHant]: ['天罩蟲'],
		[Language.Fr]: ['Coléodôme'],
		[Language.De]: ['Keradar'],
		[Language.Es]: ['Dottler'],
		[Language.It]: ['Dottler'],
		[Language.En]: ['Dottler'],
		[Language.Ja]: ['レドームシ'],
		[Language.ZhHans]: ['天罩虫'],
	},
	{
		[Language.JaHrkt]: ['レドームポケモン'],
		[Language.Ko]: ['레이돔포켓몬'],
		[Language.ZhHant]: ['天線罩寶可夢'],
		[Language.Fr]: ['Pokémon Radôme'],
		[Language.De]: ['Radarkuppel-Pokémon'],
		[Language.Es]: ['Pokémon Radomo'],
		[Language.It]: ['Pokémon Radome'],
		[Language.En]: ['Radome Pokémon'],
		[Language.Ja]: ['レドームポケモン'],
		[Language.ZhHans]: ['天线罩宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ほぼ　うごかないが　いきている。\nのまずくわずで　からに　こもるうち\nちょうのうりょくに　めざめたらしい。',
			'からの　なかで　せいちょうちゅう。\nサイコパワーで　そとの　ようすを\nうかがい　しんかに　そなえている。',
		],
		[Language.Ko]: [
			'거의 움직이지 않지만 살아 있다.\n식음을 전폐하고 껍질에 은둔하는 동안\n초능력에 눈을 뜬 모양이다.',
			'껍질 안에서 성장 중이다.\n사이코 파워로 밖의 상태를\n살피며 진화에 대비하고 있다.',
		],
		[Language.ZhHant]: [
			'雖然幾乎從來不動但還是活著的。\n牠的超能力似乎是在縮在殼裡\n不吃不喝的過程中覺醒的。',
			'正在殼裡成長著。\n用精神力量掌握外界的\n狀況，做好進化的準備。',
		],
		[Language.Fr]: [
			'Il ne bouge presque pas, mais il est bien vivant.\nOn dit qu’il aurait découvert ses pouvoirs\npsychiques à force de jeûner dans sa coquille.',
			'Il se développe dans sa coquille et se prépare\nà évoluer en sondant les alentours grâce\nà ses pouvoirs psychiques.',
		],
		[Language.De]: [
			'Obwohl es sich fast nie bewegt, ist es am Leben.\nEs sollen Psycho-Kräfte in ihm erwacht sein, als\nes ohne Nahrung in seinem Panzer ausharrte.',
			'Im Inneren seines Panzers wächst es. Während es\nsich auf die Entwicklung vorbereitet, prüft es mit\nseinen Psycho-Kräften, was im Freien geschieht.',
		],
		[Language.Es]: [
			'Apenas se mueve, pero está vivo. Se cree que\nadquiere poderes psíquicos mientras permanece\nrecluido en su caparazón sin comer ni beber.',
			'Está en constante crecimiento dentro del\ncaparazón. Mientras se prepara para evolucionar,\nexamina el exterior con sus poderes psíquicos.',
		],
		[Language.It]: [
			'Si muove appena, ma è vivo. Sembra che sviluppi\npoteri paranormali mentre se ne sta rintanato nel\nsuo guscio senza bere né mangiare.',
			'Continua a crescere dentro il suo guscio.\nIn attesa dell’evoluzione, percepisce il mondo\nesterno grazie ai suoi poteri psichici.',
		],
		[Language.En]: [
			'It barely moves, but it’s still alive. Hiding in its\nshell without food or water seems to have\nawakened its psychic powers.',
			'As it grows inside its shell, it uses its psychic\nabilities to monitor the outside world and\nprepare for evolution.',
		],
		[Language.Ja]: [
			'ほぼ　動かないが　生きている。\n飲まず食わずで　殻に　こもるうち\n超能力に　目覚めたらしい。',
			'殻の　中で　成長中。\nサイコパワーで　外の　様子を\nうかがい　進化に　備えている。',
		],
		[Language.ZhHans]: [
			'虽然几乎从来不动但还是活着的。\n它的超能力似乎是在缩在壳里\n不吃不喝的过程中觉醒的。',
			'正在壳里成长着。\n用精神力量掌握外界的\n状况，做好进化的准备。',
		],
	},
	[
		[
			Variety.Dottler,
			117,
			4,
			195,
			[Type.Bug, Type.Psychic],
			{
				frontDefault: 'fbb9e445.png',
				frontShiny: '8fc535c3.png',
				backDefault: '60973ebe.png',
				backShiny: '423cce43.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 35},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 50},
				[Stat.SpecialDefense]: {baseStat: 90, effort: 2},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SolarBeam,
					Move.Psychic,
					Move.LightScreen,
					Move.Reflect,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.IronDefense,
					Move.CalmMind,
					Move.Payback,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.BugBuzz,
					Move.EnergyBall,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.PsychicTerrain,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
					},

					Move.Confusion,
					Move.LightScreen,
					Move.Reflect,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.LightScreen,
					Move.Reflect,
					Move.StruggleBug,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.ExpandingForce,
				),
			].flat(),
			[
				{
					ability: Ability.Swarm,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.CompoundEyes,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Telepathy,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Dottler,
					PokemonFormBits.Default,
					{
						frontDefault: 'fbb9e445.png',
						frontShiny: '8fc535c3.png',
						backDefault: '60973ebe.png',
						backShiny: '423cce43.png',
					},
					[Type.Bug, Type.Psychic],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Orbeetle,
	50,
	45,
	Color.Red,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Medium,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['イオルブ'],
		[Language.Roomaji]: ['Eolb'],
		[Language.Ko]: ['이올브'],
		[Language.ZhHant]: ['以歐路普'],
		[Language.Fr]: ['Astronelle'],
		[Language.De]: ['Maritellit'],
		[Language.Es]: ['Orbeetle'],
		[Language.It]: ['Orbeetle'],
		[Language.En]: ['Orbeetle'],
		[Language.Ja]: ['イオルブ'],
		[Language.ZhHans]: ['以欧路普'],
	},
	{
		[Language.JaHrkt]: ['ななほしポケモン'],
		[Language.Ko]: ['칠성포켓몬'],
		[Language.ZhHant]: ['七星寶可夢'],
		[Language.Fr]: ['Pokémon Sept Points'],
		[Language.De]: ['Siebensterne-Pokémon'],
		[Language.Es]: ['Pokémon Siete Puntos'],
		[Language.It]: ['Pokémon Settepunti'],
		[Language.En]: ['Seven Spot Pokémon'],
		[Language.Ja]: ['ななほしポケモン'],
		[Language.ZhHans]: ['七星宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'かしこい　ポケモンとして　ゆうめい。\nおおきな　のうみそは　きょうりょくな\nサイコパワーを　もつ　あかし。',
			'サイコパワーを　はなち　しゅういを\nしらべている。　かんそくはんいは\nしゅうい　１０キロにも　たっするぞ。',
		],
		[Language.Ko]: [
			'똑똑한 포켓몬으로 유명하다.\n커다란 두뇌는 강력한\n사이코 파워를 가졌다는 증거다.',
			'사이코 파워를 발산해 주위를\n조사한다. 관측 범위는\n주변 10km에 달한다.',
		],
		[Language.ZhHant]: [
			'以頭腦聰慧而聞名。\n大大的腦子是牠擁有\n出眾精神力量的證明。',
			'釋放出精神力量來調查\n周圍的情況。牠的偵測範圍\n甚至可以達到方圓１０公里。',
		],
		[Language.Fr]: [
			'Il est renommé pour son intelligence.\nSon gros cerveau est un indicateur de la puissance\nde ses pouvoirs psychiques.',
			'Il déploie ses pouvoirs psychiques pour sonder\nles alentours, sur un rayon pouvant atteindre\n10 km.',
		],
		[Language.De]: [
			'Es ist allseits als sehr schlaues Pokémon bekannt.\nSein großes Gehirn ist ein Indiz dafür, dass es\nüber mächtige Psycho-Kräfte verfügt.',
			'Indem es Psycho-Kräfte ausstrahlt, erfasst es die\nUmgebung. Seine Observation umfasst dabei\neinen beeindruckenden Umkreis von 10 km.',
		],
		[Language.Es]: [
			'Este Pokémon es conocido por su inteligencia.\nEl gran tamaño de su cerebro es un indicio de\nla magnitud de sus poderes psíquicos.',
			'Se sirve de sus poderes psíquicos, con los que\nes capaz de percibir lo que ocurre en un radio\nde 10 km, para examinar sus alrededores.',
		],
		[Language.It]: [
			'Questo Pokémon è famoso per la sua\nintelligenza. Il cervello molto sviluppato è\nuna spia dei suoi fenomenali poteri psichici.',
			'Grazie ai suoi poteri psichici è in grado di tenere\nsotto controllo la situazione in un’area di ben\n10 km attorno a lui.',
		],
		[Language.En]: [
			'It’s famous for its high level of intelligence, and\nthe large size of its brain is proof that it also\npossesses immense psychic power.',
			'It emits psychic energy to observe and study\nwhat’s around it—and what’s around it can\ninclude things over six miles away.',
		],
		[Language.Ja]: [
			'賢い　ポケモンとして　有名。\n大きな　脳みそは　強力な\nサイコパワーを　もつ　証し。',
			'サイコパワーを　放ち　周囲を\n調べている。　観測範囲は\n周囲　１０キロにも　達するぞ。',
		],
		[Language.ZhHans]: [
			'以头脑聪慧而闻名。\n大大的脑子是它拥有\n出众精神力量的证明。',
			'释放出精神力量来调查\n周围的情况。它的侦测范围\n甚至可以达到方圆１０公里。',
		],
	},
	[
		[
			Variety.Orbeetle,
			253,
			4,
			408,
			[Type.Bug, Type.Psychic],
			{
				frontDefault: 'be872795.png',
				frontShiny: '7ff9f280.png',
				backDefault: '43071b49.png',
				backShiny: '433dfaa7.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 45},
				[Stat.Defense]: {baseStat: 110},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 120, effort: 3},
				[Stat.Speed]: {baseStat: 90},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					16,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.IronDefense,
					Move.CalmMind,
					Move.UTurn,
					Move.Payback,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.BugBuzz,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.PsychoCut,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.PsychicTerrain,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.LightScreen,
					Move.Reflect,
					Move.StruggleBug,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hypnosis,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ConfuseRay,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MirrorCoat,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MagicCoat,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BugBuzz,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AfterYou,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AllySwitch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PsychicTerrain,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.ExpandingForce,
				),
			].flat(),
			[
				{
					ability: Ability.Swarm,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Telepathy,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Orbeetle,
					PokemonFormBits.Default,
					{
						frontDefault: 'be872795.png',
						frontShiny: '7ff9f280.png',
						backDefault: '43071b49.png',
						backShiny: '433dfaa7.png',
					},
					[Type.Bug, Type.Psychic],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.OrbeetleGmax,
			253,
			140,
			10000,
			[Type.Bug, Type.Psychic],
			{
				frontDefault: 'cad06c68.png',
				frontShiny: '4846973c.png',
				backDefault: 'eb3273d4.png',
				backShiny: 'd281f013.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 45},
				[Stat.Defense]: {baseStat: 110},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 120, effort: 3},
				[Stat.Speed]: {baseStat: 90},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Swarm,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Telepathy,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.OrbeetleGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'cad06c68.png',
						frontShiny: '4846973c.png',
						backDefault: 'eb3273d4.png',
						backShiny: 'd281f013.png',
					},
					[Type.Bug, Type.Psychic],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Astronelle Gigamax'],
						[Language.De]: ['Gigadynamax-Maritellit'],
						[Language.En]: ['Gigantamax Orbeetle'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Nickit,
	50,
	255,
	Color.Brown,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Fast,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['クスネ'],
		[Language.Roomaji]: ['Kusune'],
		[Language.Ko]: ['훔처우'],
		[Language.ZhHant]: ['偷兒狐'],
		[Language.Fr]: ['Goupilou'],
		[Language.De]: ['Kleptifux'],
		[Language.Es]: ['Nickit'],
		[Language.It]: ['Nickit'],
		[Language.En]: ['Nickit'],
		[Language.Ja]: ['クスネ'],
		[Language.ZhHans]: ['狡小狐'],
	},
	{
		[Language.JaHrkt]: ['きつねポケモン'],
		[Language.Ko]: ['여우포켓몬'],
		[Language.ZhHant]: ['狐狸寶可夢'],
		[Language.Fr]: ['Pokémon Renard'],
		[Language.De]: ['Fuchs-Pokémon'],
		[Language.Es]: ['Pokémon Zorro'],
		[Language.It]: ['Pokémon Volpe'],
		[Language.En]: ['Fox Pokémon'],
		[Language.Ja]: ['きつねポケモン'],
		[Language.ZhHans]: ['狐狸宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ほかの　ポケモンが　みつけた　エサを\nかすめて　くらしている。　ふかふかの\nにくきゅうは　あしおとを　たてない。',
			'ようじん　ぶかく　ずるがしこい。\nエサを　ぬすむと　しっぽで\nあしあとを　けしながら　にげるのだ。',
		],
		[Language.Ko]: [
			'다른 포켓몬이 발견한 먹이를\n훔치며 산다. 푹신푹신한\n볼록살 덕분에 발소리가 나지 않는다.',
			'조심성이 많고 교활하다.\n먹이를 훔치고는 꼬리로\n발자국을 지우며 도망간다.',
		],
		[Language.ZhHant]: [
			'靠搶奪其他寶可夢找到的食物\n為生。腳上長著軟乎乎的肉球，\n走路時不會發出絲毫聲響。',
			'性情謹慎且狡猾。\n在偷盜食物逃走的時候\n會用尾巴擦掉自己的足跡。',
		],
		[Language.Fr]: [
			'Il vit en subtilisant la nourriture des autres\nPokémon. Grâce à ses coussinets moelleux,\nil ne fait aucun bruit quand il marche.',
			'Rusé et vigilant, il prend la poudre d’escampette\naprès avoir volé de la nourriture en prenant soin\nd’effacer ses traces de pas avec sa queue.',
		],
		[Language.De]: [
			'Es stibitzt Futter, das andere Pokémon gefunden\nhaben. Dank der samtweichen Ballen an seinen\nPfoten ist sein Gang lautlos.',
			'Es ist sehr vorsichtig und gerissen. Nachdem es\nFutter stibitzt hat, macht es sich davon und\nverwischt dabei seine Spuren mit seinem Schweif.',
		],
		[Language.Es]: [
			'Se sustenta con el alimento que roba a otros\nPokémon. Las almohadillas de sus patas son tan\nblandas que no hace ningún ruido al caminar.',
			'Prudente y astuto, borra con la cola las huellas\nque deja al huir tras robarle el alimento a otro\nPokémon.',
		],
		[Language.It]: [
			'Vive rubando il cibo trovato dagli altri Pokémon.\nI morbidi cuscinetti plantari rendono i suoi passi\nsilenziosi.',
			'È scaltro e molto prudente. Quando ruba\nil cibo, scappa cancellando le sue orme\ncon la coda.',
		],
		[Language.En]: [
			'Aided by the soft pads on its feet, it silently raids\nthe food stores of other Pokémon. It survives off\nits ill-gotten gains.',
			'Cunning and cautious, this Pokémon survives by\nstealing food from others. It erases its tracks with\nswipes of its tail as it makes off with its plunder.',
		],
		[Language.Ja]: [
			'ほかの　ポケモンが　みつけた　餌を\n掠めて　暮らしている。　ふかふかの\n肉球は　足音を　たてない。',
			'用心深く　ずる賢い。\nエサを　盗むと　しっぽで\n足跡を　消しながら　逃げるのだ。',
		],
		[Language.ZhHans]: [
			'靠抢夺其他宝可梦找到的食物\n为生。脚上长着软乎乎的肉球，\n走路时不会发出丝毫声响。',
			'性格谨慎且狡猾。\n在偷盗食物逃走的时候\n会用尾巴擦掉自己的足迹。',
		],
	},
	[
		[
			Variety.Nickit,
			49,
			6,
			89,
			[Type.Dark],
			{
				frontDefault: '032432e3.png',
				frontShiny: '86a7fedd.png',
				backDefault: 'd79fef41.png',
				backShiny: 'c3c99769.png',
			},
			{
				[Stat.Hp]: {baseStat: 40},
				[Stat.Attack]: {baseStat: 28},
				[Stat.Defense]: {baseStat: 28},
				[Stat.SpecialAttack]: {baseStat: 47},
				[Stat.SpecialDefense]: {baseStat: 52, effort: 1},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.QuickAttack,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Dig,
					Move.Agility,
					Move.Screech,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.BeatUp,
					Move.Facade,
					Move.Taunt,
					Move.FakeTears,
					Move.MudShot,
					Move.Assurance,
					Move.NastyPlot,
					Move.FoulPlay,
					Move.Round,
					Move.TailSlap,
					Move.Snarl,
					Move.PlayRough,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BeatUp,
					4,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Torment,
					Move.KnockOff,
					Move.Howl,
					Move.QuickGuard,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NightSlash,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TailSlap,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Snarl,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.RunAway,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unburden,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Stakeout,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Nickit,
					PokemonFormBits.Default,
					{
						frontDefault: '032432e3.png',
						frontShiny: '86a7fedd.png',
						backDefault: 'd79fef41.png',
						backShiny: 'c3c99769.png',
					},
					[Type.Dark],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Thievul,
	50,
	127,
	Color.Brown,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Fast,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['フォクスライ'],
		[Language.Roomaji]: ['Foxly'],
		[Language.Ko]: ['폭슬라이'],
		[Language.ZhHant]: ['狐大盜'],
		[Language.Fr]: ['Roublenard'],
		[Language.De]: ['Gaunux'],
		[Language.Es]: ['Thievul'],
		[Language.It]: ['Thievul'],
		[Language.En]: ['Thievul'],
		[Language.Ja]: ['フォクスライ'],
		[Language.ZhHans]: ['猾大狐'],
	},
	{
		[Language.JaHrkt]: ['きつねポケモン'],
		[Language.Ko]: ['여우포켓몬'],
		[Language.ZhHant]: ['狐狸寶可夢'],
		[Language.Fr]: ['Pokémon Renard'],
		[Language.De]: ['Fuchs-Pokémon'],
		[Language.Es]: ['Pokémon Zorro'],
		[Language.It]: ['Pokémon Volpe'],
		[Language.En]: ['Fox Pokémon'],
		[Language.Ja]: ['きつねポケモン'],
		[Language.ZhHans]: ['狐狸宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ねらった　エモノは　こっそり\nマーキング。　においを　たどって\nゆだん　したころ　ぬすみに　くるぞ。',
			'みがるな　からだと　するどい　ツメで\nエサや　タマゴを　ぬすんで　まわる。\nパルスワンが　てんてき。',
		],
		[Language.Ko]: [
			'목표로 한 먹잇감에 슬쩍 마킹을\n해둔다. 냄새를 따라가다 먹이의\n주인이 방심하고 있을 때 훔치려 든다.',
			'가벼운 몸과 날카로운 발톱으로\n먹이나 알을 훔치며 돌아다닌다.\n펄스멍이 천적이다.',
		],
		[Language.ZhHant]: [
			'會偷偷在看中的獵物身上\n留下標記，追蹤目標的氣味，\n在對方放鬆警戒時偷盜。',
			'靠著輕盈的身體和銳利的\n爪子到處去偷食物和蛋。\n逐電犬是牠的天敵。',
		],
		[Language.Fr]: [
			'Il marque sa victime pour la suivre à l’odeur.\nSitôt qu’elle est distraite, il s’empresse de lui\nvoler ses biens.',
			'Grâce à son corps leste et ses griffes acérées,\nil va et vient en dérobant Œufs et nourriture.\nSon ennemi juré est Fulgudog.',
		],
		[Language.De]: [
			'Es markiert heimlich die Beute, auf die es ein\nAuge geworfen hat. Dann folgt es dem Geruch\nund stiehlt sie, wenn sich die Gelegenheit bietet.',
			'Dank seines agilen Körpers und seiner scharfen\nKlauen ist es ihm ein Leichtes, überall Futter und\nEier zu stehlen. Bellektro ist sein Erzfeind.',
		],
		[Language.Es]: [
			'Marca a su presa sin ser advertido. Sigue el olor\ny, cuando el otro Pokémon baja la guardia,\naprovecha para robarle.',
			'Un Pokémon ágil y de afiladas garras que se\nalimenta de huevos y comida robados. Los\nBoltund son su enemigo natural.',
		],
		[Language.It]: [
			'Marca di nascosto le prede interessanti, ne segue\nl’odore per rintracciarle e approfitta di una loro\ndistrazione per rubare nelle loro tane.',
			'Se ne va in giro rubando Uova e cibo grazie\nal suo corpo agile e alle unghie affilate.\nIl suo nemico naturale è Boltund.',
		],
		[Language.En]: [
			'It secretly marks potential targets with a scent.\nBy following the scent, it stalks its targets\nand steals from them when they least expect it.',
			'With a lithe body and sharp claws, it goes\naround stealing food and eggs. Boltund\nis its natural enemy.',
		],
		[Language.Ja]: [
			'狙った　獲物は　こっそり\nマーキング。　においを　辿って\n油断　したころ　盗みに　来るぞ。',
			'身軽な　体と　鋭い　ツメで\nエサや　タマゴを　盗んで　まわる。\nパルスワンが　天敵。',
		],
		[Language.ZhHans]: [
			'会偷偷在看中的猎物身上\n留下标记，追踪目标的气味，\n在对方放松警戒时偷盗。',
			'靠着轻盈的身体和锐利的\n爪子到处去偷食物和蛋。\n逐电犬是它的天敌。',
		],
	},
	[
		[
			Variety.Thievul,
			159,
			12,
			199,
			[Type.Dark],
			{
				frontDefault: 'aa3eca3c.png',
				frontShiny: '331c413f.png',
				backDefault: '8525fad0.png',
				backShiny: 'fa9cbaa8.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 58},
				[Stat.Defense]: {baseStat: 58},
				[Stat.SpecialAttack]: {baseStat: 87},
				[Stat.SpecialDefense]: {baseStat: 92, effort: 2},
				[Stat.Speed]: {baseStat: 90},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.QuickAttack,
					Move.Thief,
					Move.BeatUp,
					Move.HoneClaws,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Dig,
					Move.Psychic,
					Move.Agility,
					Move.Screech,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Crunch,
					Move.ShadowBall,
					Move.BeatUp,
					Move.Facade,
					Move.Taunt,
					Move.FakeTears,
					Move.MudShot,
					Move.UTurn,
					Move.Assurance,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.GrassKnot,
					Move.FoulPlay,
					Move.Round,
					Move.Acrobatics,
					Move.TailSlap,
					Move.Snarl,
					Move.PlayRough,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thief,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NightSlash,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TailSlap,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Snarl,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PartingShot,
					52,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.BurningJealousy,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.RunAway,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unburden,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Stakeout,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Thievul,
					PokemonFormBits.Default,
					{
						frontDefault: 'aa3eca3c.png',
						frontShiny: '331c413f.png',
						backDefault: '8525fad0.png',
						backShiny: 'fa9cbaa8.png',
					},
					[Type.Dark],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Gossifleur,
	50,
	190,
	Color.Green,
	[EggGroup.Plant],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Blob,
	{
		[Language.JaHrkt]: ['ヒメンカ'],
		[Language.Roomaji]: ['Himenka'],
		[Language.Ko]: ['꼬모카'],
		[Language.ZhHant]: ['幼棉棉'],
		[Language.Fr]: ['Tournicoton'],
		[Language.De]: ['Cottini'],
		[Language.Es]: ['Gossifleur'],
		[Language.It]: ['Gossifleur'],
		[Language.En]: ['Gossifleur'],
		[Language.Ja]: ['ヒメンカ'],
		[Language.ZhHans]: ['幼棉棉'],
	},
	{
		[Language.JaHrkt]: ['はなかざりポケモン'],
		[Language.Ko]: ['꽃장식포켓몬'],
		[Language.ZhHant]: ['花飾寶可夢'],
		[Language.Fr]: ['Pokémon Chef-Fleur'],
		[Language.De]: ['Blumenzier-Pokémon'],
		[Language.Es]: ['Pokémon Adornofloral'],
		[Language.It]: ['Pokémon Fiorfronzolo'],
		[Language.En]: ['Flowering Pokémon'],
		[Language.Ja]: ['はなかざりポケモン'],
		[Language.ZhHans]: ['花饰宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'いっぽんあしを　じめんに　さして\nひのひかりを　たっぷり　あびると\nはなびらが　あざやかに　いろづく。',
			'そよかぜで　くるくる　まわりながら\nたのしそうに　うたう　あいらしさに\nみせられ　そだてる　ひとが　おおい。',
		],
		[Language.Ko]: [
			'다리 하나를 땅에 꽂은 채\n햇빛을 잔뜩 받으면\n꽃잎이 선명한 색을 띠게 된다.',
			'산들바람에 빙글빙글 돌면서\n즐겁게 노래하는 귀여운 모습에\n반해서 키우는 사람이 많다.',
		],
		[Language.ZhHant]: [
			'當牠把單腳紮進地面裡，\n並且沐浴充分的陽光，\n花瓣就會染上鮮豔的顏色。',
			'會隨著微風一邊轉圈圈一邊\n愉快地唱歌。許多人因為喜歡\n這可愛的模樣而培育牠。',
		],
		[Language.Fr]: [
			'Quand il plante son unique pied pour absorber\nla lumière du soleil, ses pétales prennent\nune couleur éclatante.',
			'Nombreux sont ceux qui ont décidé d’en élever\nun après avoir été charmés par sa manière\nde chanter en virevoltant au gré de la brise.',
		],
		[Language.De]: [
			'Steckt es sein Beinchen fest in den Boden und\nbadet dann ausgiebig im Sonnenlicht, nimmt\nseine Blüte eine kräftigere Farbe an.',
			'Viele Leute werden ihre Trainer, weil sie es\nniedlich finden, wie diese Pokémon in sanften\nBrisen herumwirbeln und voller Freude singen.',
		],
		[Language.Es]: [
			'Si planta su única extremidad inferior en la tierra\ny se expone a abundante luz solar, sus pétalos\ncobran un color vivo.',
			'Muchos los crían tras quedar prendados de lo\nadorables que resultan cuando cantan dando\nvueltas empujados por la brisa.',
		],
		[Language.It]: [
			'Quando conficca il suo piede nel terreno e\nassorbe luce solare in abbondanza, il colore\ndei suoi petali diventa più intenso.',
			'Canta felice girando su se stesso mentre si lascia\ntrasportare dal vento. Molti ne allenano uno\nsemplicemente perché lo trovano adorabile.',
		],
		[Language.En]: [
			'It anchors itself in the ground with its single leg,\nthen basks in the sun. After absorbing enough\nsunlight, its petals spread as it blooms brilliantly.',
			'It whirls around in the wind while singing a joyous\nsong. This delightful display has charmed many\ninto raising this Pokémon.',
		],
		[Language.Ja]: [
			'一本足を　地面に　刺して\n陽の光を　たっぷり　浴びると\n花びらが　鮮やかに　色づく。',
			'そよ風で　くるくる　回りながら\n楽しそうに　歌う　愛らしさに\n魅せられ　育てる　人が　多い。',
		],
		[Language.ZhHans]: [
			'当它把单脚扎进地面里，\n并且沐浴充分的阳光，\n花瓣就会染上鲜艳的颜色。',
			'会随着微风一边转圈圈一边\n愉快地唱歌。许多人因为喜欢\n这可爱的模样而培育它。',
		],
	},
	[
		[
			Variety.Gossifleur,
			50,
			4,
			22,
			[Type.Grass],
			{
				frontDefault: 'b03f3aae.png',
				frontShiny: '19d27b50.png',
				backDefault: 'c7051c54.png',
				backShiny: '1025d990.png',
			},
			{
				[Stat.Hp]: {baseStat: 40},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 60, effort: 1},
				[Stat.Speed]: {baseStat: 10},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Sing,
					Move.Leafage,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.LeechSeed,
					Move.Growth,
					Move.PoisonPowder,
					Move.StunSpore,
					Move.SleepPowder,
					Move.WorrySeed,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SolarBeam,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Facade,
					Move.HelpingHand,
					Move.HyperVoice,
					Move.BulletSeed,
					Move.MagicalLeaf,
					Move.EnergyBall,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Round,
					Move.GrassyTerrain,
					Move.PollenPuff,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RapidSpin,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SweetScent,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Synthesis,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperVoice,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeafStorm,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Round,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeafTornado,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.GrassyGlide,
				),
			].flat(),
			[
				{
					ability: Ability.CottonDown,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Regenerator,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.EffectSpore,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Gossifleur,
					PokemonFormBits.Default,
					{
						frontDefault: 'b03f3aae.png',
						frontShiny: '19d27b50.png',
						backDefault: 'c7051c54.png',
						backShiny: '1025d990.png',
					},
					[Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Eldegoss,
	50,
	75,
	Color.Green,
	[EggGroup.Plant],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Blob,
	{
		[Language.JaHrkt]: ['ワタシラガ'],
		[Language.Roomaji]: ['Watashiraga'],
		[Language.Ko]: ['백솜모카'],
		[Language.ZhHant]: ['白蓬蓬'],
		[Language.Fr]: ['Blancoton'],
		[Language.De]: ['Cottomi'],
		[Language.Es]: ['Eldegoss'],
		[Language.It]: ['Eldegoss'],
		[Language.En]: ['Eldegoss'],
		[Language.Ja]: ['ワタシラガ'],
		[Language.ZhHans]: ['白蓬蓬'],
	},
	{
		[Language.JaHrkt]: ['わたかざりポケモン'],
		[Language.Ko]: ['솜장식포켓몬'],
		[Language.ZhHant]: ['棉飾寶可夢'],
		[Language.Fr]: ['Pokémon Chef-Coton'],
		[Language.De]: ['Baumwollzier-Pokémon'],
		[Language.Es]: ['Pokémon Adornalgodón'],
		[Language.It]: ['Pokémon Cotofronzolo'],
		[Language.En]: ['Cotton Bloom Pokémon'],
		[Language.Ja]: ['わたかざりポケモン'],
		[Language.ZhHans]: ['棉饰宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'わたげの　タネは　えいようまんてん。\nかぜに　のせて　とばして　くさきや\nポケモンたちを　げんきにさせる。',
			'あたまの　わたげで　つくった　いとは\nこうたくがあり　とても　うつくしい。\nガラルちほうの　めいさんひん。',
		],
		[Language.Ko]: [
			'솜털이 붙은 씨는 영양 만점이다.\n씨를 바람에 날려서 초목과\n포켓몬들을 건강하게 만든다.',
			'머리의 솜털로 만든 실은\n윤이 나고 매우 아름답다.\n가라르지방의 특산품이다.',
		],
		[Language.ZhHant]: [
			'棉絮的種子營養豐富。\n牠會藉由風散播種子，\n讓草木和寶可夢變得活力十足。',
			'用牠頭上的棉絮製成的線\n有著十分美麗動人的光澤，\n是伽勒爾地區的名產。',
		],
		[Language.Fr]: [
			'Les graines de son duvet sont remplies\nde nutriments. Elles sont emportées par le vent\net redonnent vitalité aux plantes et aux Pokémon.',
			'Les fils tissés à partir du duvet sur sa tête sont\nsatinés et absolument somptueux. Le textile ainsi\ncréé est typique de la région de Galar.',
		],
		[Language.De]: [
			'Die Saat seines Wollflaums steckt voller\nNährstoffe. Es verstreut sie im Wind und heilt\ndamit Pflanzen und Pokémon.',
			'Aus dem Flaum auf seinem Kopf werden\nwunderschöne, glänzende Fäden gesponnen.\nDie Galar-Region ist bekannt für dieses Produkt.',
		],
		[Language.Es]: [
			'Las semillas que tiene entre la pelusa son muy\nnutritivas. Arrastradas por el viento, devuelven\nla vitalidad a la flora y a otros Pokémon.',
			'El hilo fabricado a partir de su algodón es muy\nbello y brillante; uno de los productos estrella\nde la región de Galar.',
		],
		[Language.It]: [
			'I suoi semi lanuginosi, ricchi di sostanze nutritive,\nvengono trasportati dal vento e donano nuova\nenergia a piante e Pokémon.',
			'I fili realizzati con la lanugine del suo capo sono\nparticolarmente belli e lucenti. Sono un prodotto\ntipico di Galar.',
		],
		[Language.En]: [
			'The seeds attached to its cotton fluff are full of\nnutrients. It spreads them on the wind so that\nplants and other Pokémon can benefit from them.',
			'The cotton on the head of this Pokémon can be\nspun into a glossy, gorgeous yarn—a Galar\nregional specialty.',
		],
		[Language.Ja]: [
			'綿毛の　種は　栄養満点。\n風に　乗せて　飛ばして　草木や\nポケモンたちを　元気にさせる。',
			'頭の　綿毛で　つくった　糸は\n光沢があり　とても　美しい。\nガラル地方の　名産品。',
		],
		[Language.ZhHans]: [
			'棉絮的种子营养丰富。\n它会通过风散播种子，\n让草木和宝可梦变得活力十足。',
			'用它头上的棉絮制成的线\n有着十分美丽动人的光泽，\n是伽勒尔地区的名产。',
		],
	},
	[
		[
			Variety.Eldegoss,
			161,
			5,
			25,
			[Type.Grass],
			{
				frontDefault: '2d6fb5f6.png',
				frontShiny: '277b0046.png',
				backDefault: 'e249b145.png',
				backShiny: 'd019332f.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 50},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 120, effort: 2},
				[Stat.Speed]: {baseStat: 60},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Sing,
					Move.CottonSpore,
					Move.RapidSpin,
					Move.SweetScent,
					Move.Leafage,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Facade,
					Move.HelpingHand,
					Move.HyperVoice,
					Move.WeatherBall,
					Move.BulletSeed,
					Move.MagicalLeaf,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Round,
					Move.GrassyTerrain,
					Move.PollenPuff,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RazorLeaf,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CottonSpore,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Synthesis,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperVoice,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeafStorm,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Round,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeafTornado,
					23,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CottonGuard,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.GrassyGlide,
				),
			].flat(),
			[
				{
					ability: Ability.CottonDown,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Regenerator,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.EffectSpore,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Eldegoss,
					PokemonFormBits.Default,
					{
						frontDefault: '2d6fb5f6.png',
						frontShiny: '277b0046.png',
						backDefault: 'e249b145.png',
						backShiny: 'd019332f.png',
					},
					[Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Wooloo,
	50,
	255,
	Color.White,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ウールー'],
		[Language.Roomaji]: ['Wooluu'],
		[Language.Ko]: ['우르'],
		[Language.ZhHant]: ['毛辮羊'],
		[Language.Fr]: ['Moumouton'],
		[Language.De]: ['Wolly'],
		[Language.Es]: ['Wooloo'],
		[Language.It]: ['Wooloo'],
		[Language.En]: ['Wooloo'],
		[Language.Ja]: ['ウールー'],
		[Language.ZhHans]: ['毛辫羊'],
	},
	{
		[Language.JaHrkt]: ['ひつじポケモン'],
		[Language.Ko]: ['양포켓몬'],
		[Language.ZhHant]: ['綿羊寶可夢'],
		[Language.Fr]: ['Pokémon Mouton'],
		[Language.De]: ['Schaf-Pokémon'],
		[Language.Es]: ['Pokémon Oveja'],
		[Language.It]: ['Pokémon Pecora'],
		[Language.En]: ['Sheep Pokémon'],
		[Language.Ja]: ['ひつじポケモン'],
		[Language.ZhHans]: ['绵羊宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'パーマの　かかった　たいもうは\nたかい　クッションせいが　ある。\nがけから　おちても　へっちゃら。',
			'けが　のびすぎると　うごけない。\nウールーの　たいもうで　おられた\nぬのは　おどろくほど　じょうぶ。',
		],
		[Language.Ko]: [
			'곱슬곱슬한 털은\n훌륭한 쿠션 역할을 한다.\n절벽에서 떨어져도 아무렇지도 않다.',
			'털이 많이 자라면 움직이지 못한다.\n우르의 털로 짠 천은\n놀라울 정도로 튼튼하다.',
		],
		[Language.ZhHant]: [
			'捲捲的體毛彈性十足。\n就算從懸崖上掉下去，\n也不會受傷。',
			'要是身上的毛長得太長就會\n不能動彈。用毛辮羊的體毛\n織成的布結實得讓人吃驚。',
		],
		[Language.Fr]: [
			'Son pelage frisé est doux et rebondi comme\nun coussin. Une telle toison le protègerait\nmême s’il chutait d’une falaise.',
			'Si ses poils poussent trop, il ne peut plus bouger.\nLes étoffes tissées avec son pelage\nsont étonnamment solides.',
		],
		[Language.De]: [
			'Sein stark gelocktes Fell hat eine sehr polsternde\nWirkung. Selbst eine Klippe hinunterzufallen\nmacht ihm nichts aus.',
			'Werden seine Haare zu lang, kann es sich nicht\nmehr bewegen. Der aus Wollys Wolle gewobene\nStoff ist unglaublich robust.',
		],
		[Language.Es]: [
			'Su lana rizada es tan acolchada que no se hace\ndaño ni aunque se caiga por un precipicio.',
			'Si le crece el pelo demasiado, no puede\nmoverse. Las telas confeccionadas con lana de\nWooloo son sorprendentemente resistentes.',
		],
		[Language.It]: [
			'Il suo vello riccioluto gli fornisce una perfetta\nimbottitura. Non si farebbe nulla nemmeno\ncadendo da un precipizio.',
			'Se gli cresce troppo il pelo, non riesce più a\nmuoversi. Il tessuto fatto con la sua lana è\nsorprendentemente resistente.',
		],
		[Language.En]: [
			'Its curly fleece is such an effective cushion that\nthis Pokémon could fall off a cliff and stand right\nback up at the bottom, unharmed.',
			'If its fleece grows too long, Wooloo won’t be\nable to move. Cloth made with the wool of this\nPokémon is surprisingly strong.',
		],
		[Language.Ja]: [
			'パーマの　かかった　体毛は\n高い　クッション性が　ある。\n崖から　落ちても　へっちゃら。',
			'毛が　伸びすぎると　動けない。\nウールーの　体毛で　織られた\n布は　驚くほど　丈夫。',
		],
		[Language.ZhHans]: [
			'卷卷的体毛弹性十足。\n就算从悬崖上掉下去，\n也不会受伤。',
			'要是身上的毛长得太长就会\n不能动弹。用毛辫羊的体毛\n织成的布结实得让人吃惊。',
		],
	},
	[
		[
			Variety.Wooloo,
			122,
			6,
			60,
			[Type.Normal],
			{
				frontDefault: '56790dd4.png',
				frontShiny: '24b5087c.png',
				backDefault: '0ba729cf.png',
				backShiny: '837c8896.png',
			},
			{
				[Stat.Hp]: {baseStat: 42},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 55, effort: 1},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 45},
				[Stat.Speed]: {baseStat: 48},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Stomp,
					Move.Counter,
					Move.Swagger,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					21,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Agility,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Payback,
					Move.GuardSwap,
					Move.ElectroBall,
					Move.Round,
					Move.WildCharge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DefenseCurl,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Reversal,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Copycat,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GuardSwap,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GuardSplit,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CottonGuard,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.GrassyGlide,
				),
			].flat(),
			[
				{
					ability: Ability.Fluffy,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.RunAway,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Bulletproof,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Wooloo,
					PokemonFormBits.Default,
					{
						frontDefault: '56790dd4.png',
						frontShiny: '24b5087c.png',
						backDefault: '0ba729cf.png',
						backShiny: '837c8896.png',
					},
					[Type.Normal],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Dubwool,
	50,
	127,
	Color.White,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['バイウールー'],
		[Language.Roomaji]: ['Baiwooluu'],
		[Language.Ko]: ['배우르'],
		[Language.ZhHant]: ['毛毛角羊'],
		[Language.Fr]: ['Moumouflon'],
		[Language.De]: ['Zwollock'],
		[Language.Es]: ['Dubwool'],
		[Language.It]: ['Dubwool'],
		[Language.En]: ['Dubwool'],
		[Language.Ja]: ['バイウールー'],
		[Language.ZhHans]: ['毛毛角羊'],
	},
	{
		[Language.JaHrkt]: ['ひつじポケモン'],
		[Language.Ko]: ['양포켓몬'],
		[Language.ZhHant]: ['綿羊寶可夢'],
		[Language.Fr]: ['Pokémon Mouton'],
		[Language.De]: ['Schaf-Pokémon'],
		[Language.Es]: ['Pokémon Oveja'],
		[Language.It]: ['Pokémon Pecora'],
		[Language.En]: ['Sheep Pokémon'],
		[Language.Ja]: ['ひつじポケモン'],
		[Language.ZhHans]: ['绵羊宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'だんりょくの　ある　けで　おった\nカーペットは　トランポリンみたいで\nのれば　ピョンピョン　はねるのだ。',
			'りっぱに　のびた　ツノは　いせいに\nアピールするために　はえている。\nぶきとして　つかうことはない。',
		],
		[Language.Ko]: [
			'탄력 있는 털로 짜낸\n카펫은 트램펄린 같아서\n올라가면 통통 튀어 오르게 된다.',
			'늠름하게 자란 뿔은 이성에게\n어필하기 위한 것이다.\n무기로는 사용하지 않는다.',
		],
		[Language.ZhHant]: [
			'用牠那彈力十足的毛\n織成的地毯就像是彈簧墊，\n可以站上去蹦蹦跳。',
			'長得長長的角是為了\n向異性求愛而存在的。\n牠從不會把角當作武器。',
		],
		[Language.Fr]: [
			'La texture de sa laine est si élastique que\nla surface des tapis fabriqués avec ce matériau\nest aussi rebondissante que celle d’un trampoline.',
			'Ses splendides cornes lui servent à attirer\nles membres de l’autre sexe.\nIl ne s’en sert jamais pour se battre.',
		],
		[Language.De]: [
			'Spannt man einen aus den elastischen Haaren\nvon Zwollock gewobenen Teppich auf, kann man\ndarauf hüpfen wie auf einem Trampolin.',
			'Seine prächtig gewachsenen Hörner dienen dazu,\ndem anderen Geschlecht zu imponieren. Es nutzt\nsie nicht als Waffe.',
		],
		[Language.Es]: [
			'Su lana es muy flexible. Las alfombras tejidas con\nella adoptan una textura similar a la de las camas\nelásticas.',
			'Sus espléndidos cuernos sirven de reclamo para\natraer al sexo opuesto. No los utiliza como arma.',
		],
		[Language.It]: [
			'I tappeti realizzati con i suoi peli sono talmente\nelastici che saltandoci sopra si rimbalza come\nsu un trampolino.',
			'Le sue magnifiche corna hanno la funzione\ndi attirare gli individui di sesso opposto.\nNon le usa mai per attaccare.',
		],
		[Language.En]: [
			'Weave a carpet from its springy wool, and you end\nup with something closer to a trampoline. You’ll\nstart to bounce the moment you set foot on it.',
			'Its majestic horns are meant only to impress the\nopposite gender. They never see use in battle.',
		],
		[Language.Ja]: [
			'弾力の　ある　毛で　織った\nカーペットは　トランポリンみたいで\n乗れば　ピョンピョン　跳ねるのだ。',
			'立派に　伸びた　ツノは　異性に\nアピールするために　生えている。\n武器として　使うことはない。',
		],
		[Language.ZhHans]: [
			'用它那弹力十足的毛\n织成的地毯就像是弹簧垫，\n可以站上去蹦蹦跳。',
			'长得长长的角是为了\n向异性求爱而存在的。\n它从不会把角当做武器。',
		],
	},
	[
		[
			Variety.Dubwool,
			172,
			13,
			430,
			[Type.Normal],
			{
				frontDefault: 'fdf235b5.png',
				frontShiny: 'ea872259.png',
				backDefault: '79523f5c.png',
				backShiny: 'b16ff970.png',
			},
			{
				[Stat.Hp]: {baseStat: 72},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 100, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 88},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.ThunderWave,
					Move.Agility,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Facade,
					Move.Bounce,
					Move.Payback,
					Move.GuardSwap,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.ElectroBall,
					Move.Round,
					Move.Retaliate,
					Move.WildCharge,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					21,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.DefenseCurl,
					Move.Copycat,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Reversal,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GuardSwap,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GuardSplit,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CottonGuard,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.GrassyGlide,
				),
			].flat(),
			[
				{
					ability: Ability.Fluffy,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Steadfast,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Bulletproof,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Dubwool,
					PokemonFormBits.Default,
					{
						frontDefault: 'fdf235b5.png',
						frontShiny: 'ea872259.png',
						backDefault: '79523f5c.png',
						backShiny: 'b16ff970.png',
					},
					[Type.Normal],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Chewtle,
	50,
	255,
	Color.Green,
	[EggGroup.Monster, EggGroup.Water1],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['カムカメ'],
		[Language.Roomaji]: ['Kamukame'],
		[Language.Ko]: ['깨물부기'],
		[Language.ZhHant]: ['咬咬龜'],
		[Language.Fr]: ['Khélocrok'],
		[Language.De]: ['Kamehaps'],
		[Language.Es]: ['Chewtle'],
		[Language.It]: ['Chewtle'],
		[Language.En]: ['Chewtle'],
		[Language.Ja]: ['カムカメ'],
		[Language.ZhHans]: ['咬咬龟'],
	},
	{
		[Language.JaHrkt]: ['くいつきポケモン'],
		[Language.Ko]: ['물고늘어지기포켓몬'],
		[Language.ZhHant]: ['咬住寶可夢'],
		[Language.Fr]: ['Pokémon Mordillage'],
		[Language.De]: ['Schnapp-Pokémon'],
		[Language.Es]: ['Pokémon Mordedura'],
		[Language.It]: ['Pokémon Mordace'],
		[Language.En]: ['Snapping Pokémon'],
		[Language.Ja]: ['くいつきポケモン'],
		[Language.ZhHans]: ['咬住宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'めのまえの　ものに　すぐに　かみつく\nしゅうせい。　はえかけの　まえばが\nかゆいので　かみついてしまうらしい。',
			'あたまの　ツノは　いわの　かたさ。\nツノで　たたかい　ひるんだ　すきに\nパクリと　かみつき　はなさない。',
		],
		[Language.Ko]: [
			'눈앞에 있는 것은 바로 물어버리는\n습성을 가졌다. 나고 있는 앞니가\n근질거려서 물게 된다는 듯하다.',
			'머리 뿔은 바위처럼 단단하다.\n뿔로 싸우다가 풀이 죽은 틈에\n덥석 물고 놓지 않는다.',
		],
		[Language.ZhHant]: [
			'有著不管看到什麼都會咬上去\n的習性。這似乎是因為長門牙\n的時候會癢的緣故。',
			'會用頭上硬如岩石的角攻擊敵人。\n趁其不備之時大口咬住對方，\n一旦咬住便再也不會鬆口。',
		],
		[Language.Fr]: [
			'Il a pour habitude de mordre tout ce qui lui passe\nsous les yeux. On raconte qu’il fait cela parce que\nses incisives qui poussent le démangent.',
			'La corne sur sa tête est aussi dure que la roche.\nIl s’en sert pour se battre et lorsque l’ennemi\nflanche, il le mord et ne le lâche plus.',
		],
		[Language.De]: [
			'Es schnappt sofort nach allem, was ihm\nunterkommt. Der Grund dafür ist anscheinend,\ndass seine wachsenden Vorderzähne jucken.',
			'Im Kampf greift es mit dem steinharten Horn auf\nseinem Kopf an. Schreckt der Gegner zurück,\nschnappt es zu und lässt nicht wieder los.',
		],
		[Language.Es]: [
			'Muerde todo lo que se le ponga por delante.\nAl parecer, lo hace para aliviar el dolor que\nsiente cuando le crecen los incisivos.',
			'El cuerno que tiene en la cabeza es duro como\nuna roca. Lo usa para atacar al rival y, cuando\neste baja la guardia, lo muerde y no lo suelta.',
		],
		[Language.It]: [
			'Addenta tutto ciò che gli capita davanti. Sembra\nche lo faccia d’istinto, a causa del prurito\nprovocato dagli incisivi che stanno crescendo.',
			'Per attaccare usa il corno sulla testa, che è duro\ncome la pietra. Quando il nemico è indebolito,\nlo morde e non molla più la presa.',
		],
		[Language.En]: [
			'Apparently the itch of its teething impels it to\nsnap its jaws at anything in front of it.',
			'It starts off battles by attacking with its rock-hard\nhorn, but as soon as the opponent flinches, this\nPokémon bites down and never lets go.',
		],
		[Language.Ja]: [
			'目の前の　ものに　すぐに　噛みつく\n習性。　生えかけの　前歯が\n痒いので　噛みついてしまうらしい。',
			'頭の　ツノは　岩の　硬さ。\nツノで　戦い　ひるんだ　隙に\nパクリと　噛みつき　離さない。',
		],
		[Language.ZhHans]: [
			'有着不管看到什么都会咬上去\n的习性。这似乎是因为长门牙\n的时候会痒的缘故。',
			'会用头上硬如岩石的角攻击敌人。\n趁其不备之时大口咬住对方，\n一旦咬住便再也不会松口。',
		],
	},
	[
		[
			Variety.Chewtle,
			57,
			3,
			85,
			[Type.Water],
			{
				frontDefault: '19ce7b3c.png',
				frontShiny: '4869bb5a.png',
				backDefault: '931257a6.png',
				backShiny: 'f9955793.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 64, effort: 1},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 38},
				[Stat.SpecialDefense]: {baseStat: 38},
				[Stat.Speed]: {baseStat: 44},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					21,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.WaterGun,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					49,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.MudShot,
					Move.IceFang,
					Move.Liquidation,
					Move.SkitterSmack,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Waterfall,
					Move.ScaryFace,
					Move.FalseSwipe,
					Move.Crunch,
					Move.WaterPulse,
					Move.PoisonJab,
					Move.DragonTail,
					Move.StompingTantrum,
					Move.TeraBlast,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					14,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.GastroAcid,
					Move.DragonTail,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_Egg,
					Move.ShellSmash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.JawLock,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					21,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.WaterGun,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					49,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.Revenge,
					Move.Dive,
					Move.MudShot,
					Move.Payback,
					Move.Assurance,
					Move.IceFang,
					Move.Round,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					28,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SkullBash,
					Move.GastroAcid,
					Move.DragonTail,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.JawLock,
					35,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ScaleShot,
					Move.SkitterSmack,
				),
			].flat(),
			[
				{
					ability: Ability.StrongJaw,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ShellArmor,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SwiftSwim,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Chewtle,
					PokemonFormBits.Default,
					{
						frontDefault: '19ce7b3c.png',
						frontShiny: '4869bb5a.png',
						backDefault: '931257a6.png',
						backShiny: 'f9955793.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Drednaw,
	50,
	75,
	Color.Green,
	[EggGroup.Monster, EggGroup.Water1],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['カジリガメ'],
		[Language.Roomaji]: ['Kajirigame'],
		[Language.Ko]: ['갈가부기'],
		[Language.ZhHant]: ['暴噬龜'],
		[Language.Fr]: ['Torgamord'],
		[Language.De]: ['Kamalm'],
		[Language.Es]: ['Drednaw'],
		[Language.It]: ['Drednaw'],
		[Language.En]: ['Drednaw'],
		[Language.Ja]: ['カジリガメ'],
		[Language.ZhHans]: ['暴噬龟'],
	},
	{
		[Language.JaHrkt]: ['かみつきポケモン'],
		[Language.Ko]: ['물어뜯기포켓몬'],
		[Language.ZhHant]: ['緊咬寶可夢'],
		[Language.Fr]: ['Pokémon Morsure'],
		[Language.De]: ['Biss-Pokémon'],
		[Language.Es]: ['Pokémon Mordisco'],
		[Language.It]: ['Pokémon Morso'],
		[Language.En]: ['Bite Pokémon'],
		[Language.Ja]: ['かみつきポケモン'],
		[Language.ZhHans]: ['紧咬宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'きょうぼうな　せいしつ。　てつぼうを\nかみちぎる　ほどの　アゴの　ちからで\nえものに　ばくりと　かみつく。',
			'くびが　のびちぢみする。　はなれた\nところから　くびを　いっきに　のばし\nするどい　キバで　てきを　しとめる。',
		],
		[Language.Ko]: [
			'흉포한 성질을 가졌다. 철봉을\n물어뜯어 버릴 정도의 턱 힘으로\n먹이를 덥석 물어버린다.',
			'목을 자유자재로 늘이고 줄인다.\n떨어져 있는 곳에서 목을 단번에 늘여\n날카로운 이빨로 적의 숨통을 끊는다.',
		],
		[Language.ZhHant]: [
			'性情凶暴的寶可夢。\n會用能咬斷鐵棍的顎部\n大口咬住獵物。',
			'頸部可以伸縮。\n能從遠處迅速伸長頸部，\n用銳利的牙齒解決對手。',
		],
		[Language.Fr]: [
			'De nature très violente, il mord fermement\nses proies avec sa mâchoire, assez puissante\npour broyer une barre de fer.',
			'Son cou extensible lui permet d’atteindre\ndes ennemis éloignés en un instant pour leur\nporter un coup décisif avec ses crocs aiguisés.',
		],
		[Language.De]: [
			'Dieses von Natur aus aggressive Pokémon beißt\nseine Beute mit seinem kräftigen Kiefer, der\nselbst Eisenstangen zermalmen kann.',
			'Sein streckbarer Hals ermöglicht es ihm, auch\nentfernte Gegner zu erreichen, die es dann mit\nseinen scharfen Zähnen ausschaltet.',
		],
		[Language.Es]: [
			'Un Pokémon de temperamento feroz que\natenaza a su presa con sus fuertes mandíbulas,\ncapaces de destrozar una barra de hierro.',
			'Su cuello extensible le permite alcanzar a los\nrivales a distancia. Hundiendo sus afilados\ndientes, les da el golpe de gracia.',
		],
		[Language.It]: [
			'Ha una natura estremamente feroce e addenta\nle prede con la sua mascella, così potente da\npoter sbriciolare sbarre di ferro.',
			'Ha un collo retrattile. Tenendosi a distanza dal\nnemico, lo estende all’improvviso per dare\nil colpo di grazia con i denti aguzzi.',
		],
		[Language.En]: [
			'With jaws that can shear through steel rods,\nthis highly aggressive Pokémon chomps down\non its unfortunate prey.',
			'This Pokémon rapidly extends its retractable neck\nto sink its sharp fangs into distant enemies and\ntake them down.',
		],
		[Language.Ja]: [
			'狂暴な　性質。　鉄棒を\n噛み千切る　ほどの　顎の　力で\n獲物に　ばくりと　噛みつく。',
			'首が　伸び縮みする。　離れた\nところから　首を　一気に　伸ばし\n鋭い　キバで　敵を　しとめる。',
		],
		[Language.ZhHans]: [
			'性格凶暴的宝可梦。\n会用能咬断铁棍的颚部\n大口咬住猎物。',
			'颈部可以伸缩。\n能从远处迅速伸长颈部，\n用锐利的牙齿解决对手。',
		],
	},
	[
		[
			Variety.Drednaw,
			170,
			10,
			1155,
			[Type.Water, Type.Rock],
			{
				frontDefault: 'c390917d.png',
				frontShiny: '7658aca4.png',
				backDefault: 'c88ee8d0.png',
				backShiny: '2340e826.png',
			},
			{
				[Stat.Hp]: {baseStat: 90},
				[Stat.Attack]: {baseStat: 115, effort: 2},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 48},
				[Stat.SpecialDefense]: {baseStat: 68},
				[Stat.Speed]: {baseStat: 74},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Waterfall,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.Sandstorm,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.SandTomb,
					Move.MuddyWater,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.PoisonJab,
					Move.EarthPower,
					Move.GigaImpact,
					Move.IceFang,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Bulldoze,
					Move.HighHorsepower,
					Move.ThroatChop,
					Move.SmartStrike,
					Move.StompingTantrum,
					Move.Liquidation,
					Move.BodyPress,
					Move.MeteorBeam,
					Move.SkitterSmack,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					21,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Bite,
					Move.WaterGun,
					Move.Protect,
					Move.Crunch,
					Move.RockPolish,
					Move.RazorShell,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					57,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.SuperFang,
					Move.RockTomb,
					Move.WaterPulse,
					Move.TeraBlast,
					Move.IceSpinner,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockTomb,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeadSmash,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.JawLock,
					39,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Waterfall,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Sandstorm,
					Move.Endure,
					Move.FalseSwipe,
					Move.Attract,
					Move.SleepTalk,
					Move.Megahorn,
					Move.IronTail,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.Superpower,
					Move.Revenge,
					Move.Dive,
					Move.RockTomb,
					Move.SandTomb,
					Move.MuddyWater,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.Payback,
					Move.Assurance,
					Move.PoisonJab,
					Move.EarthPower,
					Move.GigaImpact,
					Move.IceFang,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Round,
					Move.Scald,
					Move.Bulldoze,
					Move.RazorShell,
					Move.HighHorsepower,
					Move.ThroatChop,
					Move.SmartStrike,
					Move.StompingTantrum,
					Move.Liquidation,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					21,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Bite,
					Move.WaterGun,
					Move.Protect,
					Move.Crunch,
					Move.RockTomb,
					Move.RockPolish,
					Move.RazorShell,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					57,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockTomb,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HeadSmash,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.JawLock,
					39,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ScaleShot,
					Move.MeteorBeam,
					Move.SkitterSmack,
				),
			].flat(),
			[
				{
					ability: Ability.StrongJaw,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ShellArmor,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SwiftSwim,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Drednaw,
					PokemonFormBits.Default,
					{
						frontDefault: 'c390917d.png',
						frontShiny: '7658aca4.png',
						backDefault: 'c88ee8d0.png',
						backShiny: '2340e826.png',
					},
					[Type.Water, Type.Rock],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.DrednawGmax,
			170,
			240,
			10000,
			[Type.Water, Type.Rock],
			{
				frontDefault: 'e272073b.png',
				frontShiny: 'a88e271f.png',
				backDefault: '8cfd32cc.png',
				backShiny: '60d70ac1.png',
			},
			{
				[Stat.Hp]: {baseStat: 90},
				[Stat.Attack]: {baseStat: 115, effort: 2},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 48},
				[Stat.SpecialDefense]: {baseStat: 68},
				[Stat.Speed]: {baseStat: 74},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.StrongJaw,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ShellArmor,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SwiftSwim,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.DrednawGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'e272073b.png',
						frontShiny: 'a88e271f.png',
						backDefault: '8cfd32cc.png',
						backShiny: '60d70ac1.png',
					},
					[Type.Water, Type.Rock],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Torgamord Gigamax'],
						[Language.De]: ['Gigadynamax-Kamalm'],
						[Language.En]: ['Gigantamax Drednaw'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Yamper,
	50,
	255,
	Color.Yellow,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Fast,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ワンパチ'],
		[Language.Roomaji]: ['Wanpachi'],
		[Language.Ko]: ['멍파치'],
		[Language.ZhHant]: ['來電汪'],
		[Language.Fr]: ['Voltoutou'],
		[Language.De]: ['Voldi'],
		[Language.Es]: ['Yamper'],
		[Language.It]: ['Yamper'],
		[Language.En]: ['Yamper'],
		[Language.Ja]: ['ワンパチ'],
		[Language.ZhHans]: ['来电汪'],
	},
	{
		[Language.JaHrkt]: ['こいぬポケモン'],
		[Language.Ko]: ['강아지포켓몬'],
		[Language.ZhHant]: ['小狗寶可夢'],
		[Language.Fr]: ['Pokémon Chiot'],
		[Language.De]: ['Welpen-Pokémon'],
		[Language.Es]: ['Pokémon Perrito'],
		[Language.It]: ['Pokémon Cagnolino'],
		[Language.En]: ['Puppy Pokémon'],
		[Language.Ja]: ['こいぬポケモン'],
		[Language.ZhHans]: ['小狗宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'はしる　ときに　しっぽの　ねもとから\nでんきを　うみだす。　ガラルでは\nぼくようけん　として　にんき。',
			'おやつに　つられて　ひとの　しごとを\nてつだう　くいしんぼう。　パチパチと\nでんきを　まとって　ひたはしる。',
		],
		[Language.Ko]: [
			'달릴 때 꼬리가 시작되는 부분에서\n전기를 만들어 낸다. 가라르에서는\n양치기로 인기가 많다.',
			'간식에 끌려 사람의 일을\n돕는 먹보다. 탁탁 튀는\n전기를 두르고 계속 달린다.',
		],
		[Language.ZhHant]: [
			'奔跑的時候會從尾巴的根部\n製造出電能。在伽勒爾\n是很受歡迎的牧羊犬。',
			'因為想要得到零食而\n幫助人類工作的貪吃鬼。\n總是帶著電火花跑來跑去。',
		],
		[Language.Fr]: [
			'Lorsqu’il court, on peut voir de l’électricité\nse former à la base de sa queue. Ce Pokémon\nest très populaire auprès des bergers de Galar.',
			'Ce glouton assiste les humains dans leur travail\nen échange de friandises. Il court sans arrêt,\nle corps enveloppé d’électricité.',
		],
		[Language.De]: [
			'Beim Rennen erzeugt es Elektrizität in seinem\nSchwanzansatz. In der Galar-Region erfreut es\nsich bei Hirten großer Beliebtheit.',
			'Im Austausch gegen Leckerlis hilft dieser kleine\nVielfraß Menschen bei der Arbeit. Beim Rennen\nwird es von knisternder Elektrizität umhüllt.',
		],
		[Language.Es]: [
			'Al correr, genera electricidad por la base de la\ncola. Es muy popular entre los pastores de Galar.',
			'Son muy glotones, por lo que ayudan a la gente\na cambio de comida. Echan chispas al correr.',
		],
		[Language.It]: [
			'Quando corre produce elettricità dalla base\ndella coda. A Galar è apprezzato soprattutto\nper l’aiuto che fornisce ai pastori nei pascoli.',
			'È un golosone e aiuta gli uomini in cambio\ndi ghiottonerie. Corre di qua e di là\nemettendo scintille da tutto il corpo.',
		],
		[Language.En]: [
			'This Pokémon is very popular as a herding dog\nin the Galar region. As it runs, it generates\nelectricity from the base of its tail.',
			'This gluttonous Pokémon only assists people with\ntheir work because it wants treats. As it runs,\nit crackles with electricity.',
		],
		[Language.Ja]: [
			'走る　ときに　しっぽの　根元から\n電気を　生み出す。　ガラルでは\n牧羊犬として　人気。',
			'おやつに　釣られて　人の　仕事を\n手伝う　食いしん坊。　パチパチと\n電気を　まとって　ひた走る。',
		],
		[Language.ZhHans]: [
			'奔跑的时候会从尾巴的根部\n制造出电能。在伽勒尔\n是很受欢迎的牧羊犬。',
			'因为想要得到零食而\n帮助人类工作的贪吃鬼。\n总是带着电火花跑来跑去。',
		],
	},
	[
		[
			Variety.Yamper,
			54,
			3,
			135,
			[Type.Electric],
			{
				frontDefault: '67ff78bc.png',
				frontShiny: '2b6c93ba.png',
				backDefault: '324a15f9.png',
				backShiny: '7049f8db.png',
			},
			{
				[Stat.Hp]: {baseStat: 59, effort: 1},
				[Stat.Attack]: {baseStat: 45},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 26},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SandAttack,
					Move.DoubleEdge,
					Move.Howl,
					Move.Discharge,
					Move.FlameCharge,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Roar,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Dig,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.HelpingHand,
					Move.ThunderFang,
					Move.FireFang,
					Move.ElectroBall,
					Move.Round,
					Move.VoltSwitch,
					Move.WildCharge,
					Move.Snarl,
					Move.PlayRough,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charm,
					26,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WildCharge,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Nuzzle,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.RisingVoltage,
				),
			].flat(),
			[
				{
					ability: Ability.BallFetch,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Rattled,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Yamper,
					PokemonFormBits.Default,
					{
						frontDefault: '67ff78bc.png',
						frontShiny: '2b6c93ba.png',
						backDefault: '324a15f9.png',
						backShiny: '7049f8db.png',
					},
					[Type.Electric],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Boltund,
	50,
	45,
	Color.Yellow,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Fast,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['パルスワン'],
		[Language.Roomaji]: ['Pulsewan'],
		[Language.Ko]: ['펄스멍'],
		[Language.ZhHant]: ['逐電犬'],
		[Language.Fr]: ['Fulgudog'],
		[Language.De]: ['Bellektro'],
		[Language.Es]: ['Boltund'],
		[Language.It]: ['Boltund'],
		[Language.En]: ['Boltund'],
		[Language.Ja]: ['パルスワン'],
		[Language.ZhHans]: ['逐电犬'],
	},
	{
		[Language.JaHrkt]: ['いぬポケモン'],
		[Language.Ko]: ['개포켓몬'],
		[Language.ZhHant]: ['狗寶可夢'],
		[Language.Fr]: ['Pokémon Chien'],
		[Language.De]: ['Hunde-Pokémon'],
		[Language.Es]: ['Pokémon Perro'],
		[Language.It]: ['Pokémon Cane'],
		[Language.En]: ['Dog Pokémon'],
		[Language.Ja]: ['いぬポケモン'],
		[Language.ZhHans]: ['狗宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'でんきを　つくって　あしに　おくり\nはしりを　アシスト。　みっかみばん\nやすまず　はしれるのだ。',
			'でんきの　ちからで　きゃくりょくを\nぞうきょう。　トップスピードは\nじそく　９０キロを　かるく　こえる。',
		],
		[Language.Ko]: [
			'만든 전기를 다리로 보내서\n달리는 것을 돕는다. 삼 일 밤낮을\n쉬지 않고 달릴 수 있다.',
			'전기의 힘으로 다릿심을\n강하게 키운다. 최고 속도는\n시속 90km를 가볍게 넘긴다.',
		],
		[Language.ZhHant]: [
			'會製造電能，並傳送到腳上\n作為奔跑時的輔助動力。\n能不眠不休地奔跑三天三夜。',
			'電力增強了牠的腳力。\n當以最高速度奔跑時，\n時速可以輕易超過９０公里。',
		],
		[Language.Fr]: [
			'Il produit de l’électricité puis la transfère\ndans ses pattes pour mieux courir. Ainsi, il peut\nfoncer pendant trois jours et trois nuits.',
			'Il se sert de l’énergie électrique pour augmenter\nla puissance de ses membres.\nSa vitesse maximale dépasse de peu les 90 km/h.',
		],
		[Language.De]: [
			'Es generiert Strom und lässt ihn zur Unterstützung\nbeim Rennen in seine Beine fließen. Dadurch\nkann es drei Tage und Nächte ohne Pause rennen.',
			'Mit Elektrizität verstärkt es seine Beinkraft.\nSo erreicht es mit Leichtigkeit eine\nHöchstgeschwindigkeit von über 90 km/h.',
		],
		[Language.Es]: [
			'La electricidad que genera y envía a sus patas le\nayuda a desplazarse rápidamente. Puede correr\nsin descanso durante tres días y tres noches.',
			'La electricidad le confiere una enorme fuerza en\nlas patas. Su velocidad punta puede superar los\n90 km/h sin problema.',
		],
		[Language.It]: [
			'Trasferisce alle zampe l’elettricità che produce\nper aumentarne la resistenza. Può correre per\ntre giorni interi senza mai fermarsi.',
			'La potenza delle sue zampe aumenta grazie\nall’energia elettrica. Quando corre a tutta\nvelocità supera facilmente i 90 km/h.',
		],
		[Language.En]: [
			'This Pokémon generates electricity and channels\nit into its legs to keep them going strong.\nBoltund can run nonstop for three full days.',
			'It sends electricity through its legs to boost their\nstrength. Running at top speed, it easily breaks\n50 mph.',
		],
		[Language.Ja]: [
			'電気を　つくって　脚に　送り\n走りを　アシスト。　三日三晩\n休まず　走れるのだ。',
			'電気の　力で　脚力を\n増強。　トップスピードは\n時速　９０キロを　軽く　超える。',
		],
		[Language.ZhHans]: [
			'会制造电能，并传送到脚上\n作为奔跑时的辅助动力。\n可以不眠不休地奔跑三天三夜。',
			'电力增强了它的脚力。\n当以最高速度奔跑时，\n时速可以轻易超过９０公里。',
		],
	},
	[
		[
			Variety.Boltund,
			172,
			10,
			340,
			[Type.Electric],
			{
				frontDefault: 'c502e06f.png',
				frontShiny: '4c78a7e1.png',
				backDefault: '28b586a8.png',
				backShiny: '88ec38c3.png',
			},
			{
				[Stat.Hp]: {baseStat: 69},
				[Stat.Attack]: {baseStat: 90},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 90},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 121, effort: 2},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
					Move.Bite,
					Move.Electrify,
					Move.Nuzzle,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Roar,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Dig,
					Move.Agility,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.HelpingHand,
					Move.HyperVoice,
					Move.BulkUp,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.FireFang,
					Move.ElectroBall,
					Move.Round,
					Move.VoltSwitch,
					Move.WildCharge,
					Move.Snarl,
					Move.PlayRough,
					Move.EerieImpulse,
					Move.ElectricTerrain,
					Move.PsychicFangs,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charm,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					34,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					41,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WildCharge,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ElectricTerrain,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.RisingVoltage,
				),
			].flat(),
			[
				{
					ability: Ability.StrongJaw,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Competitive,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Boltund,
					PokemonFormBits.Default,
					{
						frontDefault: 'c502e06f.png',
						frontShiny: '4c78a7e1.png',
						backDefault: '28b586a8.png',
						backShiny: '88ec38c3.png',
					},
					[Type.Electric],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Rolycoly,
	50,
	255,
	Color.Black,
	[EggGroup.Mineral],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.MediumSlow,
	Shape.Ball,
	{
		[Language.JaHrkt]: ['タンドン'],
		[Language.Roomaji]: ['Tandon'],
		[Language.Ko]: ['탄동'],
		[Language.ZhHant]: ['小炭仔'],
		[Language.Fr]: ['Charbi'],
		[Language.De]: ['Klonkett'],
		[Language.Es]: ['Rolycoly'],
		[Language.It]: ['Rolycoly'],
		[Language.En]: ['Rolycoly'],
		[Language.Ja]: ['タンドン'],
		[Language.ZhHans]: ['小炭仔'],
	},
	{
		[Language.JaHrkt]: ['せきたんポケモン'],
		[Language.Ko]: ['석탄포켓몬'],
		[Language.ZhHant]: ['煤炭寶可夢'],
		[Language.Fr]: ['Pokémon Charbon'],
		[Language.De]: ['Kohle-Pokémon'],
		[Language.Es]: ['Pokémon Carbón'],
		[Language.It]: ['Pokémon Carbone'],
		[Language.En]: ['Coal Pokémon'],
		[Language.Ja]: ['せきたんポケモン'],
		[Language.ZhHans]: ['煤炭宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'およそ４００ねんまえに　たんこうで\nみつかった。　からだの　ほとんどが\nせきたんと　おなじ　せいぶん。',
			'いわだらけの　あくろを　ものともせず\nいちりんしゃのように　はしりまわる。\nせきたんを　もやして　いきている。',
		],
		[Language.Ko]: [
			'약 400년 전에 탄광에서\n발견되었다. 몸의 대부분이\n석탄과 같은 성분이다.',
			'바위투성이의 거친 길을 아무렇지도\n않게 일륜차처럼 달린다.\n석탄을 태워서 살고 있다.',
		],
		[Language.ZhHant]: [
			'大約４００年前在煤礦坑中\n被人們發現。身體絕大部分\n的成分都和煤炭相同。',
			'在滿是岩石的崎嶇路面上\n也能像獨輪車那樣自在移動。\n靠燃燒煤炭維持生命。',
		],
		[Language.Fr]: [
			'On l’a découvert dans une mine il y a 400 ans.\nSon corps est presque entièrement composé\nd’une substance identique au charbon.',
			'Il parcourt sans difficulté les sentiers rocheux\naccidentés à la manière d’un monocycle.\nIl a besoin de brûler du charbon pour vivre.',
		],
		[Language.De]: [
			'Es wurde vor circa 400 Jahren in einer Kohlemine\nentdeckt. Sein Körper besteht fast aus denselben\nKomponenten wie Steinkohle.',
			'Auch auf steinigen, schlecht befahrbaren Wegen\nfährt es problemlos, als wäre es ein Einrad.\nEs verbrennt Steinkohle, um zu überleben.',
		],
		[Language.Es]: [
			'Fue descubierto hace aproximadamente 400\naños en una mina. Casi la totalidad de su cuerpo\npresenta una composición igual a la del carbón.',
			'Recorre incluso los caminos más impracticables y\npedregosos como si de un monociclo se tratase.\nLa combustión de carbón es su fuente vital.',
		],
		[Language.It]: [
			'È stato scoperto più di 400 anni fa in una\nminiera. Il suo corpo è prevalentemente\ncomposto di una sostanza uguale al carbone.',
			'Corre in lungo e in largo come un monociclo\nanche sulle strade sassose più accidentate.\nVive grazie alla combustione del carbone.',
		],
		[Language.En]: [
			'Most of its body has the same composition as\ncoal. Fittingly, this Pokémon was first discovered\nin coal mines about 400 years ago.',
			'It can race around like a unicycle, even on rough,\nrocky terrain. Burning coal sustains it.',
		],
		[Language.Ja]: [
			'およそ４００年前に　炭鉱で\n見つかった。　体の　ほとんどが\n石炭と　同じ　成分。',
			'岩だらけの　悪路を　ものともせず\n一輪車のように　走りまわる。\n石炭を　燃やして　生きている。',
		],
		[Language.ZhHans]: [
			'大约４００年前在煤矿坑中\n被人们发现。身体绝大部分\n的成分都和煤炭相同。',
			'在满是岩石的崎岖之路上\n也能像独轮车那样自在移动。\n靠燃烧煤炭维持生命。',
		],
	},
	[
		[
			Variety.Rolycoly,
			48,
			3,
			120,
			[Type.Rock],
			{
				frontDefault: 'ffe5087e.png',
				frontShiny: '71efe924.png',
				backDefault: '012584aa.png',
				backShiny: '1ccae8d3.png',
			},
			{
				[Stat.Hp]: {baseStat: 30},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 50, effort: 1},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Smokescreen,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Curse,
					Move.MudSlap,
					Move.PowerGem,
					Move.SmackDown,
					Move.Bulldoze,
					Move.TeraBlast,
					Move.TemperFlare,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Dig,
					Move.Reflect,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Spikes,
					Move.Sandstorm,
					Move.Endure,
					Move.SleepTalk,
					Move.WillOWisp,
					Move.Facade,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.GyroBall,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeatCrash,
					Move.MeteorBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Explosion,
					Move.MudSlap,
					Move.Block,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RapidSpin,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockBlast,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SmackDown,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Incinerate,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeatCrash,
					35,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Smokescreen,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Dig,
					Move.Reflect,
					Move.SelfDestruct,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Spikes,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.WillOWisp,
					Move.Facade,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.GyroBall,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Round,
					Move.HeatCrash,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Explosion,
					Move.MudSlap,
					Move.Block,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RapidSpin,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockBlast,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SmackDown,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Incinerate,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HeatCrash,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.MeteorBeam,
				),
			].flat(),
			[
				{
					ability: Ability.SteamEngine,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Heatproof,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlashFire,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Rolycoly,
					PokemonFormBits.Default,
					{
						frontDefault: 'ffe5087e.png',
						frontShiny: '71efe924.png',
						backDefault: '012584aa.png',
						backShiny: '1ccae8d3.png',
					},
					[Type.Rock],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Carkol,
	50,
	120,
	Color.Black,
	[EggGroup.Mineral],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.MediumSlow,
	Shape.Legs,
	{
		[Language.JaHrkt]: ['トロッゴン'],
		[Language.Roomaji]: ['Toroggon'],
		[Language.Ko]: ['탄차곤'],
		[Language.ZhHant]: ['大炭車'],
		[Language.Fr]: ['Wagomine'],
		[Language.De]: ['Wagong'],
		[Language.Es]: ['Carkol'],
		[Language.It]: ['Carkol'],
		[Language.En]: ['Carkol'],
		[Language.Ja]: ['トロッゴン'],
		[Language.ZhHans]: ['大炭车'],
	},
	{
		[Language.JaHrkt]: ['せきたんポケモン'],
		[Language.Ko]: ['석탄포켓몬'],
		[Language.ZhHant]: ['煤炭寶可夢'],
		[Language.Fr]: ['Pokémon Charbon'],
		[Language.De]: ['Kohle-Pokémon'],
		[Language.Es]: ['Pokémon Carbón'],
		[Language.It]: ['Pokémon Carbone'],
		[Language.En]: ['Coal Pokémon'],
		[Language.Ja]: ['せきたんポケモン'],
		[Language.ZhHans]: ['煤炭宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'たいないで　せきたんを　つくりだす。\nむかしの　ガラルでは　おとした\nせきたんを　せいかつに　りようした。',
			'あしを　こうそくで　かいてんさせて\nじそく３０キロで　はしる。　せっし\n１０００どの　ほのおを　ふきだす。',
		],
		[Language.Ko]: [
			'체내에서 석탄을 만들어 낸다.\n과거의 가라르에서는 떨어뜨린\n석탄을 생활에 이용했다.',
			'다리를 고속으로 회전시켜\n시속 30km로 달린다.\n섭씨 1000도의 불꽃을 내뿜는다.',
		],
		[Language.ZhHant]: [
			'能在體內製造煤炭。\n在過去，伽勒爾人曾經用\n牠身上掉下來的煤炭生活。',
			'能透過高速旋轉自己的腳，\n以３０公里的時速奔跑。\n能噴出攝氏１０００度的火焰。',
		],
		[Language.Fr]: [
			'Il produit du charbon dans son corps. Jadis, les\nhabitants de Galar ramassaient ce charbon au sol\net s’en servaient pour leurs besoins quotidiens.',
			'Il peut faire tourner ses pattes très vite\npour se déplacer à une vitesse de 30 km/h.\nIl peut aussi souffler des flammes à 1 000 °C.',
		],
		[Language.De]: [
			'Es produziert Steinkohle in seinem Körper.\nDie von ihm abfallende Kohle wurde früher in\nder Galar-Region fürs tägliche Leben genutzt.',
			'Es dreht seine Füße mit hoher Geschwindigkeit\nund kann sich dadurch bis zu 30 km/h schnell\nbewegen. Es speit 1 000 ºC heiße Flammen.',
		],
		[Language.Es]: [
			'Forma carbón en el interior de su cuerpo. Los\nantiguos habitantes de Galar lo aprovechaban\npara sus labores diarias.',
			'Gira las patas a gran velocidad para correr a\nunos 30 km/h. Emite llamas a una temperatura\nde 1000 °C.',
		],
		[Language.It]: [
			'Gli antichi abitanti di Galar usavano il carbone\nprodotto da questo Pokémon all’interno del suo\ncorpo per le loro necessità quotidiane.',
			'Corre a 30 km/h facendo girare velocemente\nle zampe. Emette fiamme a 1.000 ºC.',
		],
		[Language.En]: [
			'It forms coal inside its body. Coal dropped by\nthis Pokémon once helped fuel the lives of\npeople in the Galar region.',
			'By rapidly rolling its legs, it can travel at over\n18 mph. The temperature of the flames it\nbreathes exceeds 1,800 degrees Fahrenheit.',
		],
		[Language.Ja]: [
			'体内で　石炭を　つくりだす。\n昔の　ガラルでは　落とした\n石炭を　生活に　利用した。',
			'脚を　高速で　回転させて\n時速３０キロで　走る。　摂氏\n１０００度の　炎を　噴き出す。',
		],
		[Language.ZhHans]: [
			'能在体内制造煤炭。\n在过去，伽勒尔人曾经用\n它身上掉下来的煤炭生活。',
			'能通过高速旋转自己的脚，\n以３０公里的时速奔跑。\n能喷出１０００度的火焰。',
		],
	},
	[
		[
			Variety.Carkol,
			144,
			11,
			780,
			[Type.Rock, Type.Fire],
			{
				frontDefault: '9ed4c5ef.png',
				frontShiny: 'a843c5e8.png',
				backDefault: 'b75c6bde.png',
				backShiny: 'f287bf2c.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 60},
				[Stat.Defense]: {baseStat: 90, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Smokescreen,
					Move.RapidSpin,
					Move.SmackDown,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Curse,
					Move.MudSlap,
					Move.SunnyDay,
					Move.PowerGem,
					Move.SmackDown,
					Move.FlameCharge,
					Move.Bulldoze,
					Move.TeraBlast,
					Move.TemperFlare,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.FireSpin,
					Move.Dig,
					Move.Reflect,
					Move.FireBlast,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Spikes,
					Move.Sandstorm,
					Move.Endure,
					Move.SleepTalk,
					Move.HeatWave,
					Move.WillOWisp,
					Move.Facade,
					Move.Overheat,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.GyroBall,
					Move.FlareBlitz,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.Scald,
					Move.HeatCrash,
					Move.BodyPress,
					Move.MeteorBeam,
					Move.ScorchingSands,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockBlast,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					15,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StoneEdge,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Incinerate,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeatCrash,
					41,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Smokescreen,
					Move.RapidSpin,
					Move.SmackDown,
					Move.FlameCharge,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.FireSpin,
					Move.Dig,
					Move.Reflect,
					Move.SelfDestruct,
					Move.FireBlast,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Spikes,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.HeatWave,
					Move.WillOWisp,
					Move.Facade,
					Move.Overheat,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.GyroBall,
					Move.FlareBlitz,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.Round,
					Move.Scald,
					Move.HeatCrash,
					Move.HighHorsepower,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockBlast,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlameCharge,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Incinerate,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HeatCrash,
					41,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BurnUp,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.MeteorBeam,
					Move.ScorchingSands,
				),
			].flat(),
			[
				{
					ability: Ability.SteamEngine,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.FlameBody,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlashFire,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Carkol,
					PokemonFormBits.Default,
					{
						frontDefault: '9ed4c5ef.png',
						frontShiny: 'a843c5e8.png',
						backDefault: 'b75c6bde.png',
						backShiny: 'f287bf2c.png',
					},
					[Type.Rock, Type.Fire],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Coalossal,
	50,
	45,
	Color.Black,
	[EggGroup.Mineral],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.MediumSlow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['セキタンザン'],
		[Language.Roomaji]: ['Sekitanzan'],
		[Language.Ko]: ['석탄산'],
		[Language.ZhHant]: ['巨炭山'],
		[Language.Fr]: ['Monthracite'],
		[Language.De]: ['Montecarbo'],
		[Language.Es]: ['Coalossal'],
		[Language.It]: ['Coalossal'],
		[Language.En]: ['Coalossal'],
		[Language.Ja]: ['セキタンザン'],
		[Language.ZhHans]: ['巨炭山'],
	},
	{
		[Language.JaHrkt]: ['せきたんポケモン'],
		[Language.Ko]: ['석탄포켓몬'],
		[Language.ZhHant]: ['煤炭寶可夢'],
		[Language.Fr]: ['Pokémon Charbon'],
		[Language.De]: ['Kohle-Pokémon'],
		[Language.Es]: ['Pokémon Carbón'],
		[Language.It]: ['Pokémon Carbone'],
		[Language.En]: ['Coal Pokémon'],
		[Language.Ja]: ['せきたんポケモン'],
		[Language.ZhHans]: ['煤炭宝可梦'],
	},
	{
		[Language.ZhHans]: [
			'平时性情温和，但在人类\n破坏矿山时会大发雷霆，\n用１５００度的大火将他们烧尽。',
			'进入战斗状态后，\n它会把煤炭山燃烧得通红，\n飞撒火花来烧焦四周。',
		],
		[Language.JaHrkt]: [
			'ふだんは　おだやかだが　にんげんが\nこうざんを　あらすと　いかりくるい\n１５００どの　ほのおで　やきつくす。',
			'たたかいになると　せきたんの　やまが\nまっかに　もえあがり　ひのこを\nまきちらして　しゅういを　こがす。',
		],
		[Language.Ko]: [
			'평소에는 온화하지만 인간이\n광산을 훼손시키면 격분해서\n1500도의 불꽃으로 태워버린다.',
			'싸우게 되면 석탄으로 된 산이\n새빨갛게 타올라 불똥을\n흩뿌려 주위를 태운다.',
		],
		[Language.ZhHant]: [
			'平時性情溫和，但在人類\n破壞礦山時會大發雷霆，\n用１５００度的大火將他們燒盡。',
			'進入戰鬥狀態後，\n牠會把煤炭山燃燒得通紅，\n飛撒火花來燒焦四周。',
		],
		[Language.Fr]: [
			'Il est d’une nature paisible, mais si les humains\ntentent de piller ses mines, il enrage et brûle\ntout avec des flammes à 1 500 °C.',
			'Lorsqu’il s’engage dans un combat, son tas\nde charbon brûle et vire au rouge, ce qui répand\nde petites étincelles qui calcinent ce qui l’entoure.',
		],
		[Language.De]: [
			'Meist ist es friedfertig, aber wenn Menschen\neine Mine zugrunde richten, sieht es rot und\nverbrennt sie mit 1 500 ºC heißen Flammen.',
			'Kommt es zum Kampf, so lodert sein Kohleberg\ntiefrot auf und es sprüht glühende Funken, die\nseine Umgebung versengen.',
		],
		[Language.Es]: [
			'Aunque es de carácter sereno, monta en cólera\nsi ve a seres humanos dañando una mina y reduce\ntodo a cenizas con sus llamas a 1500 °C.',
			'Cuando se enzarza en un combate, la montaña\nde carbón arde al rojo vivo y esparce chispas\nque calcinan todo lo que le rodea.',
		],
		[Language.It]: [
			'Di solito è tranquillo, ma se gli esseri umani\ndanneggiano la sua miniera va su tutte le furie e\nbrucia tutto emettendo fiamme a 1.500 ºC.',
			'Quando lotta, la montagna di carbone brucia\ncon bagliori rossastri e sparge scintille che\nanneriscono tutta l’area circostante.',
		],
		[Language.En]: [
			'It’s usually peaceful, but the vandalism of mines\nenrages it. Offenders will be incinerated with\nflames that reach 2,700 degrees Fahrenheit.',
			'While it’s engaged in battle, its mountain of coal\nwill burn bright red, sending off sparks that\nscorch the surrounding area.',
		],
		[Language.Ja]: [
			'普段は　穏やかだが　人間が\n鉱山を　荒らすと　怒りくるい\n１５００度の　炎で　焼きつくす。',
			'戦いになると　石炭の　山が\n真っ赤に　燃え上がり　火の粉を\nまき散らして　周囲を　焦がす。',
		],
	},
	[
		[
			Variety.Coalossal,
			255,
			28,
			3105,
			[Type.Rock, Type.Fire],
			{
				frontDefault: '86cd64e3.png',
				frontShiny: '8ee9cc35.png',
				backDefault: '0e805e9a.png',
				backShiny: '86c5756b.png',
			},
			{
				[Stat.Hp]: {baseStat: 110},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 120, effort: 3},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.BodySlam,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.FireSpin,
					Move.Earthquake,
					Move.Dig,
					Move.Reflect,
					Move.FireBlast,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Spikes,
					Move.Sandstorm,
					Move.Endure,
					Move.SleepTalk,
					Move.HeatWave,
					Move.WillOWisp,
					Move.Facade,
					Move.Overheat,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.GyroBall,
					Move.FlareBlitz,
					Move.EarthPower,
					Move.GigaImpact,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.Scald,
					Move.Bulldoze,
					Move.HeatCrash,
					Move.HighHorsepower,
					Move.BodyPress,
					Move.MeteorBeam,
					Move.ScorchingSands,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Smokescreen,
					Move.RapidSpin,
					Move.SmackDown,
					Move.FlameCharge,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Curse,
					Move.SunnyDay,
					Move.PowerGem,
					Move.SmackDown,
					Move.FlameCharge,
					Move.TeraBlast,
					Move.TemperFlare,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockBlast,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					15,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StoneEdge,
					63,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Incinerate,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeatCrash,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TarShot,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.FireSpin,
					Move.Earthquake,
					Move.Dig,
					Move.Reflect,
					Move.SelfDestruct,
					Move.FireBlast,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Spikes,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.HeatWave,
					Move.WillOWisp,
					Move.Facade,
					Move.Overheat,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.GyroBall,
					Move.FlareBlitz,
					Move.EarthPower,
					Move.GigaImpact,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.Round,
					Move.Scald,
					Move.Bulldoze,
					Move.HeatCrash,
					Move.HighHorsepower,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Smokescreen,
					Move.RapidSpin,
					Move.SmackDown,
					Move.FlameCharge,
					Move.TarShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockBlast,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Incinerate,
					27,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HeatCrash,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BurnUp,
					63,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TarShot,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.MeteorBeam,
					Move.ScorchingSands,
				),
			].flat(),
			[
				{
					ability: Ability.SteamEngine,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.FlameBody,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlashFire,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Coalossal,
					PokemonFormBits.Default,
					{
						frontDefault: '86cd64e3.png',
						frontShiny: '8ee9cc35.png',
						backDefault: '0e805e9a.png',
						backShiny: '86c5756b.png',
					},
					[Type.Rock, Type.Fire],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CoalossalGmax,
			255,
			420,
			10000,
			[Type.Rock, Type.Fire],
			{
				frontDefault: '8e62061e.png',
				frontShiny: 'b1301762.png',
				backDefault: 'b47ab27a.png',
				backShiny: '2771bcd8.png',
			},
			{
				[Stat.Hp]: {baseStat: 110},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 120, effort: 3},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.SteamEngine,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.FlameBody,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlashFire,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.CoalossalGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '8e62061e.png',
						frontShiny: 'b1301762.png',
						backDefault: 'b47ab27a.png',
						backShiny: '2771bcd8.png',
					},
					[Type.Rock, Type.Fire],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Monthracite Gigamax'],
						[Language.De]: ['Gigadynamax-Montecarbo'],
						[Language.En]: ['Gigantamax Coalossal'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Applin,
	50,
	255,
	Color.Green,
	[EggGroup.Plant, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.SlowThenVeryFast,
	Shape.Squiggle,
	{
		[Language.JaHrkt]: ['カジッチュ'],
		[Language.Roomaji]: ['Kajicchu'],
		[Language.Ko]: ['과사삭벌레'],
		[Language.ZhHant]: ['啃果蟲'],
		[Language.Fr]: ['Verpom'],
		[Language.De]: ['Knapfel'],
		[Language.Es]: ['Applin'],
		[Language.It]: ['Applin'],
		[Language.En]: ['Applin'],
		[Language.Ja]: ['カジッチュ'],
		[Language.ZhHans]: ['啃果虫'],
	},
	{
		[Language.JaHrkt]: ['りんごぐらしポケモン'],
		[Language.Ko]: ['사과살이포켓몬'],
		[Language.ZhHant]: ['蘋果居寶可夢'],
		[Language.Fr]: ['Pokémon Nid Pomme'],
		[Language.De]: ['Apfelhaus-Pokémon'],
		[Language.Es]: ['Pokémon Manzanido'],
		[Language.It]: ['Pokémon Pomicolo'],
		[Language.En]: ['Apple Core Pokémon'],
		[Language.Ja]: ['りんごぐらしポケモン'],
		[Language.ZhHans]: ['苹果居宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'いっしょう　りんごの　なかで　くらし\nてんてきの　とりポケモンに　であうと\nりんごの　ふりをして　みをまもる。',
			'うまれると　りんごに　もぐりこむ。\nなかみを　たべながら　せいちょうし\nりんごの　あじが　しんかを　きめる。',
		],
		[Language.Ko]: [
			'평생을 사과 속에서 지내며\n천적인 새포켓몬과 마주치면\n사과인 척을 해서 몸을 지킨다.',
			'태어나면 사과 안으로 숨어든다.\n안을 파먹으면서 성장하고\n사과 맛이 진화를 결정한다.',
		],
		[Language.ZhHant]: [
			'終其一生都在蘋果裡度過。\n遇到天敵鳥寶可夢時，\n會裝成蘋果保護自己。',
			'一出生就躲進了蘋果中，\n一邊吃果肉一邊成長。\n進化方向依蘋果的味道而定。',
		],
		[Language.Fr]: [
			'Il vit toujours dans sa pomme. S’il croise\nun Pokémon oiseau, son prédateur naturel, il se\nfait passer pour un simple fruit pour se protéger.',
			'À la naissance, il s’installe dans une pomme\net grandit en se nourrissant de sa chair.\nSon évolution dépend de la saveur du fruit.',
		],
		[Language.De]: [
			'Es verbringt sein ganzes Leben im Inneren eines\nApfels. Um sich vor Vogel-Pokémon, seinen\nFressfeinden, zu schützen, imitiert es einen Apfel.',
			'Nach der Geburt kriecht es sofort in einen Apfel\nund verspeist dessen Inneres, um zu wachsen.\nSeine Entwicklung hängt von dessen Aroma ab.',
		],
		[Language.Es]: [
			'Habita durante toda su vida en el interior de una\nmanzana. Finge ser una fruta para protegerse de\nlos Pokémon pájaro, sus enemigos naturales.',
			'Nada más nacer se refugia en una manzana, cuyo\ninterior va devorando a medida que crece. El\nsabor de la fruta determina la evolución.',
		],
		[Language.It]: [
			'Passa la vita all’interno di un pomo. Quando si\nimbatte in Pokémon alati, suoi nemici naturali,\nsi protegge fingendosi un semplice frutto.',
			'Quando nasce si intrufola in un pomo e cresce\nmangiandone la polpa. Si evolve in modo diverso\na seconda del gusto del frutto.',
		],
		[Language.En]: [
			'It spends its entire life inside an apple. It hides\nfrom its natural enemies, bird Pokémon, by\npretending it’s just an apple and nothing more.',
			'As soon as it’s born, it burrows into an apple. Not\nonly does the apple serve as its food source, but\nthe flavor of the fruit determines its evolution.',
		],
		[Language.Ja]: [
			'一生　りんごの　中で　暮らし\n天敵の　鳥ポケモンに　出会うと\nりんごの　振りをして　身を守る。',
			'生まれると　りんごに　潜りこむ。\n中身を　食べながら　成長し\nりんごの　味が　進化を　決める。',
		],
		[Language.ZhHans]: [
			'终其一生都在苹果里度过。\n遇到天敌鸟宝可梦时，\n会装成苹果保护自己。',
			'一出生就躲进了苹果中。\n一边吃果肉一边成长。\n进化方向因苹果的味道而定。',
		],
	},
	[
		[
			Variety.Applin,
			52,
			2,
			5,
			[Type.Grass, Type.Dragon],
			{
				frontDefault: '7afc8c25.png',
				frontShiny: '5101978e.png',
				backDefault: '97cadcf3.png',
				backShiny: 'e4a6d7c5.png',
			},
			{
				[Stat.Hp]: {baseStat: 40},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 80, effort: 1},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 40},
				[Stat.Speed]: {baseStat: 20},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Withdraw,
					Move.Astonish,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DefenseCurl,
					Move.Rollout,
					Move.Recycle,
					Move.SuckerPunch,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TeraBlast,
					Move.Pounce,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Withdraw,
					Move.Astonish,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DefenseCurl,
					Move.Rollout,
					Move.Recycle,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Machine,
					Move.Attract,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.GrassyGlide,
				),
			].flat(),
			[
				{
					ability: Ability.Ripen,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Bulletproof,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Applin,
					PokemonFormBits.Default,
					{
						frontDefault: '7afc8c25.png',
						frontShiny: '5101978e.png',
						backDefault: '97cadcf3.png',
						backShiny: 'e4a6d7c5.png',
					},
					[Type.Grass, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Flapple,
	50,
	45,
	Color.Green,
	[EggGroup.Plant, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.SlowThenVeryFast,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['アップリュー'],
		[Language.Roomaji]: ['Appryu'],
		[Language.Ko]: ['애프룡'],
		[Language.ZhHant]: ['蘋裹龍'],
		[Language.Fr]: ['Pomdrapi'],
		[Language.De]: ['Drapfel'],
		[Language.Es]: ['Flapple'],
		[Language.It]: ['Flapple'],
		[Language.En]: ['Flapple'],
		[Language.Ja]: ['アップリュー'],
		[Language.ZhHans]: ['苹裹龙'],
	},
	{
		[Language.JaHrkt]: ['りんごはねポケモン'],
		[Language.Ko]: ['사과날개포켓몬'],
		[Language.ZhHant]: ['蘋果翅寶可夢'],
		[Language.Fr]: ['Pokémon Ailes Pomme'],
		[Language.De]: ['Apfelflügel-Pokémon'],
		[Language.Es]: ['Pokémon Manzanala'],
		[Language.It]: ['Pokémon Pomivolo'],
		[Language.En]: ['Apple Wing Pokémon'],
		[Language.Ja]: ['りんごはねポケモン'],
		[Language.ZhHans]: ['苹果翅宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'すっぱい　りんごを　たべて　しんか。\nやけどする　ほど　きょうさんせいの\nえきたいを　ほほぶくろに　ためる。',
			'りんごの　かわの　つばさで　とんで\nきょうさんせいの　だえきを　とばす。\nりんごの　かたちに　へんけいする。',
		],
		[Language.Ko]: [
			'새콤한 사과를 먹고 진화했다.\n화상을 입을 정도로 강한 산성을 띠는\n액체를 볼주머니에 저장하고 있다.',
			'사과 껍질로 된 날개로 날며\n강산성의 타액을 뱉는다.\n사과의 형태로 변형한다.',
		],
		[Language.ZhHant]: [
			'啃果蟲吃了酸蘋果後進化\n而成。頰囊裡儲存著足以\n造成灼傷的強酸性液體。',
			'會用蘋果皮的翅膀飛翔，\n並吐出強酸性的唾液。\n能變成蘋果的形狀。',
		],
		[Language.Fr]: [
			'Il a évolué après avoir mangé une pomme acide.\nIl concentre dans ses joues un liquide si corrosif\nqu’il peut provoquer des brûlures.',
			'Il vole avec ses ailes faites de pelures de pomme\net crache une substance très acide.\nIl peut aussi prendre la forme de ce fruit.',
		],
		[Language.De]: [
			'Nach dem Verzehr eines sauren Apfels hat es sich\nentwickelt. In den Backentaschen speichert es\neine saure Substanz, die zu Verbrennungen führt.',
			'Dieses Pokémon fliegt mit seinen Flügeln aus\nApfelschale und spuckt extrem sauren Speichel\naus. Es nimmt die Gestalt eines Apfels an.',
		],
		[Language.Es]: [
			'Ha evolucionado tras ingerir una manzana ácida.\nLas bolsas de las mejillas albergan un fluido cuya\nextrema acidez llega a provocar quemaduras.',
			'Escupe una saliva sumamente ácida y vuela con\nsus alas compuestas por piel de manzana, cuyo\naspecto es capaz de adoptar.',
		],
		[Language.It]: [
			'Si è evoluto dopo aver mangiato una mela aspra.\nLe sacche sulle guance contengono un liquido\nestremamente acido che può provocare ustioni.',
			'Vola usando la buccia del pomo a mo’ di ali e\nsputa una saliva altamente acida. Può assumere\nl’aspetto di una mela.',
		],
		[Language.En]: [
			'It ate a sour apple, and that induced its\nevolution. In its cheeks, it stores an acid\ncapable of causing chemical burns.',
			'It flies on wings of apple skin and spits a\npowerful acid. It can also change its shape\ninto that of an apple.',
		],
		[Language.Ja]: [
			'すっぱい　りんごを　食べて　進化。\n火傷する　ほど　強酸性の\n液体を　頬袋に　溜める。',
			'りんごの　皮の　翼で　飛んで\n強酸性の　唾液を　飛ばす。\nりんごの　形に　変形する。',
		],
		[Language.ZhHans]: [
			'啃果虫吃了酸苹果后进化\n而成。颊囊里储存着足以\n造成灼伤的强酸性液体。',
			'会用苹果皮的翅膀飞翔，\n并吐出强酸性的唾液。\n可以变成苹果的形状。',
		],
	},
	[
		[
			Variety.Flapple,
			170,
			3,
			10,
			[Type.Grass, Type.Dragon],
			{
				frontDefault: '1bf30283.png',
				frontShiny: '0e8501e1.png',
				backDefault: 'dcfa9e5b.png',
				backShiny: '9f16f833.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 110, effort: 2},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 95},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 70},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WingAttack,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Fly,
					40,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Facade,
					Move.BulletSeed,
					Move.IronDefense,
					Move.DragonDance,
					Move.UTurn,
					Move.SeedBomb,
					Move.AirSlash,
					Move.DragonPulse,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.DracoMeteor,
					Move.GrassKnot,
					Move.HeavySlam,
					Move.Acrobatics,
					Move.GrassyGlide,
					Move.DualWingbeat,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Endeavor,
					Move.AerialAce,
					Move.MagicalLeaf,
					Move.LeafStorm,
					Move.AcidSpray,
					Move.GrassyTerrain,
					Move.TeraBlast,
					Move.Pounce,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Growth,
					Move.Withdraw,
					Move.Twister,
					Move.Recycle,
					Move.Astonish,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonBreath,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AcidSpray,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Acrobatics,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GravApple,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WingAttack,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.WingAttack,
					Move.Growth,
					Move.Withdraw,
					Move.Twister,
					Move.Recycle,
					Move.Astonish,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Fly,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.FocusEnergy,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.GigaDrain,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Facade,
					Move.BulletSeed,
					Move.IronDefense,
					Move.DragonDance,
					Move.UTurn,
					Move.SeedBomb,
					Move.AirSlash,
					Move.DragonPulse,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.GrassKnot,
					Move.HeavySlam,
					Move.Round,
					Move.Acrobatics,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonBreath,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.GrassyGlide,
					Move.DualWingbeat,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AcidSpray,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Acrobatics,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GravApple,
					32,
				),
			].flat(),
			[
				{
					ability: Ability.Ripen,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Hustle,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Flapple,
					PokemonFormBits.Default,
					{
						frontDefault: '1bf30283.png',
						frontShiny: '0e8501e1.png',
						backDefault: 'dcfa9e5b.png',
						backShiny: '9f16f833.png',
					},
					[Type.Grass, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.FlappleGmax,
			170,
			240,
			10000,
			[Type.Grass, Type.Dragon],
			{
				frontDefault: '784383b9.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 110, effort: 2},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 95},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 70},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Ripen,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Hustle,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.FlappleGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '784383b9.png',
					},
					[Type.Grass, Type.Dragon],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Pomdrapi Gigamax'],
						[Language.De]: ['Gigadynamax-Drapfel'],
						[Language.En]: ['Gigantamax Flapple'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Appletun,
	50,
	45,
	Color.Green,
	[EggGroup.Plant, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.SlowThenVeryFast,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['タルップル'],
		[Language.Roomaji]: ['Tarupple'],
		[Language.Ko]: ['단지래플'],
		[Language.ZhHant]: ['豐蜜龍'],
		[Language.Fr]: ['Dratatin'],
		[Language.De]: ['Schlapfel'],
		[Language.Es]: ['Appletun'],
		[Language.It]: ['Appletun'],
		[Language.En]: ['Appletun'],
		[Language.Ja]: ['タルップル'],
		[Language.ZhHans]: ['丰蜜龙'],
	},
	{
		[Language.JaHrkt]: ['りんごじるポケモン'],
		[Language.Ko]: ['사과즙포켓몬'],
		[Language.ZhHant]: ['蘋果汁寶可夢'],
		[Language.Fr]: ['Pokémon Jus Pomme'],
		[Language.De]: ['Apfelnektar-Pokémon'],
		[Language.Es]: ['Pokémon Manzanéctar'],
		[Language.It]: ['Pokémon Pomisucco'],
		[Language.En]: ['Apple Nectar Pokémon'],
		[Language.Ja]: ['りんごじるポケモン'],
		[Language.ZhHans]: ['苹果汁宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あまい　りんごを　たべて　しんか。\nからだから　あまい　においを　だして\nエサの　むしポケモンを　ひきよせる。',
			'あまい　みつで　からだが　おおわれ\nせなかの　かわは　とくに　あまく\nむかしは　こどもの　おやつだった。',
		],
		[Language.Ko]: [
			'달콤한 사과를 먹고 진화했다.\n몸에서 달콤한 향기를 내보내서\n먹이인 벌레포켓몬을 유인한다.',
			'달콤한 꿀로 몸이 둘러싸여 있다.\n등의 껍질은 특히 더 달콤해서\n옛날에는 어린이 간식이었다.',
		],
		[Language.ZhHant]: [
			'啃果蟲吃了甜蘋果後進化而成。\n以蟲寶可夢為食，會從體內發出\n甜甜的香味引誘牠們上鉤。',
			'身體被甜甜的蜜汁包裹，\n背部的皮尤其甘甜，\n過去曾經是小孩的零食。',
		],
		[Language.Fr]: [
			'Il a évolué après avoir mangé une pomme sucrée.\nIl attire ses proies, les Pokémon Insecte,\nen dégageant un parfum mielleux.',
			'Son corps est recouvert de nectar.\nLa peau de son dos, particulièrement sucrée,\nconstituait jadis le goûter des enfants.',
		],
		[Language.De]: [
			'Nach dem Verzehr eines süßen Apfels hat es sich\nentwickelt. Es verströmt einen süßen Duft und\nlockt damit sein Futter an: Käfer-Pokémon.',
			'Sein Körper wird von süßem Nektar bedeckt und\ndie Schale auf seinem Rücken ist besonders süß.\nFrüher war diese ein Leckerbissen für Kinder.',
		],
		[Language.Es]: [
			'Ha evolucionado tras ingerir una manzana dulce.\nDe ahí que el olor que emana para atraer a sus\npresas, los Pokémon insecto, sea tan agradable.',
			'Su cuerpo está recubierto de néctar. La piel de\nla espalda es tan dulce que los niños de antaño\nsolían tomarla como merienda.',
		],
		[Language.It]: [
			'Si è evoluto dopo aver mangiato una mela dolce.\nSi nutre di Pokémon Coleottero, che attira\nemanando un dolce profumo dal corpo.',
			'È ricoperto di una specie di sciroppo. La buccia\nsulla sua schiena, particolarmente dolce, una\nvolta veniva data ai bambini per merenda.',
		],
		[Language.En]: [
			'Eating a sweet apple caused its evolution.\nA nectarous scent wafts from its body, luring in\nthe bug Pokémon it preys on.',
			'Its body is covered in sweet nectar, and the\nskin on its back is especially yummy. Children\nused to have it as a snack.',
		],
		[Language.Ja]: [
			'甘い　りんごを　食べて　進化。\n体から　甘い　においを　だして\n餌の　虫ポケモンを　引き寄せる。',
			'甘い　蜜で　体が　おおわれ\n背中の　皮は　とくに　甘く\n昔は　子どもの　おやつだった。',
		],
		[Language.ZhHans]: [
			'啃果虫吃了甜苹果后进化而成。\n以虫宝可梦为食，会从体内发出\n甜甜的香味引诱它们上钩。',
			'身体被甜甜的蜜汁包裹，\n背部的皮尤其甘甜，\n过去曾经是小孩的零食。',
		],
	},
	[
		[
			Variety.Appletun,
			170,
			4,
			130,
			[Type.Grass, Type.Dragon],
			{
				frontDefault: '48328eda.png',
				frontShiny: '722a82d2.png',
				backDefault: '653516d0.png',
				backShiny: 'a7561c66.png',
			},
			{
				[Stat.Hp]: {baseStat: 110, effort: 2},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 100},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					32,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Earthquake,
					Move.LightScreen,
					Move.Reflect,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Outrage,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Facade,
					Move.BulletSeed,
					Move.IronDefense,
					Move.GyroBall,
					Move.SeedBomb,
					Move.DragonPulse,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.DracoMeteor,
					Move.GrassKnot,
					Move.HeavySlam,
					Move.Bulldoze,
					Move.HighHorsepower,
					Move.BodyPress,
					Move.GrassyGlide,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Curse,
					Move.RainDance,
					Move.HelpingHand,
					Move.MagicalLeaf,
					Move.ZenHeadbutt,
					Move.LeafStorm,
					Move.IronHead,
					Move.DragonTail,
					Move.GrassyTerrain,
					Move.StompingTantrum,
					Move.TeraBlast,
					Move.Pounce,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Growth,
					Move.Withdraw,
					Move.SweetScent,
					Move.Recycle,
					Move.Astonish,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AppleAcid,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Headbutt,
					Move.Growth,
					Move.Withdraw,
					Move.SweetScent,
					Move.Recycle,
					Move.Astonish,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					32,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Earthquake,
					Move.LightScreen,
					Move.Reflect,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Outrage,
					Move.GigaDrain,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.SunnyDay,
					Move.Facade,
					Move.Superpower,
					Move.BulletSeed,
					Move.IronDefense,
					Move.GyroBall,
					Move.Payback,
					Move.SeedBomb,
					Move.DragonPulse,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.GrassKnot,
					Move.HeavySlam,
					Move.Round,
					Move.Bulldoze,
					Move.HighHorsepower,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.GrassyGlide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AppleAcid,
					28,
				),
			].flat(),
			[
				{
					ability: Ability.Ripen,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.ThickFat,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Appletun,
					PokemonFormBits.Default,
					{
						frontDefault: '48328eda.png',
						frontShiny: '722a82d2.png',
						backDefault: '653516d0.png',
						backShiny: 'a7561c66.png',
					},
					[Type.Grass, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.AppletunGmax,
			170,
			240,
			10000,
			[Type.Grass, Type.Dragon],
			{
				frontDefault: '784383b9.png',
			},
			{
				[Stat.Hp]: {baseStat: 110, effort: 2},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 100},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Ripen,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Gluttony,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.ThickFat,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.AppletunGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '784383b9.png',
					},
					[Type.Grass, Type.Dragon],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Dratatin Gigamax'],
						[Language.De]: ['Gigadynamax-Schlapfel'],
						[Language.En]: ['Gigantamax Appletun'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Silicobra,
	50,
	255,
	Color.Green,
	[EggGroup.Ground, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Squiggle,
	{
		[Language.JaHrkt]: ['スナヘビ'],
		[Language.Roomaji]: ['Sunahebi'],
		[Language.Ko]: ['모래뱀'],
		[Language.ZhHant]: ['沙包蛇'],
		[Language.Fr]: ['Dunaja'],
		[Language.De]: ['Salanga'],
		[Language.Es]: ['Silicobra'],
		[Language.It]: ['Silicobra'],
		[Language.En]: ['Silicobra'],
		[Language.Ja]: ['スナヘビ'],
		[Language.ZhHans]: ['沙包蛇'],
	},
	{
		[Language.JaHrkt]: ['すなへびポケモン'],
		[Language.Ko]: ['모래뱀포켓몬'],
		[Language.ZhHant]: ['沙蛇寶可夢'],
		[Language.Fr]: ['Pokémon Serpensable'],
		[Language.De]: ['Sandschlangen-Pokémon'],
		[Language.Es]: ['Pokémon Serp. Arena'],
		[Language.It]: ['Pokémon Sabbiaserpe'],
		[Language.En]: ['Sand Snake Pokémon'],
		[Language.Ja]: ['すなへびポケモン'],
		[Language.ZhHans]: ['沙蛇宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あなを　ほりながら　たべた　すなを\nくびの　ふくろに　ためている。\n８キロもの　すなが　はいるのだ。',
			'はなの　あなから　すなを　ふんしゃ。\nてきの　めを　くらました　すきに\nちちゅうに　もぐって　みを　かくす。',
		],
		[Language.Ko]: [
			'굴을 파면서 먹은 모래를\n목에 있는 주머니에 저장하는데\n8kg이나 되는 모래가 들어간다.',
			'콧구멍으로 모래를 분사한다.\n적의 눈을 속이고 그 틈에\n땅속으로 숨어들어 몸을 숨긴다.',
		],
		[Language.ZhHant]: [
			'一邊挖洞一邊把吃掉的\n沙子儲存在頸部的囊裡。\n囊裡面能裝進８公斤的沙子。',
			'會從鼻孔噴射出沙子，\n趁敵人看不清的時候\n躲進地底下藏身。',
		],
		[Language.Fr]: [
			'Il amasse le sable qu’il avale en creusant\ndans la poche de son cou. Elle peut en contenir\njusqu’à huit kilos.',
			'En expulsant du sable par les narines, il aveugle\nson adversaire et en profite pour se cacher\nsous terre.',
		],
		[Language.De]: [
			'Den Sand, den es beim Graben von Löchern\nverzehrt, speichert es in einem Beutel in seinem\nHals. Dieser kann bis zu 8 kg Sand aufnehmen.',
			'Aus seinen Nasenlöchern verschießt es Sand.\nSobald der Feind dadurch nichts mehr sieht,\nversteckt es sich flugs unter der Erde.',
		],
		[Language.Es]: [
			'Almacena la arena que ingiere al perforar hoyos\nen la saca del cuello, cuya capacidad llega a\nalcanzar incluso los 8 kg.',
			'Expulsa arena por los orificios nasales. Una vez\nque aturde al enemigo, aprovecha la ocasión\npara ocultarse bajo tierra.',
		],
		[Language.It]: [
			'Conserva nella sacca del collo la sabbia che\ningoia scavando buche. Può accumularne ben\n8 kg.',
			'Espelle sabbia dalle narici accecando il nemico\nper distrarlo e ne approfitta per nascondersi\nsottoterra.',
		],
		[Language.En]: [
			'As it digs, it swallows sand and stores it in its\nneck pouch. The pouch can hold more than\n17 pounds of sand.',
			'It spews sand from its nostrils. While the enemy\nis blinded, it burrows into the ground to hide.',
		],
		[Language.Ja]: [
			'穴を　掘りながら　食べた　砂を\n首の　袋に　溜めている。\n８キロもの　砂が　入るのだ。',
			'鼻の　穴から　砂を　噴射。\n敵の　目を　くらました　隙に\n地中に　潜って　身を　隠す。',
		],
		[Language.ZhHans]: [
			'一边挖洞一边把吃掉的\n沙子储存在颈部的囊里。\n囊里面能装进８公斤的沙子。',
			'会从鼻孔喷射出沙子，\n趁敌人看不清的时候\n躲进地底下藏身。',
		],
	},
	[
		[
			Variety.Silicobra,
			63,
			22,
			76,
			[Type.Ground],
			{
				frontDefault: 'cc3cd48b.png',
				frontShiny: '27b3e2e9.png',
				backDefault: '8ce0798b.png',
				backShiny: '00a99a13.png',
			},
			{
				[Stat.Hp]: {baseStat: 52},
				[Stat.Attack]: {baseStat: 57},
				[Stat.Defense]: {baseStat: 75, effort: 1},
				[Stat.SpecialAttack]: {baseStat: 35},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 46},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					40,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.SandAttack,
					Move.Wrap,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.RockSlide,
					Move.ScaryFace,
					Move.MudSlap,
					Move.RockTomb,
					Move.PoisonTail,
					Move.RockBlast,
					Move.StoneEdge,
					Move.StealthRock,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Earthquake,
					Move.Dig,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Sandstorm,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.SandTomb,
					Move.MudShot,
					Move.EarthPower,
					Move.Bulldoze,
					Move.DrillRun,
					Move.ScaleShot,
					Move.SkitterSmack,
					Move.ScorchingSands,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Minimize,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Glare,
					25,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.MudSlap,
					Move.PoisonTail,
					Move.LastResort,
					Move.DragonRush,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Sandstorm,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SandTomb,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Coil,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.SandAttack,
					Move.Wrap,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Earthquake,
					Move.Dig,
					Move.Screech,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.SandTomb,
					Move.MudShot,
					Move.EarthPower,
					Move.Round,
					Move.Bulldoze,
					Move.DrillRun,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Minimize,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Glare,
					25,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.MudSlap,
					Move.PoisonTail,
					Move.LastResort,
					Move.DragonRush,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Sandstorm,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SandTomb,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Coil,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
					10,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ScaleShot,
					Move.SkitterSmack,
					Move.ScorchingSands,
				),
			].flat(),
			[
				{
					ability: Ability.SandSpit,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ShedSkin,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SandVeil,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Silicobra,
					PokemonFormBits.Default,
					{
						frontDefault: 'cc3cd48b.png',
						frontShiny: '27b3e2e9.png',
						backDefault: '8ce0798b.png',
						backShiny: '00a99a13.png',
					},
					[Type.Ground],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Sandaconda,
	50,
	120,
	Color.Green,
	[EggGroup.Ground, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Squiggle,
	{
		[Language.JaHrkt]: ['サダイジャ'],
		[Language.Roomaji]: ['Sadaija'],
		[Language.Ko]: ['사다이사'],
		[Language.ZhHant]: ['沙螺蟒'],
		[Language.Fr]: ['Dunaconda'],
		[Language.De]: ['Sanaconda'],
		[Language.Es]: ['Sandaconda'],
		[Language.It]: ['Sandaconda'],
		[Language.En]: ['Sandaconda'],
		[Language.Ja]: ['サダイジャ'],
		[Language.ZhHans]: ['沙螺蟒'],
	},
	{
		[Language.JaHrkt]: ['すなへびポケモン'],
		[Language.Ko]: ['모래뱀포켓몬'],
		[Language.ZhHant]: ['沙蛇寶可夢'],
		[Language.Fr]: ['Pokémon Serpensable'],
		[Language.De]: ['Sandschlangen-Pokémon'],
		[Language.Es]: ['Pokémon Serp. Arena'],
		[Language.It]: ['Pokémon Sabbiaserpe'],
		[Language.En]: ['Sand Snake Pokémon'],
		[Language.Ja]: ['すなへびポケモン'],
		[Language.ZhHans]: ['沙蛇宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ぜんしんを　ちぢめ　１００キロの\nすなを　はなの　あなから　ふんしゃ。\nすなが　ないと　よわきに　なるぞ。',
			'どくとくの　とぐろの　まきかたは\nすなぶくろの　すなを　より　こうりつ\nよく　ふんしゃ　するため　なのだ。',
		],
		[Language.Ko]: [
			'온몸을 수축시킨 뒤 100kg의\n모래를 콧구멍으로 내뿜는다.\n모래가 없으면 무기력해진다.',
			'독특한 똬리 형태는\n모래주머니의 모래를 더 효율적으로\n분사하기 위함이다.',
		],
		[Language.ZhHant]: [
			'蜷縮身體後從鼻孔裡噴射出\n１００公斤的沙子。沒有了\n沙子就會變得很懦弱。',
			'牠之所以會以獨特的方式\n盤繞自己的身體，是為了能\n更有效率地噴射沙囊中的沙子。',
		],
		[Language.Fr]: [
			'Il peut expulser 100 kg de sable de ses narines\nen compressant tout son corps. Quand il est\nà court de sable, il a tendance à se dérober.',
			'S’il s’enroule d’une manière aussi particulière,\nc’est pour optimiser l’expulsion de sable\npar ses narines.',
		],
		[Language.De]: [
			'Zieht es seinen ganzen Körper zusammen, kann\nes 100 kg Sand aus seinen Nasenlöchern feuern.\nGeht ihm der Sand aus, verliert es den Mut.',
			'Es rollt sich auf diese eigentümliche Weise\nzusammen, damit es den Sand aus seinem\nSandbeutel effizienter verschießen kann.',
		],
		[Language.Es]: [
			'Se retuerce para expulsar por los orificios nasales\nhasta 100 kg de arena. La ausencia de esta mina\nsu ánimo.',
			'La manera tan particular que tiene de enrollarse\nsobre sí mismo le permite expulsar con mayor\neficacia la arena que almacena en la bolsa.',
		],
		[Language.It]: [
			'Può rimpicciolire il suo corpo espellendo dalle\nnarici 100 kg di sabbia. Quando esaurisce la\nsabbia, viene preso dallo sconforto.',
			'Il modo particolare in cui si attorciglia su se\nstesso gli permette di espellere sabbia dalla\nsua sacca in modo più efficiente.',
		],
		[Language.En]: [
			'When it contracts its body, over 220 pounds of\nsand sprays from its nose. If it ever runs out of\nsand, it becomes disheartened.',
			'Its unique style of coiling allows it to blast sand\nout of its sand sac more efficiently.',
		],
		[Language.Ja]: [
			'全身を　縮め　１００キロの\n砂を　鼻の　穴から　噴射。\n砂が　ないと　弱気に　なるぞ。',
			'独特の　とぐろの　巻き方は\n砂袋の　砂を　より　効率\nよく　噴射　するため　なのだ。',
		],
		[Language.ZhHans]: [
			'蜷缩身体后从鼻孔里喷射出\n１００公斤的沙子。没有了\n沙子就会变得很懦弱。',
			'它之所以会以独特的方式\n盘绕自己的身体，是为了能\n更高效地喷射砂囊中的沙子。',
		],
	},
	[
		[
			Variety.Sandaconda,
			179,
			38,
			655,
			[Type.Ground],
			{
				frontDefault: '014b8c28.png',
				frontShiny: '8ef01d52.png',
				backDefault: 'c2283aca.png',
				backShiny: '6ab71cfe.png',
			},
			{
				[Stat.Hp]: {baseStat: 72},
				[Stat.Attack]: {baseStat: 107},
				[Stat.Defense]: {baseStat: 125, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 71},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					42,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.SandAttack,
					Move.Wrap,
					Move.Minimize,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.ScaryFace,
					Move.MudSlap,
					Move.Endeavor,
					Move.PoisonTail,
					Move.ThunderFang,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Outrage,
					Move.Sandstorm,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.EarthPower,
					Move.GigaImpact,
					Move.FireFang,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Bulldoze,
					Move.DrillRun,
					Move.Hurricane,
					Move.HighHorsepower,
					Move.BodyPress,
					Move.ScaleShot,
					Move.SkitterSmack,
					Move.ScorchingSands,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Glare,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Sandstorm,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SandTomb,
					51,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Coil,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.SandAttack,
					Move.Wrap,
					Move.Minimize,
					Move.SkullBash,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Screech,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Outrage,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.EarthPower,
					Move.GigaImpact,
					Move.FireFang,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Round,
					Move.Bulldoze,
					Move.DrillRun,
					Move.Hurricane,
					Move.HighHorsepower,
					Move.BrutalSwing,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Glare,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Sandstorm,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SandTomb,
					51,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Coil,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ScaleShot,
					Move.SkitterSmack,
					Move.ScorchingSands,
				),
			].flat(),
			[
				{
					ability: Ability.SandSpit,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ShedSkin,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SandVeil,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Sandaconda,
					PokemonFormBits.Default,
					{
						frontDefault: '014b8c28.png',
						frontShiny: '8ef01d52.png',
						backDefault: 'c2283aca.png',
						backShiny: '6ab71cfe.png',
					},
					[Type.Ground],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.SandacondaGmax,
			179,
			220,
			10000,
			[Type.Ground],
			{
				frontDefault: '7a7a1c6f.png',
				frontShiny: '1fcf6e0f.png',
				backDefault: '417c7e13.png',
				backShiny: 'b0f67dcb.png',
			},
			{
				[Stat.Hp]: {baseStat: 72},
				[Stat.Attack]: {baseStat: 107},
				[Stat.Defense]: {baseStat: 125, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 71},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.SandSpit,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ShedSkin,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SandVeil,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.SandacondaGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '7a7a1c6f.png',
						frontShiny: '1fcf6e0f.png',
						backDefault: '417c7e13.png',
						backShiny: 'b0f67dcb.png',
					},
					[Type.Ground],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Dunaconda Gigamax'],
						[Language.De]: ['Gigadynamax-Sanaconda'],
						[Language.En]: ['Gigantamax Sandaconda'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Cramorant,
	50,
	45,
	Color.Blue,
	[EggGroup.Water1, EggGroup.Flying],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['ウッウ'],
		[Language.Roomaji]: ['Uu'],
		[Language.Ko]: ['윽우지'],
		[Language.ZhHant]: ['古月鳥'],
		[Language.Fr]: ['Nigosier'],
		[Language.De]: ['Urgl'],
		[Language.Es]: ['Cramorant'],
		[Language.It]: ['Cramorant'],
		[Language.En]: ['Cramorant'],
		[Language.Ja]: ['ウッウ'],
		[Language.ZhHans]: ['古月鸟'],
	},
	{
		[Language.JaHrkt]: ['うのみポケモン'],
		[Language.Ko]: ['그대로삼키기포켓몬'],
		[Language.ZhHant]: ['一口吞寶可夢'],
		[Language.Fr]: ['Pokémon Avaltouron'],
		[Language.De]: ['Schling-Pokémon'],
		[Language.Es]: ['Pokémon Tragón'],
		[Language.It]: ['Pokémon Inghiottone'],
		[Language.En]: ['Gulp Pokémon'],
		[Language.Ja]: ['うのみポケモン'],
		[Language.ZhHans]: ['一口吞宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あいてを　いちげきで　うちまかすほど\nパワフルだが　わすれっぽいので\nたたかっている　あいてを　わすれる。',
			'くいしんぼうで　エサの　サシカマスを\nまるのみするが　たまに　まちがえて\nほかの　ポケモンに　くらいつく。',
		],
		[Language.Ko]: [
			'상대를 일격에 쓰러뜨릴 정도로\n파워풀하지만 건망증이 심해서\n싸우고 있는 상대를 잊어버린다.',
			'먹보이다. 먹이인 찌로꼬치를\n통째로 삼키지만 가끔 실수로\n다른 포켓몬을 먹어버린다.',
		],
		[Language.ZhHant]: [
			'雖然擁有一擊定勝負的威力，\n但因為記性實在太差，\n對戰還沒結束就會忘記對手是誰。',
			'非常貪吃，會把刺梭魚整隻\n吞進嘴裡。偶爾也會搞錯對象\n去咬其他的寶可夢。',
		],
		[Language.Fr]: [
			'Il est assez puissant pour terrasser un ennemi\nd’un seul coup, mais il est tellement nigaud\nqu’il oublie contre qui il se bat.',
			'Très glouton, il avale les Embrochet d’une seule\nbouchée, mais il lui arrive de se tromper\net de tenter de gober un autre Pokémon.',
		],
		[Language.De]: [
			'Es ist so stark, dass es seine Gegner mit einem\nAngriff vernichten könnte, aber zerstreut wie es\nist, vergisst es öfters, wen es gerade bekämpft.',
			'Es ist ein Vielfraß, der seine Beute, Pikuda,\nim Ganzen verschlingt. Manchmal erwischt es\njedoch irrtümlicherweise ein anderes Pokémon.',
		],
		[Language.Es]: [
			'Su colosal potencia le permite machacar al rival\nde un solo golpe, aunque su carácter despistado\nlo lleva a olvidarse de su presencia.',
			'Traga Arrokuda enteros debido a su glotonería,\ntan notable que en ocasiones ingiere hasta otros\nPokémon sin querer.',
		],
		[Language.It]: [
			'È così potente che può sconfiggere l’avversario\nin un colpo solo, ma è talmente smemorato che\nsi dimentica perfino con chi stava lottando.',
			'È molto ingordo e ingoia tutti interi gli Arrokuda\ndi cui si nutre. A volte ingoia anche altri\nPokémon per sbaglio.',
		],
		[Language.En]: [
			'It’s so strong that it can knock out some\nopponents in a single hit, but it also may\nforget what it’s battling midfight.',
			'This hungry Pokémon swallows Arrokuda whole.\nOccasionally, it makes a mistake and tries to\nswallow a Pokémon other than its preferred prey.',
		],
		[Language.Ja]: [
			'相手を　一撃で　打ち負かすほど\nパワフルだが　忘れっぽいので\n戦っている　相手を　忘れる。',
			'食いしん坊で　エサの　サシカマスを\n丸飲みするが　たまに　間違えて\nほかの　ポケモンに　食らいつく。',
		],
		[Language.ZhHans]: [
			'虽然拥有一击定胜负的威力，\n由于记性实在太差，\n对战还没结束就会忘记对手是谁。',
			'非常贪吃，会把刺梭鱼整只\n吞进嘴里。偶尔也会搞错对象\n去咬其他的宝可梦。',
		],
	},
	[
		[
			Variety.Cramorant,
			166,
			8,
			180,
			[Type.Flying, Type.Water],
			{
				frontDefault: '409c99c2.png',
				frontShiny: '0d24331c.png',
				backDefault: 'f3c8fe91.png',
				backShiny: 'c570a59f.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 85},
				[Stat.SpecialDefense]: {baseStat: 95, effort: 2},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Uproar,
					Move.Facade,
					Move.WeatherBall,
					Move.AirSlash,
					Move.BraveBird,
					Move.GigaImpact,
					Move.Hurricane,
					Move.ThroatChop,
					Move.Liquidation,
					Move.DualWingbeat,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					14,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Endeavor,
					Move.FeatherDance,
					Move.AirCutter,
					Move.AerialAce,
					Move.WaterPulse,
					Move.Tailwind,
					Move.Acrobatics,
					Move.TeraBlast,
					Move.Pounce,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HydroPump,
					56,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					28,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.FeatherDance,
					Move.AerialAce,
					Move.Roost,
					Move.AquaRing,
					Move.Defog,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					21,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Belch,
					Move.AquaCutter,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Uproar,
					Move.Facade,
					Move.Superpower,
					Move.Dive,
					Move.WeatherBall,
					Move.Assurance,
					Move.AirSlash,
					Move.BraveBird,
					Move.GigaImpact,
					Move.Round,
					Move.Scald,
					Move.Hurricane,
					Move.ThroatChop,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HydroPump,
					56,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					28,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.FeatherDance,
					Move.AerialAce,
					Move.Roost,
					Move.AquaRing,
					Move.Defog,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.GulpMissile,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Cramorant,
					PokemonFormBits.Default,
					{
						frontDefault: '409c99c2.png',
						frontShiny: '0d24331c.png',
						backDefault: 'f3c8fe91.png',
						backShiny: 'c570a59f.png',
					},
					[Type.Flying, Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CramorantGulping,
			166,
			8,
			180,
			[Type.Flying, Type.Water],
			{},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 85},
				[Stat.SpecialDefense]: {baseStat: 95, effort: 2},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Uproar,
					Move.Facade,
					Move.Superpower,
					Move.Dive,
					Move.WeatherBall,
					Move.Assurance,
					Move.AirSlash,
					Move.BraveBird,
					Move.GigaImpact,
					Move.Round,
					Move.Scald,
					Move.Hurricane,
					Move.ThroatChop,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HydroPump,
					56,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					28,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.FeatherDance,
					Move.AerialAce,
					Move.Roost,
					Move.AquaRing,
					Move.Defog,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.GulpMissile,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.CramorantGulping,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{},
					[Type.Flying, Type.Water],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Nigosier Forme Gobe-Tout'],
						[Language.De]: ['Urgl (Schlingend)'],
						[Language.En]: ['Gulping Cramorant'],
					},
					{
						[Language.JaHrkt]: ['うのみのすがた'],
						[Language.Ko]: ['그대로 삼킨 모습'],
						[Language.ZhHant]: ['一口吞的樣子'],
						[Language.Fr]: ['Forme Gobe-Tout'],
						[Language.De]: ['Schlingform'],
						[Language.Es]: ['Forma Tragatodo'],
						[Language.It]: ['Forma Inghiottitutto'],
						[Language.En]: ['Gulping Form'],
						[Language.Ja]: ['うのみのすがた'],
						[Language.ZhHans]: ['一口吞的样子'],
					},
					'gulping',
				],
			],
		],
		[
			Variety.CramorantGorging,
			166,
			8,
			180,
			[Type.Flying, Type.Water],
			{},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 85},
				[Stat.SpecialDefense]: {baseStat: 95, effort: 2},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Uproar,
					Move.Facade,
					Move.Superpower,
					Move.Dive,
					Move.WeatherBall,
					Move.Assurance,
					Move.AirSlash,
					Move.BraveBird,
					Move.GigaImpact,
					Move.Round,
					Move.Scald,
					Move.Hurricane,
					Move.ThroatChop,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HydroPump,
					56,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.Stockpile,
					Move.SpitUp,
					Move.Swallow,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrillPeck,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					28,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.FeatherDance,
					Move.AerialAce,
					Move.Roost,
					Move.AquaRing,
					Move.Defog,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.GulpMissile,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.CramorantGorging,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{},
					[Type.Flying, Type.Water],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Nigosier Forme Gobe-Chu'],
						[Language.De]: ['Urgl (Stopfend)'],
						[Language.En]: ['Gorging Cramorant'],
					},
					{
						[Language.JaHrkt]: ['まるのみのすがた'],
						[Language.Ko]: ['통째로 삼킨 모습'],
						[Language.ZhHant]: ['大口吞的樣子'],
						[Language.Fr]: ['Forme Gobe-Chu'],
						[Language.De]: ['Stopfform'],
						[Language.Es]: ['Forma Engulletodo'],
						[Language.It]: ['Forma Inghiottintero'],
						[Language.En]: ['Gorging Form'],
						[Language.Ja]: ['まるのみのすがた'],
						[Language.ZhHans]: ['大口吞的样子'],
					},
					'gorging',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Arrokuda,
	50,
	255,
	Color.Brown,
	[EggGroup.Water2],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Slow,
	Shape.Fish,
	{
		[Language.JaHrkt]: ['サシカマス'],
		[Language.Roomaji]: ['Sasikamasu'],
		[Language.Ko]: ['찌로꼬치'],
		[Language.ZhHant]: ['刺梭魚'],
		[Language.Fr]: ['Embrochet'],
		[Language.De]: ['Pikuda'],
		[Language.Es]: ['Arrokuda'],
		[Language.It]: ['Arrokuda'],
		[Language.En]: ['Arrokuda'],
		[Language.Ja]: ['サシカマス'],
		[Language.ZhHans]: ['刺梭鱼'],
	},
	{
		[Language.JaHrkt]: ['とつげきポケモン'],
		[Language.Ko]: ['돌격포켓몬'],
		[Language.ZhHant]: ['突擊寶可夢'],
		[Language.Fr]: ['Pokémon Fonceur'],
		[Language.De]: ['Rempler-Pokémon'],
		[Language.Es]: ['Pokémon Arremetida'],
		[Language.It]: ['Pokémon Carica'],
		[Language.En]: ['Rush Pokémon'],
		[Language.Ja]: ['とつげきポケモン'],
		[Language.ZhHans]: ['突击宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'するどく　とがった　あごが　じまん。\nすこしでも　うごくものを　みつけると\nいっちょくせんに　とつげきする。',
			'はらいっぱいで　きょくたんに\nうごきが　にぶった　ところを\nウッウに　まるのみに　される。',
		],
		[Language.Ko]: [
			'날카롭고 뾰족한 턱을 자랑한다.\n조금이라도 움직이는 것을 발견하면\n일직선으로 돌격한다.',
			'배가 불러서 현저히\n움직임이 둔해지면\n윽우지가 통째로 삼켜버린다.',
		],
		[Language.ZhHant]: [
			'尖銳的下巴是牠的驕傲。\n只要發現周圍有什麼小動作，\n就會一直線衝過去。',
			'吃飽了之後動作會變得\n極度遲緩，於是就被\n古月鳥整隻吞了下去。',
		],
		[Language.Fr]: [
			'Sa mâchoire fine et aiguisée fait sa fierté.\nÀ peine voit-il le moindre mouvement\nqu’il fonce dans sa direction.',
			'Lorsqu’il a le ventre plein, il a beaucoup\nplus de mal à se déplacer, et c’est à ce moment\nprécis qu’il se fait gober par les Nigosier.',
		],
		[Language.De]: [
			'Sein spitz zulaufender Kiefer ist sein ganzer Stolz.\nErblickt es etwas, das sich auch nur ein bisschen\nbewegt, setzt es geradewegs zum Stoßangriff an.',
			'Seine Bewegungsfreiheit ist stark eingeschränkt,\nwenn es vollgefressen ist. So wird es zu leichter\nBeute für Urgl, das es im Ganzen verschlingt.',
		],
		[Language.Es]: [
			'Se siente muy orgulloso de su afilada mandíbula.\nEn cuanto detecta el más mínimo movimiento,\nva directo al objetivo para cargar contra él.',
			'Cuando tiene el estómago lleno, le cuesta\nmoverse y corre el riesgo de ser engullido por\nalgún Cramorant.',
		],
		[Language.It]: [
			'Va orgoglioso della sua mandibola appuntita.\nAppena nota il minimo movimento, parte subito\nall’attacco.',
			'Quando ha la pancia piena i suoi movimenti\nsi fanno estremamente lenti e rischia di finire\ninghiottito da un Cramorant.',
		],
		[Language.En]: [
			'If it sees any movement around it, this Pokémon\ncharges for it straightaway, leading with its\nsharply pointed jaw. It’s very proud of that jaw.',
			'After it’s eaten its fill, its movements become\nextremely sluggish. That’s when Cramorant\nswallows it up.',
		],
		[Language.Ja]: [
			'鋭く　尖った　顎が　自慢。\n少しでも　動くものを　見つけると\n一直線に　突撃する。',
			'腹一杯で　極端に\n動きが　鈍った　ところを\nウッウに　丸飲みに　される。',
		],
		[Language.ZhHans]: [
			'尖锐的下巴是它的骄傲。\n只要发现周围有什么小动作，\n就会一直线冲过去。',
			'吃饱了之后动作会变得\n极度迟缓，于是就被\n古月鸟整只吞了下去。',
		],
	},
	[
		[
			Variety.Arrokuda,
			56,
			5,
			10,
			[Type.Water],
			{
				frontDefault: 'f0236009.png',
				frontShiny: 'b1082379.png',
				backDefault: '961657b8.png',
				backShiny: 'de5f3679.png',
			},
			{
				[Stat.Hp]: {baseStat: 41},
				[Stat.Attack]: {baseStat: 63},
				[Stat.Defense]: {baseStat: 40},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 30},
				[Stat.Speed]: {baseStat: 66, effort: 1},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					6,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.HydroPump,
					Move.Surf,
					Move.WaterPulse,
					Move.FlipTurn,
					Move.TeraBlast,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Thrash,
					Move.Slash,
					Move.Acupressure,
					Move.NightSlash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.AquaJet,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					18,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Agility,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.BrickBreak,
					Move.CloseCombat,
					Move.IceFang,
					Move.DrillRun,
					Move.ThroatChop,
					Move.PsychicFangs,
					Move.Liquidation,
					Move.ScaleShot,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					6,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Thrash,
					Move.Slash,
					Move.Acupressure,
					Move.NightSlash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.AquaJet,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					18,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Agility,
					Move.FocusEnergy,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.BrickBreak,
					Move.Dive,
					Move.Bounce,
					Move.CloseCombat,
					Move.Assurance,
					Move.PoisonJab,
					Move.IceFang,
					Move.Round,
					Move.Scald,
					Move.DrillRun,
					Move.ThroatChop,
					Move.PsychicFangs,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.ScaleShot,
				),
			].flat(),
			[
				{
					ability: Ability.SwiftSwim,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.PropellerTail,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Arrokuda,
					PokemonFormBits.Default,
					{
						frontDefault: 'f0236009.png',
						frontShiny: 'b1082379.png',
						backDefault: '961657b8.png',
						backShiny: 'de5f3679.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Barraskewda,
	50,
	60,
	Color.Brown,
	[EggGroup.Water2],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Slow,
	Shape.Fish,
	{
		[Language.JaHrkt]: ['カマスジョー'],
		[Language.Roomaji]: ['Kamasujaw'],
		[Language.Ko]: ['꼬치조'],
		[Language.ZhHant]: ['戽斗尖梭'],
		[Language.Fr]: ['Hastacuda'],
		[Language.De]: ['Barrakiefa'],
		[Language.Es]: ['Barraskewda'],
		[Language.It]: ['Barraskewda'],
		[Language.En]: ['Barraskewda'],
		[Language.Ja]: ['カマスジョー'],
		[Language.ZhHans]: ['戽斗尖梭'],
	},
	{
		[Language.JaHrkt]: ['くしざしポケモン'],
		[Language.Ko]: ['꼬치포켓몬'],
		[Language.ZhHant]: ['穿刺寶可夢'],
		[Language.Fr]: ['Pokémon Transperceur'],
		[Language.De]: ['Spieß-Pokémon'],
		[Language.Es]: ['Pokémon Ensarta'],
		[Language.It]: ['Pokémon Spiedo'],
		[Language.En]: ['Skewer Pokémon'],
		[Language.Ja]: ['くしざしポケモン'],
		[Language.ZhHans]: ['穿刺宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'やりの　ように　とがった　あごは\nはがねの　かたさ。　その　みは\nおどろくほど　おいしい　らしい。',
			'おびれを　かいてんさせ　いっきに\nとつげき。　１００ノットを　こえる\nそくどで　えものを　つらぬくぞ。',
		],
		[Language.Ko]: [
			'창처럼 뾰족한 턱은 강철과 같은\n단단함을 자랑한다. 살코기는\n깜짝 놀랄 정도로 맛있다는 듯하다.',
			'꼬리지느러미를 회전시켜 단번에\n돌격한다. 100노트를 넘는\n속도로 먹이를 관통한다.',
		],
		[Language.ZhHant]: [
			'像長矛一樣尖銳的下巴\n擁有鋼鐵般的硬度。\n據說牠的肉好吃得驚人。',
			'會旋轉著自己的尾鰭\n一口氣突擊。能夠以超過\n１００節的速度貫穿獵物。',
		],
		[Language.Fr]: [
			'Sa mâchoire pointue comme une lance est aussi\ndure que l’acier, et sa chair serait, contre toute\nattente, succulente.',
			'Il charge d’un coup en faisant tourner sa nageoire\ncaudale. Il peut transpercer ses proies\nà une vitesse dépassant les 100 nœuds.',
		],
		[Language.De]: [
			'Sein Kiefer ist spitz wie ein Speer und hart wie\nStahl. Außerdem soll Barrakiefa überraschend\ndeliziös sein.',
			'Es lässt seine Schwanzflosse rotieren und stößt\nmit einem Mal zu. Es durchsticht seine Beute mit\neiner Geschwindigkeit von über 100 Knoten.',
		],
		[Language.Es]: [
			'Su mandíbula es tan puntiaguda como una lanza\ny tan dura como el acero. Al parecer, su carne es\nsorprendentemente deliciosa.',
			'Hace girar su aleta caudal para impulsarse y\narremeter contra la presa, a la que ensarta a\nuna velocidad que supera los 100 nudos.',
		],
		[Language.It]: [
			'La sua mandibola è appuntita come una lancia\ne dura come l’acciaio. Sembra che le sue carni\nsiano incredibilmente deliziose.',
			'Fa girare rapidamente la coda e carica a tutta\nforza, trafiggendo le sue prede a una velocità\ndi 100 nodi.',
		],
		[Language.En]: [
			'This Pokémon has a jaw that’s as sharp as a spear\nand as strong as steel. Apparently Barraskewda’s\nflesh is surprisingly tasty, too.',
			'It spins its tail fins to propel itself, surging\nforward at speeds of over 100 knots before\nramming prey and spearing into them.',
		],
		[Language.Ja]: [
			'槍のように　尖った　顎は\n鋼の　硬さ。　その　身は\n驚くほど　美味しいらしい。',
			'尾びれを　回転させ　一気に\n突撃。　１００ノットを　超える\n速度で　獲物を　つらぬくぞ。',
		],
		[Language.ZhHans]: [
			'像长矛一样尖锐的下巴\n拥有钢铁般的硬度。\n据说它的肉好吃得惊人。',
			'会旋转着自己的尾鳍\n一口气突击。能够以超过\n１００节的速度贯穿猎物。',
		],
	},
	[
		[
			Variety.Barraskewda,
			172,
			13,
			300,
			[Type.Water],
			{
				frontDefault: '9902f550.png',
				frontShiny: 'f8375d39.png',
				backDefault: '0bda231d.png',
				backShiny: 'be402930.png',
			},
			{
				[Stat.Hp]: {baseStat: 61},
				[Stat.Attack]: {baseStat: 123},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 136, effort: 2},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.FuryAttack,
					Move.Bite,
					Move.Peck,
					Move.AquaJet,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.IceBeam,
					Move.Blizzard,
					Move.WaterPulse,
					Move.TeraBlast,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					56,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HydroPump,
					Move.Surf,
					Move.HyperBeam,
					Move.Agility,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.BrickBreak,
					Move.CloseCombat,
					Move.PoisonJab,
					Move.GigaImpact,
					Move.IceFang,
					Move.DrillRun,
					Move.ThroatChop,
					Move.PsychicFangs,
					Move.Liquidation,
					Move.ScaleShot,
					Move.FlipTurn,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					18,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					48,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.FuryAttack,
					Move.Bite,
					Move.Peck,
					Move.AquaJet,
					Move.ThroatChop,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					56,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HydroPump,
					Move.Surf,
					Move.HyperBeam,
					Move.Agility,
					Move.FocusEnergy,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.BrickBreak,
					Move.Dive,
					Move.Bounce,
					Move.CloseCombat,
					Move.Assurance,
					Move.PoisonJab,
					Move.GigaImpact,
					Move.IceFang,
					Move.Round,
					Move.Scald,
					Move.DrillRun,
					Move.ThroatChop,
					Move.PsychicFangs,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dive,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Liquidation,
					48,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ScaleShot,
					Move.FlipTurn,
				),
			].flat(),
			[
				{
					ability: Ability.SwiftSwim,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.PropellerTail,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Barraskewda,
					PokemonFormBits.Default,
					{
						frontDefault: '9902f550.png',
						frontShiny: 'f8375d39.png',
						backDefault: '0bda231d.png',
						backShiny: 'be402930.png',
					},
					[Type.Water],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Toxel,
	50,
	75,
	Color.Purple,
	[EggGroup.NoEggs],
	4,
	PokemonSpeciesBits.Baby,
	Generation.GenerationVIII,
	25,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['エレズン'],
		[Language.Roomaji]: ['Eleson'],
		[Language.Ko]: ['일레즌'],
		[Language.ZhHant]: ['毒電嬰'],
		[Language.Fr]: ['Toxizap'],
		[Language.De]: ['Toxel'],
		[Language.Es]: ['Toxel'],
		[Language.It]: ['Toxel'],
		[Language.En]: ['Toxel'],
		[Language.Ja]: ['エレズン'],
		[Language.ZhHans]: ['电音婴'],
	},
	{
		[Language.JaHrkt]: ['あかごポケモン'],
		[Language.Ko]: ['젖먹이포켓몬'],
		[Language.ZhHant]: ['嬰兒寶可夢'],
		[Language.Fr]: ['Pokémon Poupon'],
		[Language.De]: ['Baby-Pokémon'],
		[Language.Es]: ['Pokémon Retoño'],
		[Language.It]: ['Pokémon Bebè'],
		[Language.En]: ['Baby Pokémon'],
		[Language.Ja]: ['あかごポケモン'],
		[Language.ZhHans]: ['婴儿宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'たいないの　どくぶくろに　ためた\nどくそを　ひふから　ぶんぴつ。\nさわると　ピリピリと　しびれる。',
			'どくそを　かがくへんか　させて\nでんきを　だす。　でんりょくは\nよわいが　ビリビリと　しびれる。',
		],
		[Language.Ko]: [
			'체내의 독주머니에 저장하고 있는\n독소를 피부를 통해 분비한다.\n건드리면 찌릿하고 마비된다.',
			'독소를 화학 변화시켜\n전기를 만들어 낸다. 전력은\n약하지만 찌릿찌릿 마비된다.',
		],
		[Language.ZhHant]: [
			'會從皮膚把體內的毒囊裡\n儲存著的毒素分泌出來。\n一旦觸碰牠就會感到麻麻的。',
			'透過讓自身的毒素產生\n化學反應來發電。電力\n雖然弱，卻能造成麻痺。',
		],
		[Language.Fr]: [
			'Sa peau sécrète les toxines accumulées\ndans sa poche de poison interne.\nQuand on le touche, on se fait électrocuter.',
			'Par un procédé chimique, il change son poison\nen électricité. L’intensité du courant est faible,\nmais peut engourdir un ennemi.',
		],
		[Language.De]: [
			'Das Gift aus dem Giftsack in seinem Körper\nsondert es über die Haut ab. Berührt man es,\nbekommt man einen lähmenden Schock verpasst.',
			'Es ändert sein Toxin auf chemischer Ebene,\num Strom zu erzeugen. Dieser ist zwar schwach,\nkann aber einen lähmenden Schlag verursachen.',
		],
		[Language.Es]: [
			'Secreta toxinas por la piel y las almacena\nen una bolsa de veneno interna. Tocarlo da\ncalambre.',
			'Provoca una reacción química para generar\nenergía eléctrica con sus toxinas. Aunque de\nbajo voltaje, puede causar entumecimiento.',
		],
		[Language.It]: [
			'Secerne dalla pelle le tossine contenute nella\nsua sacca di veleno interna. Provoca a chi lo\ntocca una sensazione di bruciore.',
			'Produce elettricità grazie a una reazione chimica\ndelle sue tossine. Il voltaggio è debole, ma può\nintorpidire il nemico.',
		],
		[Language.En]: [
			'It stores poison in an internal poison sac and\nsecretes that poison through its skin. If you touch\nthis Pokémon, a tingling sensation follows.',
			'It manipulates the chemical makeup of its poison\nto produce electricity. The voltage is weak, but it\ncan cause a tingling paralysis.',
		],
		[Language.Ja]: [
			'体内の　毒袋に　溜めた\n毒素を　皮膚から　分泌。\n触ると　ピリピリと　痺れる。',
			'毒素を　化学変化　させて\n電気を　出す。　電力は\n弱いが　ビリビリと　痺れる。',
		],
		[Language.ZhHans]: [
			'会从皮肤把体内的毒囊里\n储存着的毒素分泌出来。\n一旦触碰它就会感到麻麻的。',
			'通过让自身的毒素产生\n化学反应来发电。电力\n虽然弱，却能造成麻痹。',
		],
	},
	[
		[
			Variety.Toxel,
			48,
			4,
			110,
			[Type.Electric, Type.Poison],
			{
				frontDefault: '448dafc5.png',
				frontShiny: '0429b1da.png',
				backDefault: '516ebe46.png',
				backShiny: '3ed4a734.png',
			},
			{
				[Stat.Hp]: {baseStat: 40},
				[Stat.Attack]: {baseStat: 38},
				[Stat.Defense]: {baseStat: 35},
				[Stat.SpecialAttack]: {baseStat: 54, effort: 1},
				[Stat.SpecialDefense]: {baseStat: 35},
				[Stat.Speed]: {baseStat: 40},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Growl,
					Move.Acid,
					Move.Flail,
					Move.Belch,
					Move.Nuzzle,
					Move.TearfulLook,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.Facade,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Charm,
					Move.Endeavor,
					Move.MetalSound,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Endeavor,
					Move.MetalSound,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Growl,
					Move.Acid,
					Move.Flail,
					Move.Belch,
					Move.Nuzzle,
					Move.TearfulLook,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Encore,
					Move.Facade,
					Move.Round,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Endeavor,
					Move.MetalSound,
					Move.PowerUpPunch,
				),
			].flat(),
			[
				{
					ability: Ability.Rattled,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Static,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Klutz,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Toxel,
					PokemonFormBits.Default,
					{
						frontDefault: '448dafc5.png',
						frontShiny: '0429b1da.png',
						backDefault: '516ebe46.png',
						backShiny: '3ed4a734.png',
					},
					[Type.Electric, Type.Poison],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Toxtricity,
	50,
	45,
	Color.Purple,
	[EggGroup.Humanshape],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ストリンダー'],
		[Language.Roomaji]: ['Strinder'],
		[Language.Ko]: ['스트린더'],
		[Language.ZhHant]: ['顫弦蠑螈'],
		[Language.Fr]: ['Salarsen'],
		[Language.De]: ['Riffex'],
		[Language.Es]: ['Toxtricity'],
		[Language.It]: ['Toxtricity'],
		[Language.En]: ['Toxtricity'],
		[Language.Ja]: ['ストリンダー'],
		[Language.ZhHans]: ['颤弦蝾螈'],
	},
	{
		[Language.JaHrkt]: ['パンクポケモン'],
		[Language.Ko]: ['펑크포켓몬'],
		[Language.ZhHant]: ['龐克寶可夢'],
		[Language.Fr]: ['Pokémon Punk'],
		[Language.De]: ['Punk-Pokémon'],
		[Language.Es]: ['Pokémon Punki'],
		[Language.It]: ['Pokémon Punk'],
		[Language.En]: ['Punk Pokémon'],
		[Language.Ja]: ['パンクポケモン'],
		[Language.ZhHans]: ['庞克宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'むねの　とっきを　かきむしり\nでんきを　おこすとき　あたりに\nギターのような　おとが　ひびく。',
			'ケンカごしで　きが　みじかい。\nよどんだ　みずを　ガブのみして\nすいちゅうの　どくそを　とりこむ。',
		],
		[Language.Ko]: [
			'가슴에 난 돌기를 긁으면\n전기가 일어나며 주위에\n기타와 비슷한 소리가 울려퍼진다.',
			'호전적이며 성미가 급하다.\n고인 물을 벌컥벌컥 마셔서\n물속의 독소를 흡수한다.',
		],
		[Language.ZhHant]: [
			'當牠用力抓撓胸部的突起物\n來製造電力時，四周會響起\n如同吉他演奏般的聲音。',
			'氣勢洶洶的急性子。\n會大口喝下混濁的水，\n吸收其中所含的毒素。',
		],
		[Language.Fr]: [
			'Lorsqu’il gratte l’excroissance sur son ventre\npour produire de l’électricité, on peut entendre\nun son similaire à celui d’une guitare.',
			'Impatient et bagarreur, ce Pokémon avale\nde grandes gorgées d’eau croupie pour\nen absorber toute la toxicité.',
		],
		[Language.De]: [
			'Wenn es am Fortsatz an seiner Brust kratzt und\ndadurch Strom erzeugt, dann erklingt in der\nUmgebung ein Ton wie von einer Gitarre.',
			'Dieses streitsüchtige und leicht reizbare Pokémon\nkippt abgestandenes Wasser in sich hinein und\nnimmt die darin enthaltenen Giftstoffe in sich auf.',
		],
		[Language.Es]: [
			'Cuando rasga las protuberancias del pecho para\ngenerar energía eléctrica, emite un sonido similar\nal de una guitarra, que reverbera en el entorno.',
			'Posee un carácter belicoso e irascible. Bebe una\ngran cantidad de agua estancada para absorber\nsus toxinas.',
		],
		[Language.It]: [
			'Quando produce energia elettrica strofinando\nle protuberanze che ha sul petto, tutt’intorno\nriverbera un suono simile a quello di una chitarra.',
			'È litigioso e irascibile. Ingurgita acqua stagnante\nin grandi quantità per assorbire le tossine in essa\ncontenute.',
		],
		[Language.En]: [
			'When this Pokémon sounds as if it’s strumming a\nguitar, it’s actually clawing at the protrusions on\nits chest to generate electricity.',
			'This short-tempered and aggressive Pokémon\nchugs stagnant water to absorb any toxins it\nmight contain.',
		],
		[Language.Ja]: [
			'胸の　突起を　掻きむしり\n電気を　起こすとき　あたりに\nギターのような　音が　響く。',
			'ケンカ腰で　気が　短い。\nよどんだ　水を　がぶ飲みして\n水中の　毒素を　取りこむ。',
		],
		[Language.ZhHans]: [
			'当它用力抓挠胸部的突起物\n来制造电力时，四周会响起\n如同吉他演奏般的声音。',
			'气势汹汹的急性子。\n会大口喝下浑浊的水，\n吸收其中所含的毒素。',
		],
	},
	[
		[
			Variety.ToxtricityAmped,
			176,
			16,
			400,
			[Type.Electric, Type.Poison],
			{
				frontDefault: '69476145.png',
				frontShiny: '80eb1b73.png',
				backDefault: 'cdf032a7.png',
				backShiny: '8a90d3e2.png',
			},
			{
				[Stat.Hp]: {baseStat: 75},
				[Stat.Attack]: {baseStat: 98},
				[Stat.Defense]: {baseStat: 70},
				[Stat.SpecialAttack]: {baseStat: 114, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.ThunderPunch,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.Fling,
					Move.PoisonJab,
					Move.DrainPunch,
					Move.GigaImpact,
					Move.GunkShot,
					Move.Venoshock,
					Move.SludgeWave,
					Move.ElectroBall,
					Move.StoredPower,
					Move.Hex,
					Move.VoltSwitch,
					Move.WildCharge,
					Move.Snarl,
					Move.EerieImpulse,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Toxic,
					Move.Metronome,
					Move.Thief,
					Move.Charm,
					Move.RainDance,
					Move.SunnyDay,
					Move.Charge,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.Endeavor,
					Move.MetalSound,
					Move.PoisonTail,
					Move.ToxicSpikes,
					Move.ThunderFang,
					Move.ChargeBeam,
					Move.AcidSpray,
					Move.Electroweb,
					Move.ElectricTerrain,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.PsychicNoise,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Growl,
					Move.Acid,
					Move.ThunderShock,
					Move.Flail,
					Move.AcidSpray,
					Move.Belch,
					Move.NobleRoar,
					Move.Nuzzle,
					Move.TearfulLook,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Spark,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShockWave,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShiftGear,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Boomburst,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Overdrive,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Screech,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Encore,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.Payback,
					Move.Fling,
					Move.PoisonJab,
					Move.DrainPunch,
					Move.GigaImpact,
					Move.GunkShot,
					Move.Venoshock,
					Move.SludgeWave,
					Move.ElectroBall,
					Move.Round,
					Move.StoredPower,
					Move.Hex,
					Move.VoltSwitch,
					Move.WildCharge,
					Move.Snarl,
					Move.EerieImpulse,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Growl,
					Move.Acid,
					Move.ThunderShock,
					Move.Flail,
					Move.Spark,
					Move.AcidSpray,
					Move.Belch,
					Move.NobleRoar,
					Move.EerieImpulse,
					Move.Nuzzle,
					Move.TearfulLook,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShockWave,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Venoshock,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShiftGear,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Boomburst,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Overdrive,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.RisingVoltage,
				),
			].flat(),
			[
				{
					ability: Ability.PunkRock,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Plus,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Technician,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.ToxtricityAmped,
					PokemonFormBits.Default,
					{
						frontDefault: '69476145.png',
						frontShiny: '80eb1b73.png',
						backDefault: 'cdf032a7.png',
						backShiny: '8a90d3e2.png',
					},
					[Type.Electric, Type.Poison],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Salarsen Forme Aigüe'],
						[Language.De]: ['Riffex (Hochform)'],
						[Language.En]: ['Amped Toxtricity'],
					},
					{
						[Language.JaHrkt]: ['ハイなすがた'],
						[Language.Ko]: ['하이한 모습'],
						[Language.ZhHant]: ['高調的樣子'],
						[Language.Fr]: ['Forme Aigüe'],
						[Language.De]: ['Hoch-Form'],
						[Language.Es]: ['Forma Aguda'],
						[Language.It]: ['Forma Melodia'],
						[Language.En]: ['Amped Form'],
						[Language.Ja]: ['ハイなすがた'],
						[Language.ZhHans]: ['高调的样子'],
					},
					'amped',
				],
			],
		],
		[
			Variety.ToxtricityLowKey,
			176,
			16,
			400,
			[Type.Electric, Type.Poison],
			{
				frontDefault: 'f1550977.png',
				frontShiny: 'cccbf5a4.png',
				backDefault: '3436b8c3.png',
				backShiny: '83df66c9.png',
			},
			{
				[Stat.Hp]: {baseStat: 75},
				[Stat.Attack]: {baseStat: 98},
				[Stat.Defense]: {baseStat: 70},
				[Stat.SpecialAttack]: {baseStat: 114, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.ThunderPunch,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.Fling,
					Move.PoisonJab,
					Move.DrainPunch,
					Move.GigaImpact,
					Move.GunkShot,
					Move.SludgeWave,
					Move.ElectroBall,
					Move.StoredPower,
					Move.Hex,
					Move.VoltSwitch,
					Move.WildCharge,
					Move.Snarl,
					Move.EerieImpulse,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Toxic,
					Move.Metronome,
					Move.Thief,
					Move.Charm,
					Move.RainDance,
					Move.SunnyDay,
					Move.Charge,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.Endeavor,
					Move.MetalSound,
					Move.PoisonTail,
					Move.ToxicSpikes,
					Move.ThunderFang,
					Move.ChargeBeam,
					Move.Venoshock,
					Move.AcidSpray,
					Move.Electroweb,
					Move.ElectricTerrain,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.PsychicNoise,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Growl,
					Move.Acid,
					Move.ThunderShock,
					Move.Flail,
					Move.AcidSpray,
					Move.Belch,
					Move.NobleRoar,
					Move.Nuzzle,
					Move.TearfulLook,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Spark,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShockWave,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Boomburst,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MagneticFlux,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Overdrive,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Screech,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Encore,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.Payback,
					Move.Fling,
					Move.PoisonJab,
					Move.DrainPunch,
					Move.GigaImpact,
					Move.GunkShot,
					Move.SludgeWave,
					Move.ElectroBall,
					Move.Round,
					Move.StoredPower,
					Move.Hex,
					Move.VoltSwitch,
					Move.WildCharge,
					Move.Snarl,
					Move.EerieImpulse,
					Move.VenomDrench,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.Growl,
					Move.Acid,
					Move.ThunderShock,
					Move.Flail,
					Move.Spark,
					Move.AcidSpray,
					Move.Belch,
					Move.NobleRoar,
					Move.EerieImpulse,
					Move.Nuzzle,
					Move.TearfulLook,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShockWave,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Boomburst,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.VenomDrench,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MagneticFlux,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Overdrive,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.RisingVoltage,
				),
			].flat(),
			[
				{
					ability: Ability.PunkRock,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Minus,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Technician,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.ToxtricityLowKey,
					PokemonFormBits.Default,
					{
						frontDefault: 'f1550977.png',
						frontShiny: 'cccbf5a4.png',
						backDefault: '3436b8c3.png',
						backShiny: '83df66c9.png',
					},
					[Type.Electric, Type.Poison],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Salarsen Forme Grave'],
						[Language.De]: ['Riffex (Tiefform)'],
						[Language.En]: ['Low Key Toxtricity'],
					},
					{
						[Language.JaHrkt]: ['ローなすがた'],
						[Language.Ko]: ['로우한 모습'],
						[Language.ZhHant]: ['低調的樣子'],
						[Language.Fr]: ['Forme Grave'],
						[Language.De]: ['Tief-Form'],
						[Language.Es]: ['Forma Grave'],
						[Language.It]: ['Forma Basso'],
						[Language.En]: ['Low Key Form'],
						[Language.Ja]: ['ローなすがた'],
						[Language.ZhHans]: ['低调的样子'],
					},
					'low-key',
				],
			],
		],
		[
			Variety.ToxtricityAmpedGmax,
			176,
			240,
			10000,
			[Type.Electric, Type.Poison],
			{
				frontDefault: 'b09692c7.png',
				frontShiny: '12319ed5.png',
			},
			{
				[Stat.Hp]: {baseStat: 75},
				[Stat.Attack]: {baseStat: 98},
				[Stat.Defense]: {baseStat: 70},
				[Stat.SpecialAttack]: {baseStat: 114, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.PunkRock,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Plus,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Technician,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.ToxtricityAmpedGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'b09692c7.png',
						frontShiny: '12319ed5.png',
					},
					[Type.Electric, Type.Poison],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Salarsen Forme Aigüe Gigamax'],
						[Language.De]: ['Gigadynamax-Riffex (Hochform)'],
						[Language.En]: ['Gigantamax Amped Toxtricity'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
		[
			Variety.ToxtricityLowKeyGmax,
			176,
			240,
			10000,
			[Type.Electric, Type.Poison],
			{
				frontDefault: 'b09692c7.png',
				frontShiny: '12319ed5.png',
			},
			{
				[Stat.Hp]: {baseStat: 75},
				[Stat.Attack]: {baseStat: 98},
				[Stat.Defense]: {baseStat: 70},
				[Stat.SpecialAttack]: {baseStat: 114, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.PunkRock,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Minus,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Technician,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.ToxtricityLowKeyGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'b09692c7.png',
						frontShiny: '12319ed5.png',
					},
					[Type.Electric, Type.Poison],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Salarsen Forme Grave Gigamax'],
						[Language.De]: ['Gigadynamax-Riffex (Tiefform)'],
						[Language.En]: ['Gigantamax Low Key Toxtricity'],
					},
					{
						[Language.Fr]: ['Gigantamax Form'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Sizzlipede,
	50,
	190,
	Color.Red,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Tentacles,
	{
		[Language.JaHrkt]: ['ヤクデ'],
		[Language.Roomaji]: ['Yakude'],
		[Language.Ko]: ['태우지네'],
		[Language.ZhHant]: ['燒火蚣'],
		[Language.Fr]: ['Grillepattes'],
		[Language.De]: ['Thermopod'],
		[Language.Es]: ['Sizzlipede'],
		[Language.It]: ['Sizzlipede'],
		[Language.En]: ['Sizzlipede'],
		[Language.Ja]: ['ヤクデ'],
		[Language.ZhHans]: ['烧火蚣'],
	},
	{
		[Language.JaHrkt]: ['はつねつポケモン'],
		[Language.Ko]: ['발열포켓몬'],
		[Language.ZhHant]: ['發熱寶可夢'],
		[Language.Fr]: ['Pokémon Calorifère'],
		[Language.De]: ['Exotherm-Pokémon'],
		[Language.Es]: ['Pokémon Radiador'],
		[Language.It]: ['Pokémon Termogeno'],
		[Language.En]: ['Radiator Pokémon'],
		[Language.Ja]: ['はつねつポケモン'],
		[Language.ZhHans]: ['发热宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'からだに　ためた　かねんガスで\nはつねつ。　とくに　おなかの\nきいろい　ぶぶんが　あついのだ。',
			'はつねつした　からだで　えものを\nしめあげる。　こんがり　やけたら\nむしゃむしゃ　いただくのだ。',
		],
		[Language.Ko]: [
			'몸속에 모아둔 가연성 가스로\n열을 낸다. 특히 배 쪽의\n노란 부분이 뜨겁다.',
			'발열된 몸으로 먹이를\n세게 조른다. 알맞게 구워지면\n우적우적 먹어버린다.',
		],
		[Language.ZhHant]: [
			'靠儲存在體內的可燃氣體\n來發熱。熱度最高的是\n腹部的黃色部分。',
			'會用滾燙的身體勒緊獵物，\n等到烤得恰到好處之時，\n就把牠們大口大口地吃掉。',
		],
		[Language.Fr]: [
			'Il produit de la chaleur grâce au gaz inflammable\nqu’il emmagasine dans son corps. La partie jaune\nde son abdomen est particulièrement brûlante.',
			'Il enserre fermement ses proies avec son corps\nbrûlant et, quand elles sont bien grillées,\nil les dévore.',
		],
		[Language.De]: [
			'Mit dem entzündlichen Gas in seinem Körper\nerzeugt es Hitze. Die gelben Stellen an seinem\nBauch werden besonders heiß.',
			'Es nimmt Beute mit seinem aufgeheizten Körper\nin die Mangel. Sobald sie gut durchgebraten ist,\nfrisst es sie genüsslich.',
		],
		[Language.Es]: [
			'Genera calor consumiendo el gas inflamable que\nalmacena en su cuerpo. Los círculos amarillos del\nabdomen están particularmente calientes.',
			'Oprime a sus presas con su cuerpo candente.\nUna vez bien tostadas, las devora con fruición.',
		],
		[Language.It]: [
			'Genera calore grazie ai gas combustibili\naccumulati nel suo corpo. Le parti gialle\ndel suo addome sono particolarmente calde.',
			'Stritola le prede con il suo corpo ardente e,\nquando sono belle abbrustolite, le divora.',
		],
		[Language.En]: [
			'It stores flammable gas in its body and uses it to\ngenerate heat. The yellow sections on its belly\nget particularly hot.',
			'It wraps prey up with its heated body, cooking\nthem in its coils. Once they’re well-done, it will\nvoraciously nibble them down to the last morsel.',
		],
		[Language.Ja]: [
			'体に　溜めた　可燃ガスで\n発熱。　とくに　お腹の\n黄色い　部分が　熱いのだ。',
			'発熱した　体で　獲物を\n締め上げる。　こんがり　焼けたら\nむしゃむしゃ　いただくのだ。',
		],
		[Language.ZhHans]: [
			'靠储存在体内的可燃气体\n来发热。热度最高的是\n腹部的黄色部分。',
			'会用滚烫的身体勒紧猎物，\n等到烤得恰到好处之时，\n就把它们大口大口地吃掉。',
		],
	},
	[
		[
			Variety.Sizzlipede,
			61,
			7,
			10,
			[Type.Fire, Type.Bug],
			{
				frontDefault: 'd3394950.png',
				frontShiny: 'da36b318.png',
				backDefault: '585df129.png',
				backShiny: '79d0d7bd.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 65, effort: 1},
				[Stat.Defense]: {baseStat: 45},
				[Stat.SpecialAttack]: {baseStat: 50},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 45},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Wrap,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					10,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Ember,
					Move.Smokescreen,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FireSpin,
					35,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FireSpin,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Crunch,
					Move.HeatWave,
					Move.Facade,
					Move.BugBuzz,
					Move.PowerWhip,
					Move.Venoshock,
					Move.Round,
					Move.Scald,
					Move.HeatCrash,
					Move.BrutalSwing,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DefenseCurl,
					Move.Rollout,
					Move.KnockOff,
					Move.StruggleBug,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlameWheel,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BugBite,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Coil,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Lunge,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FireLash,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BurnUp,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SkitterSmack,
					Move.ScorchingSands,
				),
			].flat(),
			[
				{
					ability: Ability.FlashFire,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.WhiteSmoke,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlameBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Sizzlipede,
					PokemonFormBits.Default,
					{
						frontDefault: 'd3394950.png',
						frontShiny: 'da36b318.png',
						backDefault: '585df129.png',
						backShiny: '79d0d7bd.png',
					},
					[Type.Fire, Type.Bug],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Centiskorch,
	50,
	75,
	Color.Red,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Tentacles,
	{
		[Language.JaHrkt]: ['マルヤクデ'],
		[Language.Roomaji]: ['Maruyakude'],
		[Language.Ko]: ['다태우지네'],
		[Language.ZhHant]: ['焚焰蚣'],
		[Language.Fr]: ['Scolocendre'],
		[Language.De]: ['Infernopod'],
		[Language.Es]: ['Centiskorch'],
		[Language.It]: ['Centiskorch'],
		[Language.En]: ['Centiskorch'],
		[Language.Ja]: ['マルヤクデ'],
		[Language.ZhHans]: ['焚焰蚣'],
	},
	{
		[Language.JaHrkt]: ['はつねつポケモン'],
		[Language.Ko]: ['발열포켓몬'],
		[Language.ZhHant]: ['發熱寶可夢'],
		[Language.Fr]: ['Pokémon Calorifère'],
		[Language.De]: ['Exotherm-Pokémon'],
		[Language.Es]: ['Pokémon Radiador'],
		[Language.It]: ['Pokémon Termogeno'],
		[Language.En]: ['Radiator Pokémon'],
		[Language.Ja]: ['はつねつポケモン'],
		[Language.ZhHans]: ['发热宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'はつねつじの　たいおんは　およそ\n８００ど。　からだを　ムチのように\nしならせて　とびかかってくるぞ。',
			'こうげきてきな　せいしつ。\nやけた　からだも　きけんだが\nおおきな　キバも　するどいぞ。',
		],
		[Language.Ko]: [
			'발열 시의 체온은 약 800도.\n몸을 채찍처럼 휘면서\n덤벼든다.',
			'공격적인 성질을 가졌다.\n탄 몸도 위험하지만\n큰 이빨도 날카롭다.',
		],
		[Language.ZhHant]: [
			'發熱時的體溫大約有８００度。\n會像鞭子那樣彎曲身體，\n朝著敵人彈跳過去。',
			'性情極具攻擊性。\n危險的不只是牠燒燙的身體，\n大大的獠牙也銳利無比。',
		],
		[Language.Fr]: [
			'Quand il génère de la chaleur, sa température\nest d’environ 800 °C. Il se sert de son corps\ncomme d’un fouet pour sauter sur ses ennemis.',
			'Il est de nature agressive. Non seulement\nson corps brûlant est dangereux, mais il possède\nen plus d’énormes crocs très pointus.',
		],
		[Language.De]: [
			'Wenn es Hitze erzeugt, beträgt seine Temperatur\netwa 800 ºC. Es bewegt seinen Körper wie eine\nPeitsche, um dann den Gegner anzuspringen.',
			'Es ist angriffslustig veranlagt. Sein entflammter\nKörper und sein großes, scharfes Mundwerkzeug\nstellen eine enorme Gefahr dar.',
		],
		[Language.Es]: [
			'Cuando genera calor, su temperatura corporal\nalcanza aproximadamente los 800 °C. Usa el\ncuerpo a modo de látigo para lanzarse al ataque.',
			'Posee una naturaleza agresiva. El peligro que\nentraña su cuerpo candente es considerable,\naunque sus afilados colmillos no le van a la zaga.',
		],
		[Language.It]: [
			'Quando genera calore, la temperatura del suo\ncorpo raggiunge gli 800 ºC. Si lancia all’attacco\nusando il corpo come una frusta.',
			'Ha una natura aggressiva. Il suo corpo\nincandescente lo rende molto pericoloso,\ncosì come le sue lunghe zanne appuntite.',
		],
		[Language.En]: [
			'When it heats up, its body temperature reaches\nabout 1,500 degrees Fahrenheit. It lashes its\nbody like a whip and launches itself at enemies.',
			'While its burning body is already dangerous on\nits own, this excessively hostile Pokémon also has\nlarge and very sharp fangs.',
		],
		[Language.Ja]: [
			'発熱時の　体温は　およそ\n８００度。　体を　鞭のように\nしならせて　跳びかかってくるぞ。',
			'攻撃的な　性質。\n焼けた　体も　危険だが\n大きな　キバも　鋭いぞ。',
		],
		[Language.ZhHans]: [
			'发热时的体温大约有８００度。\n会像鞭子那样弯曲身体\n朝着敌人弹跳过去。',
			'性格极具攻击性。\n危险的不只是它烧烫的身体，\n大大的獠牙也锐利无比。',
		],
	},
	[
		[
			Variety.Centiskorch,
			184,
			30,
			1200,
			[Type.Fire, Type.Bug],
			{
				frontDefault: '86be36d9.png',
				frontShiny: '3991906c.png',
				backDefault: '24a14c60.png',
				backShiny: '4f6fd52e.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 115, effort: 2},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 90},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 65},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					32,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Wrap,
					Move.Bite,
					Move.Ember,
					Move.Smokescreen,
					Move.Inferno,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.FireSpin,
					Move.FireBlast,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Crunch,
					Move.HeatWave,
					Move.WillOWisp,
					Move.Facade,
					Move.Overheat,
					Move.FlareBlitz,
					Move.XScissor,
					Move.BugBuzz,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.FireFang,
					Move.PowerWhip,
					Move.Venoshock,
					Move.Round,
					Move.Scald,
					Move.HeatCrash,
					Move.MysticalFire,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FireSpin,
					39,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlameWheel,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BugBite,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Coil,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Lunge,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FireLash,
					53,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BurnUp,
					67,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SkitterSmack,
					Move.ScorchingSands,
				),
			].flat(),
			[
				{
					ability: Ability.FlashFire,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.WhiteSmoke,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlameBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Centiskorch,
					PokemonFormBits.Default,
					{
						frontDefault: '86be36d9.png',
						frontShiny: '3991906c.png',
						backDefault: '24a14c60.png',
						backShiny: '4f6fd52e.png',
					},
					[Type.Fire, Type.Bug],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CentiskorchGmax,
			184,
			750,
			10000,
			[Type.Fire, Type.Bug],
			{
				frontDefault: '5abdc800.png',
				frontShiny: '95cd1f4a.png',
				backDefault: '6e2809f9.png',
				backShiny: '509ddadb.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 115, effort: 2},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 90},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 65},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.FlashFire,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.WhiteSmoke,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.FlameBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.CentiskorchGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '5abdc800.png',
						frontShiny: '95cd1f4a.png',
						backDefault: '6e2809f9.png',
						backShiny: '509ddadb.png',
					},
					[Type.Fire, Type.Bug],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Scolocendre Gigamax'],
						[Language.De]: ['Gigadynamax-Infernopod'],
						[Language.En]: ['Gigantamax Centiskorch'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Clobbopus,
	50,
	180,
	Color.Brown,
	[EggGroup.Water1, EggGroup.Humanshape],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.MediumSlow,
	Shape.Tentacles,
	{
		[Language.JaHrkt]: ['タタッコ'],
		[Language.Roomaji]: ['Tatakko'],
		[Language.Ko]: ['때때무노'],
		[Language.ZhHant]: ['拳拳蛸'],
		[Language.Fr]: ['Poulpaf'],
		[Language.De]: ['Klopptopus'],
		[Language.Es]: ['Clobbopus'],
		[Language.It]: ['Clobbopus'],
		[Language.En]: ['Clobbopus'],
		[Language.Ja]: ['タタッコ'],
		[Language.ZhHans]: ['拳拳蛸'],
	},
	{
		[Language.JaHrkt]: ['だだっこポケモン'],
		[Language.Ko]: ['떼쟁이포켓몬'],
		[Language.ZhHant]: ['纏人寶可夢'],
		[Language.Fr]: ['Pokémon Caprice'],
		[Language.De]: ['Balg-Pokémon'],
		[Language.Es]: ['Pokémon Malcriado'],
		[Language.It]: ['Pokémon Bizze'],
		[Language.En]: ['Tantrum Pokémon'],
		[Language.Ja]: ['だだっこポケモン'],
		[Language.ZhHans]: ['缠人宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'えさを　もとめ　ちじょうに　あがる。\nこうきしんおうせいで　めにしたものは\nとりあえず　しょくしゅで　なぐる。',
			'３さいじ　くらいの　かしこさ。\nしょくしゅは　よくちぎれるが\nさいせいするので　きにしない。',
		],
		[Language.Ko]: [
			'먹이를 찾아 지상으로 올라온다.\n호기심이 왕성해서 눈에 들어오는 것은\n일단 촉수로 때리고 본다.',
			'세 살 아이 정도의 지능을 가졌다.\n촉수는 잘 끊어지지만\n재생되기 때문에 신경 쓰지 않는다.',
		],
		[Language.ZhHant]: [
			'會為了尋找食物而登上陸地。\n擁有旺盛的好奇心，不管看到什麼，\n都會先用觸手打一打再說。',
			'智商大致相當於３歲的兒童。\n雖然觸手經常斷掉，但因為\n能再生，所以牠並不在意。',
		],
		[Language.Fr]: [
			'Il se rend sur la terre ferme pour se nourrir.\nTrès curieux, son premier réflexe est de frapper\ntout ce qu’il voit avec ses tentacules.',
			'Il a l’intelligence d’un enfant de trois ans.\nIl perd souvent ses tentacules, mais comme\nils repoussent, il ne s’en soucie guère.',
		],
		[Language.De]: [
			'Zur Futtersuche kommt es an Land. Es ist sehr\nneugierig, weshalb es alles, was es sieht,\nzunächst einmal mit seinen Tentakeln haut.',
			'Sein Verstand ist ungefähr auf dem Level eines\ndreijährigen Kindes. Es macht ihm nichts aus, dass\nseine Tentakel oft abreißen, da sie nachwachsen.',
		],
		[Language.Es]: [
			'Emerge a tierra firme en busca de alimento. Su\nextrema curiosidad lo induce a golpear con los\ntentáculos todo lo que entra en su campo visual.',
			'Su inteligencia es similar a la de un niño de tres\naños. Sus tentáculos se desprenden a menudo,\npero ni se inmuta, ya que se regeneran solos.',
		],
		[Language.It]: [
			'Si spinge sulla terraferma in cerca di cibo.\nÈ molto curioso e colpisce con i tentacoli tutto\nquello che entra nel suo campo visivo.',
			'Ha l’intelligenza di un bambino di 3 anni. Gli\nsi staccano spesso i tentacoli, ma poiché gli\nricrescono naturalmente non se ne preoccupa.',
		],
		[Language.En]: [
			'It’s very curious, but its means of investigating\nthings is to try to punch them with its tentacles.\nThe search for food is what brings it onto land.',
			'Its tentacles tear off easily, but it isn’t alarmed\nwhen that happens—it knows they’ll grow back.\nIt’s about as smart as a three-year-old.',
		],
		[Language.Ja]: [
			'餌を　求め　地上に　上がる。\n好奇心旺盛で　目にしたものは\nとりあえず　触手で　殴る。',
			'３歳児　くらいの　賢さ。\n触手は　よくちぎれるが\n再生するので　気にしない。',
		],
		[Language.ZhHans]: [
			'会为了寻找食物而登上陆地。\n拥有旺盛的好奇心，不管看到什么，\n都会先用触手打一打再说。',
			'智商大致相当于３岁的儿童。\n虽然触手经常断掉，但因为\n能再生，所以它并不在意。',
		],
	},
	[
		[
			Variety.Clobbopus,
			62,
			6,
			40,
			[Type.Fighting],
			{
				frontDefault: '3f338fd5.png',
				frontShiny: '569878e6.png',
				backDefault: 'a1f7cf8f.png',
				backShiny: '6b008a5b.png',
			},
			{
				[Stat.Hp]: {baseStat: 50},
				[Stat.Attack]: {baseStat: 68, effort: 1},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 50},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 32},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.IcePunch,
					Move.BodySlam,
					Move.Waterfall,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.Dive,
					Move.MuddyWater,
					Move.BulkUp,
					Move.MudShot,
					Move.Brine,
					Move.CloseCombat,
					Move.Payback,
					Move.FocusBlast,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bind,
					10,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.RockSmash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Submission,
					30,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SeismicToss,
					Move.PainSplit,
					Move.SuckerPunch,
					Move.Soak,
					Move.CircleThrow,
					Move.PowerUpPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Reversal,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Feint,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Coaching,
				),
			].flat(),
			[
				{
					ability: Ability.Limber,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Technician,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Clobbopus,
					PokemonFormBits.Default,
					{
						frontDefault: '3f338fd5.png',
						frontShiny: '569878e6.png',
						backDefault: 'a1f7cf8f.png',
						backShiny: '6b008a5b.png',
					},
					[Type.Fighting],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Grapploct,
	50,
	45,
	Color.Blue,
	[EggGroup.Water1, EggGroup.Humanshape],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.MediumSlow,
	Shape.Tentacles,
	{
		[Language.JaHrkt]: ['オトスパス'],
		[Language.Roomaji]: ['Otosupus'],
		[Language.Ko]: ['케오퍼스'],
		[Language.ZhHant]: ['八爪武師'],
		[Language.Fr]: ['Krakos'],
		[Language.De]: ['Kaocto'],
		[Language.Es]: ['Grapploct'],
		[Language.It]: ['Grapploct'],
		[Language.En]: ['Grapploct'],
		[Language.Ja]: ['オトスパス'],
		[Language.ZhHans]: ['八爪武师'],
	},
	{
		[Language.JaHrkt]: ['じゅうじゅつポケモン'],
		[Language.Ko]: ['유술포켓몬'],
		[Language.ZhHant]: ['柔術寶可夢'],
		[Language.Fr]: ['Pokémon Jujitsu'],
		[Language.De]: ['Jiu-Jitsu-Pokémon'],
		[Language.Es]: ['Pokémon Jiu-Jitsu'],
		[Language.It]: ['Pokémon Jujitsu'],
		[Language.En]: ['Jujitsu Pokémon'],
		[Language.Ja]: ['じゅうじゅつポケモン'],
		[Language.ZhHans]: ['柔术宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ぜんしんが　きんにくの　かたまり。\nしょくしゅを　つかって　くりだす\nしめわざの　いりょくは　すさまじい。',
			'おのれのうでを　ためすべく　りくに\nあがり　たいせんあいてを　さがす。\nたたかいおえると　うみに　かえる。',
		],
		[Language.Ko]: [
			'온몸이 근육덩어리다.\n촉수를 사용해서 펼치는\n조르기 기술의 위력은 무시무시하다.',
			'자신의 실력을 시험하기 위해\n육지로 올라가 대전 상대를 찾는다.\n싸움이 끝나면 바다로 돌아간다.',
		],
		[Language.ZhHant]: [
			'全身都是肌肉。\n會用觸手施展絞技，\n威力無與倫比。',
			'會為了試自己的身手\n而登上陸地尋找對手。\n戰鬥結束後就會回到海裡。',
		],
		[Language.Fr]: [
			'Son corps est un amas de muscles.\nLa puissance des prises d’étranglement\nqu’il exécute avec ses tentacules est saisissante.',
			'Mû par le besoin de tester la force de ses bras,\nil se rend sur la terre ferme pour trouver\nun adversaire. Il retourne à l’eau après le combat.',
		],
		[Language.De]: [
			'Sein Körper besteht gänzlich aus Muskeln.\nDie schiere Stärke seines Würgegriffs, bei dem\nes seine Tentakel einsetzt, ist sagenhaft.',
			'Um sein Können zu testen, kommt es an Land\nund begibt sich auf die Suche nach Gegnern.\nSind die Kämpfe vorbei, kehrt es ins Meer zurück.',
		],
		[Language.Es]: [
			'Todo su cuerpo es una mole de puro músculo.\nUtiliza los tentáculos para ejecutar técnicas de\nestrangulamiento con una formidable potencia.',
			'Se aventura en tierra firme para buscar rivales\ncontra los que luchar para medir su valía. Tras\nterminar el combate, regresa al mar.',
		],
		[Language.It]: [
			'Il suo corpo è un ammasso di muscoli.\nÈ in grado di stritolare con una potenza\nformidabile grazie ai suoi tentacoli.',
			'Si spinge sulla terraferma in cerca di avversari\nda sfidare per mettere alla prova la propria\nforza. Terminata la lotta, ritorna in mare.',
		],
		[Language.En]: [
			'A body made up of nothing but muscle makes\nthe grappling moves this Pokémon performs with\nits tentacles tremendously powerful.',
			'Searching for an opponent to test its skills\nagainst, it emerges onto land. Once the battle\nis over, it returns to the sea.',
		],
		[Language.Ja]: [
			'全身が　筋肉の　塊。\n触手を　使って　繰りだす\n絞め技の　威力は　凄まじい。',
			'おのれの腕を　試すべく　陸に\n上がり　対戦相手を　探す。\n戦い終えると　海に　帰る。',
		],
		[Language.ZhHans]: [
			'全身都是肌肉。\n会用触手施展绞技，\n威力无与伦比。',
			'会为了试自己的身手\n而登上陆地寻找对手。\n战斗结束后就会回到海里。',
		],
	},
	[
		[
			Variety.Grapploct,
			168,
			16,
			390,
			[Type.Fighting],
			{
				frontDefault: '2a2cd72c.png',
				frontShiny: '4eeb24ee.png',
				backDefault: '4119d5e6.png',
				backShiny: 'fd64c870.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 118, effort: 2},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 42},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.IcePunch,
					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.HyperBeam,
					Move.Dig,
					Move.Waterfall,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Whirlpool,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.Dive,
					Move.MuddyWater,
					Move.BulkUp,
					Move.MudShot,
					Move.Brine,
					Move.CloseCombat,
					Move.Payback,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.BrutalSwing,
					Move.StompingTantrum,
					Move.Liquidation,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bind,
					Move.Leer,
					Move.Octazooka,
					Move.RockSmash,
					Move.Feint,
					Move.Octolock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Submission,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Reversal,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TopsyTurvy,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Octolock,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SkitterSmack,
					Move.Coaching,
				),
			].flat(),
			[
				{
					ability: Ability.Limber,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Technician,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Grapploct,
					PokemonFormBits.Default,
					{
						frontDefault: '2a2cd72c.png',
						frontShiny: '4eeb24ee.png',
						backDefault: '4119d5e6.png',
						backShiny: 'fd64c870.png',
					},
					[Type.Fighting],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Sinistea,
	50,
	120,
	Color.Purple,
	[EggGroup.Mineral, EggGroup.Indeterminate],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Ball,
	{
		[Language.JaHrkt]: ['ヤバチャ'],
		[Language.Roomaji]: ['Yabacha'],
		[Language.Ko]: ['데인차'],
		[Language.ZhHant]: ['來悲茶'],
		[Language.Fr]: ['Théffroi'],
		[Language.De]: ['Fatalitee'],
		[Language.Es]: ['Sinistea'],
		[Language.It]: ['Sinistea'],
		[Language.En]: ['Sinistea'],
		[Language.Ja]: ['ヤバチャ'],
		[Language.ZhHans]: ['来悲茶'],
	},
	{
		[Language.JaHrkt]: ['こうちゃポケモン'],
		[Language.Ko]: ['홍차포켓몬'],
		[Language.ZhHant]: ['紅茶寶可夢'],
		[Language.Fr]: ['Pokémon Thé Noir'],
		[Language.De]: ['Schwarztee-Pokémon'],
		[Language.Es]: ['Pokémon Té'],
		[Language.It]: ['Pokémon Tè'],
		[Language.En]: ['Black Tea Pokémon'],
		[Language.Ja]: ['こうちゃポケモン'],
		[Language.ZhHans]: ['红茶宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'のこされ　ひえきった　こうちゃに\nさみしがりやな　たましいが　やどり\nポケモンに　なったと　いわれている。',
			'すみかに　している　ティーカップは\nゆうめいな　アンティークの　しょっき。\nおおくの　がんさくが　でまわっている。',
		],
		[Language.Ko]: [
			'차게 식은 남은 홍차에\n외로움을 타는 영혼이 깃들어\n포켓몬이 되었다고 전해진다.',
			'거처로 삼고 있는 찻잔은\n유명한 골동품 식기다.\n위작이 많이 나돌고 있다.',
		],
		[Language.ZhHant]: [
			'據說這隻寶可夢是因為\n害怕寂寞的靈魂住進了\n涼透的喝剩紅茶而誕生的。',
			'被牠當成住處的茶杯\n是有名的古董餐具。\n市面上有很多贗品。',
		],
		[Language.Fr]: [
			'On raconte que ce Pokémon est né lorsqu’une\nâme esseulée a plongé dans un reste de thé noir\nfroid.',
			'Il élit domicile dans des tasses de thé anciennes\nde grand renom. Parmi celles-ci se trouvent\nde nombreuses contrefaçons.',
		],
		[Language.De]: [
			'Es heißt, eine einsame Seele habe Besitz von\neiner abgestellten, kalten Tasse Schwarztee\nergriffen und sei zu diesem Pokémon geworden.',
			'Die Teetasse, die es bewohnt, ist eine berühmte\nAntiquität. Es befinden sich allerdings auch viele\nFälschungen im Umlauf.',
		],
		[Language.Es]: [
			'Según se dice, este Pokémon surgió de un alma\nsolitaria que poseyó una taza abandonada llena\nde un té ya frío.',
			'La taza de té donde se hospeda forma parte de\nuna antigua y valiosa vajilla, de la que circulan\nnumerosas falsificaciones.',
		],
		[Language.It]: [
			'Si dice che questo Pokémon sia nato quando\nun’anima solitaria si è impossessata di una\ntazza dimenticata piena di tè ormai freddo.',
			'La tazza da tè in cui vive è un vero pezzo\ndi antiquariato di cui circolano molte copie\ncontraffatte.',
		],
		[Language.En]: [
			'This Pokémon is said to have been born when\na lonely spirit possessed a cold, leftover cup\nof tea.',
			'The teacup in which this Pokémon makes its\nhome is a famous piece of antique tableware.\nMany forgeries are in circulation.',
		],
		[Language.Ja]: [
			'残され　冷えきった　紅茶に\nさみしがりやな　魂が　宿り\nポケモンに　なったと　いわれている。',
			'すみかに　している　ティーカップは\n有名な　アンティークの　食器。\n多くの　贋作が　出回っている。',
		],
		[Language.ZhHans]: [
			'据说这只宝可梦是因为\n害怕寂寞的灵魂住进了\n凉透的喝剩红茶而诞生的。',
			'被它当成住处的茶杯\n是有名的古董餐具。\n市面上有很多赝品。',
		],
	},
	[
		[
			Variety.Sinistea,
			62,
			1,
			2,
			[Type.Ghost],
			{
				frontDefault: '9ed53b8d.png',
				frontShiny: 'd9d08784.png',
				backDefault: '3b056c35.png',
				backShiny: '21b7d78d.png',
			},
			{
				[Stat.Hp]: {baseStat: 40},
				[Stat.Attack]: {baseStat: 45},
				[Stat.Defense]: {baseStat: 45},
				[Stat.SpecialAttack]: {baseStat: 74, effort: 1},
				[Stat.SpecialDefense]: {baseStat: 54},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psybeam,
					Move.NightShade,
					Move.ConfuseRay,
					Move.Curse,
					Move.Spite,
					Move.SkillSwap,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.TrickRoom,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MegaDrain,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psychic,
					Move.Metronome,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Trick,
					Move.Imprison,
					Move.DarkPulse,
					Move.NastyPlot,
					Move.Psyshock,
					Move.FoulPlay,
					Move.StoredPower,
					Move.Hex,
					Move.PhantomForce,
					Move.Poltergeist,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Withdraw,
					Move.Astonish,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					36,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SweetScent,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Memento,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_Egg,
					Move.AllySwitch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShellSmash,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AromaticMist,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MegaDrain,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psychic,
					Move.Metronome,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Trick,
					Move.Imprison,
					Move.Payback,
					Move.DarkPulse,
					Move.NastyPlot,
					Move.WonderRoom,
					Move.Psyshock,
					Move.FoulPlay,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.Hex,
					Move.PhantomForce,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Withdraw,
					Move.Astonish,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Memento,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShellSmash,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AromaticMist,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Poltergeist,
				),
			].flat(),
			[
				{
					ability: Ability.WeakArmor,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.CursedBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.SinisteaPhony,
					PokemonFormBits.Default,
					{
						frontDefault: '9ed53b8d.png',
						frontShiny: 'd9d08784.png',
						backDefault: '3b056c35.png',
						backShiny: '21b7d78d.png',
					},
					[Type.Ghost],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Théffroi Contrefaçon', 'Polthégeist Contrefaçon'],
						[Language.De]: ['Fatalitee (Fälschung)'],
						[Language.En]: ['Phony Sinistea'],
					},
					{
						[Language.JaHrkt]: ['がんさくフォルム'],
						[Language.Fr]: ['Forme Contrefaçon'],
						[Language.De]: ['Fälschungsform'],
						[Language.En]: ['Phony Form'],
						[Language.Ja]: ['がんさくフォルム'],
					},
					'phony',
				],
				[
					Form.SinisteaAntique,
					PokemonFormBits.None,
					{},
					[Type.Ghost],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Théffroi Authentique'],
						[Language.De]: ['Fatalitee (Original)'],
						[Language.En]: ['Antique Sinistea'],
					},
					{
						[Language.JaHrkt]: ['しんさくフォルム'],
						[Language.Fr]: ['Forme Authentique'],
						[Language.De]: ['Originalform'],
						[Language.En]: ['Antique Form'],
						[Language.Ja]: ['しんさくフォルム'],
					},
					'antique',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Polteageist,
	50,
	60,
	Color.Purple,
	[EggGroup.Mineral, EggGroup.Indeterminate],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Ball,
	{
		[Language.JaHrkt]: ['ポットデス'],
		[Language.Roomaji]: ['Potdeath'],
		[Language.Ko]: ['포트데스'],
		[Language.ZhHant]: ['怖思壺'],
		[Language.Fr]: ['Polthégeist'],
		[Language.De]: ['Mortipot'],
		[Language.Es]: ['Polteageist'],
		[Language.It]: ['Polteageist'],
		[Language.En]: ['Polteageist'],
		[Language.Ja]: ['ポットデス'],
		[Language.ZhHans]: ['怖思壶'],
	},
	{
		[Language.JaHrkt]: ['こうちゃポケモン'],
		[Language.Ko]: ['홍차포켓몬'],
		[Language.ZhHant]: ['紅茶寶可夢'],
		[Language.Fr]: ['Pokémon Thé Noir'],
		[Language.De]: ['Schwarztee-Pokémon'],
		[Language.Es]: ['Pokémon Té'],
		[Language.It]: ['Pokémon Tè'],
		[Language.En]: ['Black Tea Pokémon'],
		[Language.Ja]: ['こうちゃポケモン'],
		[Language.ZhHans]: ['红茶宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'アンティークの　ポットに　すみつく。\nほとんどが　がんさくだが　ごくまれに\nしんさくが　みつかる　ことも。',
			'のこされた　こうちゃを　みかけると\nじぶんの　からだを　そそぎこむ。\nその　こうちゃは　ポットデスになる。',
		],
		[Language.Ko]: [
			'앤티크한 찻주전자에 산다.\n대부분 위작이지만 매우 드물게\n진품이 발견되기도 한다.',
			'남겨진 홍차를 발견하면\n자신의 몸을 흘러 들어가게 한다.\n그 홍차는 포트데스가 된다.',
		],
		[Language.ZhHant]: [
			'住在古董茶壺裡。\n雖然大多數都是贗品，\n但偶爾也能發現真貨。',
			'每當發現喝剩的紅茶，\n牠就會把自己的身體倒進去，\n讓那壺紅茶變成怖思壺。',
		],
		[Language.Fr]: [
			'Il élit domicile dans des théières antiques.\nLa plupart sont des contrefaçons, mais il lui arrive\ndans de très rares cas de trouver des originaux.',
			'Dès qu’il voit un reste de thé noir, il se verse\ndedans pour donner naissance à un Polthégeist.',
		],
		[Language.De]: [
			'Sie lassen sich in alten Teekannen nieder. Die\nmeisten dieser Kannen sind billige Fälschungen,\naber es gibt auch ein paar sehr seltene Originale.',
			'Entdeckt es zurückgelassenen Schwarztee, so\ngießt es seinen Körper hinein. Der Tee wird dann\nzu einem Mortipot.',
		],
		[Language.Es]: [
			'Se hospeda en teteras dignas de un anticuario.\nLas originales son escasísimas, pero existe un\ngran número de burdas falsificaciones.',
			'Si avista una taza de té abandonada a su suerte,\nla rellena vertiendo parte de su propio cuerpo\npara generar otro Polteageist.',
		],
		[Language.It]: [
			'Prende dimora in una teiera antica. Quelle\nin circolazione sono quasi tutte contraffatte,\nma a volte ne trova una autentica.',
			'Se trova una tazza di tè abbandonata, ci versa\ndentro un po’ del suo corpo per far nascere\nun Polteageist.',
		],
		[Language.En]: [
			'This species lives in antique teapots.\nMost pots are forgeries, but on rare occasions,\nan authentic work is found.',
			'Leaving leftover black tea unattended is asking\nfor this Pokémon to come along and pour itself\ninto it, turning the tea into a new Polteageist.',
		],
		[Language.Ja]: [
			'アンティークの　ポットに　棲みつく。\nほとんどが　贋作だが　ごくまれに\n真作が　見つかる　ことも。',
			'残された　紅茶を　見かけると\n自分の　体を　注ぎこむ。\nその　紅茶は　ポットデスになる。',
		],
		[Language.ZhHans]: [
			'住在古董茶壶里。\n虽然大多数都是赝品，\n但偶尔也能发现真货。',
			'每当发现喝剩的红茶，\n它就会把自己的身体倒进去，\n让那壶红茶变成怖思壶。',
		],
	},
	[
		[
			Variety.Polteageist,
			178,
			2,
			4,
			[Type.Ghost],
			{
				frontDefault: 'fb668a83.png',
				frontShiny: 'ec1a5fc5.png',
				backDefault: '8b58b426.png',
				backShiny: 'c10ef39d.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 65},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 134, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 114},
				[Stat.Speed]: {baseStat: 70},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psybeam,
					Move.NightShade,
					Move.ConfuseRay,
					Move.Curse,
					Move.Spite,
					Move.PainSplit,
					Move.SkillSwap,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.TrickRoom,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Psychic,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Trick,
					Move.Imprison,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.Psyshock,
					Move.FoulPlay,
					Move.StoredPower,
					Move.Hex,
					Move.PhantomForce,
					Move.Poltergeist,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.MegaDrain,
					Move.Withdraw,
					Move.Astonish,
					Move.AromaticMist,
					Move.StrengthSap,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					36,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SweetScent,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Memento,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShellSmash,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Teatime,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Psychic,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.SelfDestruct,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Trick,
					Move.Imprison,
					Move.Payback,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.WonderRoom,
					Move.Psyshock,
					Move.FoulPlay,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.Hex,
					Move.PhantomForce,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.MegaDrain,
					Move.Withdraw,
					Move.Astonish,
					Move.AromaticMist,
					Move.StrengthSap,
					Move.Teatime,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Memento,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShellSmash,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Teatime,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Poltergeist,
				),
			].flat(),
			[
				{
					ability: Ability.WeakArmor,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.CursedBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.PolteageistPhony,
					PokemonFormBits.Default,
					{
						frontDefault: 'fb668a83.png',
						frontShiny: 'ec1a5fc5.png',
						backDefault: '8b58b426.png',
						backShiny: 'c10ef39d.png',
					},
					[Type.Ghost],
					VersionGroup.SwordShield,
					{
						[Language.De]: ['Mortipot (Fälschung)'],
						[Language.En]: ['Phony Polteageist'],
					},
					{
						[Language.JaHrkt]: ['がんさくフォルム'],
						[Language.De]: ['Fälschungsform'],
						[Language.En]: ['Phony Form'],
						[Language.Ja]: ['がんさくフォルム'],
					},
					'phony',
				],
				[
					Form.PolteageistAntique,
					PokemonFormBits.None,
					{},
					[Type.Ghost],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Polthégeist Authentique'],
						[Language.De]: ['Mortipot (Original)'],
						[Language.En]: ['Antique Polteageist'],
					},
					{
						[Language.JaHrkt]: ['しんさくフォルム'],
						[Language.Fr]: ['Forme Authentique'],
						[Language.De]: ['Originalform'],
						[Language.En]: ['Antique Form'],
						[Language.Ja]: ['しんさくフォルム'],
					},
					'antique',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Hatenna,
	50,
	235,
	Color.Pink,
	[EggGroup.Fairy],
	8,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Slow,
	Shape.Legs,
	{
		[Language.JaHrkt]: ['ミブリム'],
		[Language.Roomaji]: ['Mibrim'],
		[Language.Ko]: ['몸지브림'],
		[Language.ZhHant]: ['迷布莉姆'],
		[Language.Fr]: ['Bibichut'],
		[Language.De]: ['Brimova'],
		[Language.Es]: ['Hatenna'],
		[Language.It]: ['Hatenna'],
		[Language.En]: ['Hatenna'],
		[Language.Ja]: ['ミブリム'],
		[Language.ZhHans]: ['迷布莉姆'],
	},
	{
		[Language.JaHrkt]: ['おだやかポケモン'],
		[Language.Ko]: ['차분포켓몬'],
		[Language.ZhHant]: ['寧靜寶可夢'],
		[Language.Fr]: ['Pokémon Calme'],
		[Language.De]: ['Geruhsam-Pokémon'],
		[Language.Es]: ['Pokémon Calma'],
		[Language.It]: ['Pokémon Calma'],
		[Language.En]: ['Calm Pokémon'],
		[Language.Ja]: ['おだやかポケモン'],
		[Language.ZhHans]: ['宁静宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あたまの　とっきで　せいぶつの\nきもちを　かんじとる。　おだやかな\nものにしか　こころを　ひらかない。',
			'ひとけの　ない　ばしょが　すき。\nつよい　かんじょうを　かんじとると\nいちもくさんに　にげだしてしまう。',
		],
		[Language.Ko]: [
			'머리의 돌기로 생물의\n기분을 감지한다. 온화한\n자에게만 마음을 연다.',
			'인적이 드문 곳을 좋아한다.\n강한 감정이 느껴지면\n쏜살같이 도망쳐버린다.',
		],
		[Language.ZhHant]: [
			'透過頭部的突起物\n來感應生物的情感。\n只對溫和的人敞開心扉。',
			'喜歡沒有人煙的地方。\n一旦感覺到強烈的情感，\n就會一溜煙地逃走。',
		],
		[Language.Fr]: [
			'La protubérance sur sa tête lui permet\nde percevoir les émotions des êtres vivants.\nIl n’accorde sa confiance qu’aux gens calmes.',
			'Il aime les lieux inhabités.\nS’il perçoit des émotions trop fortes,\nil s’enfuit aussi vite que possible.',
		],
		[Language.De]: [
			'Mit dem Fortsatz an seinem Kopf kann es die\nGefühle von Lebewesen wahrnehmen. Es öffnet\nnur geruhsam veranlagten Leuten sein Herz.',
			'Es liebt Orte, wo sonst niemand ist. Nimmt es\nstarke Emotionen wahr, macht es sich so schnell\nes kann aus dem Staub.',
		],
		[Language.Es]: [
			'Percibe los sentimientos de los seres vivos con la\nprotuberancia de la cabeza. Solo abre su corazón\na quienes muestren un carácter sosegado.',
			'Siente predilección por los lugares despoblados.\nSi percibe una emoción intensa, emprende la\nhuida a toda prisa.',
		],
		[Language.It]: [
			'Percepisce lo stato d’animo degli esseri viventi\ntramite la protuberanza sulla testa. Apre il suo\ncuore solo alle persone di indole pacifica.',
			'Gli piacciono i luoghi disabitati. Se percepisce\nla presenza di emozioni forti, se la dà a gambe\nlevate.',
		],
		[Language.En]: [
			'Via the protrusion on its head, it senses other\ncreatures’ emotions. If you don’t have a calm\ndisposition, it will never warm up to you.',
			'If this Pokémon senses a strong emotion, it\nwill run away as fast as it can. It prefers areas\nwithout people.',
		],
		[Language.Ja]: [
			'頭の　突起で　生物の\n気持ちを　感じとる。　穏やかな\nものにしか　心を　開かない。',
			'人気の　ない　場所が　好き。\n強い　感情を　感じとると\n一目散に　逃げ出してしまう。',
		],
		[Language.ZhHans]: [
			'通过头部的突起物\n来感应生物的情感。\n只对温和的人敞开心扉。',
			'喜欢没有人烟的地方。\n一旦感觉到强烈的感情，\n就会一溜烟地逃走。',
		],
	},
	[
		[
			Variety.Hatenna,
			53,
			4,
			34,
			[Type.Psychic],
			{
				frontDefault: 'fe219c41.png',
				frontShiny: 'ca55e5e7.png',
				backDefault: '9a8d5ecd.png',
				backShiny: 'bdb2f32e.png',
			},
			{
				[Stat.Hp]: {baseStat: 42},
				[Stat.Attack]: {baseStat: 30},
				[Stat.Defense]: {baseStat: 45},
				[Stat.SpecialAttack]: {baseStat: 56, effort: 1},
				[Stat.SpecialDefense]: {baseStat: 53},
				[Stat.Speed]: {baseStat: 39},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psybeam,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.PsychUp,
					Move.FutureSight,
					Move.Trick,
					Move.TrickRoom,
					Move.DisarmingVoice,
					Move.MistyTerrain,
					Move.PsychicTerrain,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Psychic,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Facade,
					Move.HelpingHand,
					Move.SkillSwap,
					Move.Imprison,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DarkPulse,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.ExpandingForce,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.PlayNice,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					45,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.AfterYou,
					Move.Quash,
					Move.MysticalFire,
					Move.Nuzzle,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DisarmingVoice,
					10,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AromaticMist,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Psychic,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.Facade,
					Move.HelpingHand,
					Move.SkillSwap,
					Move.Imprison,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DarkPulse,
					Move.Psyshock,
					Move.Round,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.MysticalFire,
					Move.DazzlingGleam,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.PlayNice,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					45,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.AfterYou,
					Move.Quash,
					Move.AromaticMist,
					Move.Nuzzle,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DisarmingVoice,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.ExpandingForce,
				),
			].flat(),
			[
				{
					ability: Ability.Healer,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Anticipation,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MagicBounce,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Hatenna,
					PokemonFormBits.Default,
					{
						frontDefault: 'fe219c41.png',
						frontShiny: 'ca55e5e7.png',
						backDefault: '9a8d5ecd.png',
						backShiny: 'bdb2f32e.png',
					},
					[Type.Psychic],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Hattrem,
	50,
	120,
	Color.Pink,
	[EggGroup.Fairy],
	8,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Slow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['テブリム'],
		[Language.Roomaji]: ['Tebrim'],
		[Language.Ko]: ['손지브림'],
		[Language.ZhHant]: ['提布莉姆'],
		[Language.Fr]: ['Chapotus'],
		[Language.De]: ['Brimano'],
		[Language.Es]: ['Hattrem'],
		[Language.It]: ['Hattrem'],
		[Language.En]: ['Hattrem'],
		[Language.Ja]: ['テブリム'],
		[Language.ZhHans]: ['提布莉姆'],
	},
	{
		[Language.JaHrkt]: ['せいしゅくポケモン'],
		[Language.Ko]: ['정숙포켓몬'],
		[Language.ZhHant]: ['肅靜寶可夢'],
		[Language.Fr]: ['Pokémon Serein'],
		[Language.De]: ['Ruhe-Pokémon'],
		[Language.Es]: ['Pokémon Serenidad'],
		[Language.It]: ['Pokémon Quiete'],
		[Language.En]: ['Serene Pokémon'],
		[Language.Ja]: ['せいしゅくポケモン'],
		[Language.ZhHans]: ['肃静宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'つよい　かんじょうを　もつ　ものは\nそれが　だれであれ　だまらせる。\nそのしゅだんは　じつに　らんぼう。',
			'あたまのフサで　あいてを　なぐり\nだまらせる。　プロボクサーさえ\nいっぱつ　ＫＯの　はかいりょく。',
		],
		[Language.Ko]: [
			'강한 감정을 품은 자라면\n누가 됐든 조용하게 만드는데\n그 수단이 매우 난폭하다.',
			'머리의 술로 상대를 때려\n꼼짝 못 하게 한다. 프로복서조차\n한 방에 KO되는 파괴력이다.',
		],
		[Language.ZhHant]: [
			'遇到情緒激昂的對手時，\n無論對方是誰，都會用\n粗暴的方式使其沉默。',
			'會用頭上的辮子攻擊對手，\n讓對方安靜下來。破壞力\n強到能一擊ＫＯ職業拳擊手。',
		],
		[Language.Fr]: [
			'S’il ressent des émotions trop fortes, il en fera\ntaire la source, quelle qu’elle soit, en utilisant\ndes méthodes assez violentes.',
			'Il frappe ses ennemis avec ses tresses pour les\nfaire taire. Sa puissance est telle qu’il peut mettre\nK.O. un boxeur professionnel d’un seul coup.',
		],
		[Language.De]: [
			'Empfindet jemand starke Emotionen, bringt es\nihn auf gewaltsame Art zum Schweigen, egal,\num wen es sich dabei handelt.',
			'Ein Schlag mit den Quasten an seinem Kopf\nbringt Gegner zum Schweigen. Ein Treffer genügt,\num einen Profiboxer auf die Bretter zu schicken.',
		],
		[Language.Es]: [
			'Silencia a cualquiera que muestre una emoción\nintensa sin importar de quién se trate y recurre\npara ello a métodos a cuál más violento.',
			'Silencia al objetivo atizándole con los mechones.\nDespliega una potencia devastadora capaz de\nnoquear a un boxeador profesional.',
		],
		[Language.It]: [
			'Se qualcuno esterna emozioni troppo forti,\nlo affronta immediatamente e lo mette a\ntacere senza tanti convenevoli.',
			'Zittisce gli avversari colpendoli con le nappe che\nha ai lati della testa. È così forte da mandare KO\ncon un colpo anche un pugile professionista.',
		],
		[Language.En]: [
			'No matter who you are, if you bring strong\nemotions near this Pokémon, it will silence\nyou violently.',
			'Using the braids on its head, it pummels foes to\nget them to quiet down. One blow from those\nbraids would knock out a professional boxer.',
		],
		[Language.Ja]: [
			'強い　感情を　もつ　ものは\nそれが　誰であれ　黙らせる。\nその手段は　じつに　乱暴。',
			'頭の房で　相手を　殴り\n黙らせる。　プロボクサーさえ\n一発　ＫＯの　破壊力。',
		],
		[Language.ZhHans]: [
			'遇到情绪激昂的对手时，\n无论对方是谁，都会用\n粗暴的方式使其沉默。',
			'会用头上的辫子攻击对手，\n让对方安静下来。破坏力\n强到能一击ＫＯ职业拳击手。',
		],
	},
	[
		[
			Variety.Hattrem,
			130,
			6,
			48,
			[Type.Psychic],
			{
				frontDefault: 'ea1c3b7d.png',
				frontShiny: '75ff65c5.png',
				backDefault: '8063b3a3.png',
				backShiny: 'cf2860f5.png',
			},
			{
				[Stat.Hp]: {baseStat: 57},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 86, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 73},
				[Stat.Speed]: {baseStat: 49},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psybeam,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.PsychUp,
					Move.FutureSight,
					Move.Trick,
					Move.TrickRoom,
					Move.DisarmingVoice,
					Move.MistyTerrain,
					Move.PsychicTerrain,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Psychic,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Facade,
					Move.HelpingHand,
					Move.SkillSwap,
					Move.Imprison,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DarkPulse,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.ExpandingForce,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.DisarmingVoice,
					Move.PlayNice,
					Move.LifeDew,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					51,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					25,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AromaticMist,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Psychic,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.Facade,
					Move.HelpingHand,
					Move.SkillSwap,
					Move.Imprison,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DarkPulse,
					Move.Psyshock,
					Move.Round,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.MysticalFire,
					Move.DazzlingGleam,
					Move.BrutalSwing,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.DisarmingVoice,
					Move.PlayNice,
					Move.BrutalSwing,
					Move.LifeDew,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					51,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.ExpandingForce,
				),
			].flat(),
			[
				{
					ability: Ability.Healer,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Anticipation,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MagicBounce,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Hattrem,
					PokemonFormBits.Default,
					{
						frontDefault: 'ea1c3b7d.png',
						frontShiny: '75ff65c5.png',
						backDefault: '8063b3a3.png',
						backShiny: 'cf2860f5.png',
					},
					[Type.Psychic],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Hatterene,
	50,
	45,
	Color.Pink,
	[EggGroup.Fairy],
	8,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Slow,
	Shape.Blob,
	{
		[Language.JaHrkt]: ['ブリムオン'],
		[Language.Roomaji]: ['Brimuon'],
		[Language.Ko]: ['브리무음'],
		[Language.ZhHant]: ['布莉姆溫'],
		[Language.Fr]: ['Sorcilence'],
		[Language.De]: ['Silembrim'],
		[Language.Es]: ['Hatterene'],
		[Language.It]: ['Hatterene'],
		[Language.En]: ['Hatterene'],
		[Language.Ja]: ['ブリムオン'],
		[Language.ZhHans]: ['布莉姆温'],
	},
	{
		[Language.JaHrkt]: ['せいじゃくポケモン'],
		[Language.Ko]: ['정적포켓몬'],
		[Language.ZhHant]: ['寂靜寶可夢'],
		[Language.Fr]: ['Pokémon Silencieux'],
		[Language.De]: ['Stille-Pokémon'],
		[Language.Es]: ['Pokémon Silencio'],
		[Language.It]: ['Pokémon Silenzio'],
		[Language.En]: ['Silent Pokémon'],
		[Language.Ja]: ['せいじゃくポケモン'],
		[Language.ZhHans]: ['寂静宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ずつうになるほどの　サイコパワーを\nしゅういに　はなって　ほかの\nせいぶつを　とおざけているのだ。',
			'べつめいは　もりの　まじょ。\nさわぎたてると　しょくしゅのツメで\nひきさかれるかも　しれないぞ。',
		],
		[Language.Ko]: [
			'두통이 생길 정도의 사이코 파워를\n주위에 발산해서 다른 생물이\n접근하지 못하게 한다.',
			'숲의 마녀라는 별명을 가졌다.\n소란을 피우면 촉수의 손톱에\n찢겨질지도 모른다.',
		],
		[Language.ZhHant]: [
			'由於會朝四周釋放足以\n引起頭痛的精神力量，\n其他生物都躲得遠遠的。',
			'又被稱為森林魔女。\n如果有人大吵大鬧，可能會\n被牠用觸手上的爪子撕碎。',
		],
		[Language.Fr]: [
			'Il éloigne les autres êtres vivants en émettant\ndes ondes psychiques pouvant donner\ndes maux de tête épouvantables.',
			'On l’appelle aussi la « sorcière de la forêt ».\nCe Pokémon lacère quiconque fait trop de bruit\navec les griffes de son tentacule.',
		],
		[Language.De]: [
			'Die starken Psycho-Kräfte, die es ausstrahlt,\nrufen Kopfschmerzen hervor. So hält es andere\nLebewesen von sich fern.',
			'Es wird auch „Hexe des Waldes“ genannt. Wer\nLärm veranstaltet, wird unter Umständen von der\nKlaue an seinem Fühler auseinandergenommen.',
		],
		[Language.Es]: [
			'Para mantener alejados a los demás seres vivos,\nemana a su alrededor ondas psíquicas cuya\npotencia es capaz de provocar jaquecas.',
			'Recibe el apodo de Hechicera del Bosque.\nQuienes arman demasiado barullo se exponen a\nser despedazados por las garras de su tentáculo.',
		],
		[Language.It]: [
			'Tiene alla larga gli esseri viventi che si trovano\nnei paraggi emettendo onde psichiche così forti\nda far venire il mal di testa.',
			'È conosciuto anche come “maga del bosco”.\nSe qualcuno fa troppo chiasso rischia di essere\nfatto a pezzettini dagli artigli sul suo tentacolo.',
		],
		[Language.En]: [
			'It emits psychic power strong enough to cause\nheadaches as a deterrent to the approach\nof others.',
			'If you’re too loud around it, you risk being torn\napart by the claws on its tentacle. This Pokémon\nis also known as the Forest Witch.',
		],
		[Language.Ja]: [
			'頭痛になるほどの　サイコパワーを\n周囲に　放って　ほかの\n生物を　遠ざけているのだ。',
			'別名は　森の　魔女。\n騒ぎたてると　触手のツメで\n引き裂かれるかも　しれないぞ。',
		],
		[Language.ZhHans]: [
			'由于会朝四周释放足以\n引起头痛的精神力量，\n其他生物都躲得远远的。',
			'又被称为森林魔女。\n如果有人大吵大闹，可能会\n被它用触手上的爪子撕碎。',
		],
	},
	[
		[
			Variety.Hatterene,
			255,
			21,
			51,
			[Type.Psychic, Type.Fairy],
			{
				frontDefault: '55daf062.png',
				frontShiny: '240aaac5.png',
				backDefault: '55b1dcb7.png',
				backShiny: '3a9b567d.png',
			},
			{
				[Stat.Hp]: {baseStat: 57},
				[Stat.Attack]: {baseStat: 90},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 136, effort: 3},
				[Stat.SpecialDefense]: {baseStat: 103},
				[Stat.Speed]: {baseStat: 29},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.ThunderWave,
					Move.Psychic,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.SkillSwap,
					Move.Imprison,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.ShadowClaw,
					Move.TrickRoom,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.ExpandingForce,
					Move.MistyExplosion,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psybeam,
					Move.Agility,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.PainSplit,
					Move.PsychUp,
					Move.Trick,
					Move.Gravity,
					Move.DisarmingVoice,
					Move.MistyTerrain,
					Move.PsychicTerrain,
					Move.TeraBlast,
					Move.PsychicNoise,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.DisarmingVoice,
					Move.PlayNice,
					Move.BrutalSwing,
					Move.LifeDew,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PsychoCut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					25,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AromaticMist,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MagicPowder,
					64,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.ThunderWave,
					Move.Psychic,
					Move.LightScreen,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.SkillSwap,
					Move.Imprison,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.ShadowClaw,
					Move.PsychoCut,
					Move.TrickRoom,
					Move.PowerWhip,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.Round,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.MysticalFire,
					Move.DazzlingGleam,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Confusion,
					Move.PsychoCut,
					Move.DisarmingVoice,
					Move.PlayNice,
					Move.BrutalSwing,
					Move.LifeDew,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PsychoCut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MagicPowder,
					64,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ExpandingForce,
					Move.MistyExplosion,
				),
			].flat(),
			[
				{
					ability: Ability.Healer,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Anticipation,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MagicBounce,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Hatterene,
					PokemonFormBits.Default,
					{
						frontDefault: '55daf062.png',
						frontShiny: '240aaac5.png',
						backDefault: '55b1dcb7.png',
						backShiny: '3a9b567d.png',
					},
					[Type.Psychic, Type.Fairy],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.HattereneGmax,
			255,
			260,
			10000,
			[Type.Psychic, Type.Fairy],
			{
				frontDefault: 'a574e624.png',
				frontShiny: '2e82a7ef.png',
				backDefault: '7efcca74.png',
				backShiny: '22d75b8d.png',
			},
			{
				[Stat.Hp]: {baseStat: 57},
				[Stat.Attack]: {baseStat: 90},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 136, effort: 3},
				[Stat.SpecialDefense]: {baseStat: 103},
				[Stat.Speed]: {baseStat: 29},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Healer,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Anticipation,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MagicBounce,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.HattereneGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'a574e624.png',
						frontShiny: '2e82a7ef.png',
						backDefault: '7efcca74.png',
						backShiny: '22d75b8d.png',
					},
					[Type.Psychic, Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Sorcilence Gigamax'],
						[Language.De]: ['Gigadynamax-Silembrim'],
						[Language.En]: ['Gigantamax Hatterene'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Impidimp,
	50,
	255,
	Color.Pink,
	[EggGroup.Fairy, EggGroup.Humanshape],
	0,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['ベロバー'],
		[Language.Roomaji]: ['Beroba'],
		[Language.Ko]: ['메롱꿍'],
		[Language.ZhHant]: ['搗蛋小妖'],
		[Language.Fr]: ['Grimalin'],
		[Language.De]: ['Bähmon'],
		[Language.Es]: ['Impidimp'],
		[Language.It]: ['Impidimp'],
		[Language.En]: ['Impidimp'],
		[Language.Ja]: ['ベロバー'],
		[Language.ZhHans]: ['捣蛋小妖'],
	},
	{
		[Language.JaHrkt]: ['いじわるポケモン'],
		[Language.Ko]: ['꾀부리기포켓몬'],
		[Language.ZhHant]: ['捉弄寶可夢'],
		[Language.Fr]: ['Pokémon Malin'],
		[Language.De]: ['Hinterlist-Pokémon'],
		[Language.Es]: ['Pokémon Astuto'],
		[Language.It]: ['Pokémon Scaltro'],
		[Language.En]: ['Wily Pokémon'],
		[Language.Ja]: ['いじわるポケモン'],
		[Language.ZhHans]: ['捉弄宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ひとや　ポケモンが　いやがる　ときに\nはっする　マイナスエネルギーを\nはなから　すいこみ　げんきになる。',
			'みんかに　しのびこみ　ぬすみを\nはたらき　さらに　くやしがる　ひとの\nマイナスエネルギーも　いただくのだ。',
		],
		[Language.Ko]: [
			'사람이나 포켓몬이 싫어하는 감정을\n가질 때 발생시키는 마이너스 에너지를\n코로 빨아들여서 건강해진다.',
			'민가에 숨어들어 도둑질을\n하고 속상해하는 사람의\n마이너스 에너지도 얻는다.',
		],
		[Language.ZhHant]: [
			'會用鼻子吸收人類或寶可夢\n情緒糟糕時產生的負能量，\n來為自己補充活力。',
			'不但會溜進民宅偷盜，\n還會吸收人們悔恨時\n的負面能量。',
		],
		[Language.Fr]: [
			'Pour se refaire une santé, il hume l’énergie\nnégative que les humains et les Pokémon\ndégagent quand ils sont irrités.',
			'Il se glisse dans les foyers pour commettre\nun larcin et en profite pour se nourrir de l’énergie\nnégative des habitants contrariés.',
		],
		[Language.De]: [
			'Es wird kräftiger, indem es die von unzufriedenen\nMenschen und Pokémon ausgestoßene negative\nEnergie einatmet.',
			'Es schleicht sich in Häuser ein und geht dort auf\nDiebeszug. Zudem verleibt es sich die negative\nEnergie der deshalb verärgerten Menschen ein.',
		],
		[Language.Es]: [
			'Con el fin de revitalizarse, inhala por la nariz la\nenergía negativa que desprenden tanto personas\ncomo Pokémon cuando están descontentos.',
			'Se infiltra en las casas para hurtar a sus anchas y,\npor si fuera poco, nutrirse de la energía negativa\nque liberan sus contrariados habitantes.',
		],
		[Language.It]: [
			'Recupera le forze inalando dal naso l’energia\nnegativa emessa da persone e Pokémon quando\nsono irritati.',
			'Si intrufola nelle case, ruba, e come se non\nbastasse si nutre anche dell’energia negativa\ndei padroni di casa rattristati per il furto.',
		],
		[Language.En]: [
			'Through its nose, it sucks in the emanations\nproduced by people and Pokémon when they\nfeel annoyed. It thrives off this negative energy.',
			'It sneaks into people’s homes, stealing things\nand feasting on the negative energy of the\nfrustrated occupants.',
		],
		[Language.Ja]: [
			'人や　ポケモンが　嫌がる　ときに\n発する　マイナスエネルギーを\n鼻から　吸いこみ　元気になる。',
			'民家に　忍びこみ　盗みを\n働き　さらに　悔しがる　人の\nマイナスエネルギーも　いただくのだ。',
		],
		[Language.ZhHans]: [
			'会用鼻子吸收人类或宝可梦\n情绪糟糕时产生的负能量，\n来为自己补充活力。',
			'不但会溜进民宅偷盗，\n还会吸收人们悔恨时\n的负面能量。',
		],
	},
	[
		[
			Variety.Impidimp,
			53,
			4,
			55,
			[Type.Dark, Type.Fairy],
			{
				frontDefault: 'ca0465db.png',
				frontShiny: '98e6e066.png',
				backDefault: '27a334a2.png',
				backShiny: '5918020a.png',
			},
			{
				[Stat.Hp]: {baseStat: 45},
				[Stat.Attack]: {baseStat: 45},
				[Stat.Defense]: {baseStat: 30},
				[Stat.SpecialAttack]: {baseStat: 55, effort: 1},
				[Stat.SpecialDefense]: {baseStat: 40},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.LightScreen,
					Move.Reflect,
					Move.ScaryFace,
					Move.Fling,
					Move.MistyTerrain,
					Move.ThroatChop,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					4,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.LowKick,
					Move.ThunderWave,
					Move.Metronome,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.FakeTears,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.NastyPlot,
					Move.FoulPlay,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.BurningJealousy,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.FakeOut,
					Move.Confide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FakeTears,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DarkPulse,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					44,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_Egg,
					Move.PartingShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.MegaKick,
					Move.LowKick,
					Move.ThunderWave,
					Move.Metronome,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.Revenge,
					Move.FakeTears,
					Move.Assurance,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.NastyPlot,
					Move.FoulPlay,
					Move.Round,
					Move.Retaliate,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.FakeOut,
					Move.Confide,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FakeTears,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DarkPulse,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.BurningJealousy,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.Prankster,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Pickpocket,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Impidimp,
					PokemonFormBits.Default,
					{
						frontDefault: 'ca0465db.png',
						frontShiny: '98e6e066.png',
						backDefault: '27a334a2.png',
						backShiny: '5918020a.png',
					},
					[Type.Dark, Type.Fairy],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Morgrem,
	50,
	120,
	Color.Pink,
	[EggGroup.Fairy, EggGroup.Humanshape],
	0,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['ギモー'],
		[Language.Roomaji]: ['Gimoh'],
		[Language.Ko]: ['쏘겨모'],
		[Language.ZhHant]: ['詐唬魔'],
		[Language.Fr]: ['Fourbelin'],
		[Language.De]: ['Pelzebub'],
		[Language.Es]: ['Morgrem'],
		[Language.It]: ['Morgrem'],
		[Language.En]: ['Morgrem'],
		[Language.Ja]: ['ギモー'],
		[Language.ZhHans]: ['诈唬魔'],
	},
	{
		[Language.JaHrkt]: ['しょうわるポケモン'],
		[Language.Ko]: ['성악포켓몬'],
		[Language.ZhHant]: ['壞心眼寶可夢'],
		[Language.Fr]: ['Pokémon Scélérat'],
		[Language.De]: ['Schelm-Pokémon'],
		[Language.Es]: ['Pokémon Malicioso'],
		[Language.It]: ['Pokémon Furbizia'],
		[Language.En]: ['Devious Pokémon'],
		[Language.Ja]: ['しょうわるポケモン'],
		[Language.ZhHans]: ['坏心眼宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'どげざして　あやまる　ふりをして\nやりのように　とがった　うしろがみで\nつきさしてくる　せんぽうを　つかう。',
			'わるぢえを　つかって　よるの　もりに\nさそいこもうとする。　のうさくもつを\nそだてる　ちからを　もつらしい。',
		],
		[Language.Ko]: [
			'납작 엎드려서 사과하는 척하다가\n창처럼 뾰족한 뒷머리로\n찌르는 전법을 구사한다.',
			'못된 꾀를 내어 밤에 숲으로\n꾀어내려 한다. 농작물을\n키우는 힘을 갖고 있는 듯하다.',
		],
		[Language.ZhHant]: [
			'會先裝成要下跪道歉的樣子，\n然後用後腦勺尖如長矛的\n頭髮刺向對手。',
			'喜歡動歪腦筋，把人們\n引誘到深夜的森林中。\n似乎擁有培育農作物的能力。',
		],
		[Language.Fr]: [
			'Sa technique de combat consiste à faire semblant\nde se prosterner devant son adversaire\npour le transpercer avec ses cheveux aiguisés.',
			'La nuit, il ruse pour attirer ses proies dans la forêt.\nOn raconte qu’il a le pouvoir de faire pousser\nles cultures agricoles.',
		],
		[Language.De]: [
			'Es nutzt eine Taktik, bei der es sich niederwirft\nund vorgibt, sich zu entschuldigen, nur um dann\nmit seinem speerartigen Haar zuzustoßen.',
			'Es hat einen Hang zur Verschlagenheit und\nversucht, nachts seine Beute in den Wald zu\nlocken. Angeblich kann es Äcker gedeihen lassen.',
		],
		[Language.Es]: [
			'Su estrategia consiste en postrarse ante el rival y\nfingir una disculpa para ensartarlo con el mechón\nque tiene en la espalda, afilado cual lanza.',
			'De noche, atrae con astucia a su objetivo hasta\nel bosque. Al parecer, tiene la capacidad de\nhacer crecer productos agrícolas.',
		],
		[Language.It]: [
			'Nella lotta si prostra fingendo di chiedere pietà e\ninfilza il nemico con il ciuffo di capelli appuntito\ncome una lancia che gli parte dalla nuca.',
			'Attira le prede nel bosco di notte con l’astuzia.\nSembra che abbia il potere di far crescere ogni\ntipo di prodotto agricolo.',
		],
		[Language.En]: [
			'When it gets down on all fours as if to beg for\nforgiveness, it’s trying to lure opponents in so\nthat it can stab them with its spear-like hair.',
			'With sly cunning, it tries to lure people into the\nwoods. Some believe it to have the power to\nmake crops grow.',
		],
		[Language.Ja]: [
			'土下座して　謝る　振りをして\n槍のように　尖った　後ろ髪で\n突き刺してくる　戦法を　使う。',
			'悪知恵を　使って　夜の　森に\n誘い込もうとする。　農作物を\n育てる　力を　もつらしい。',
		],
		[Language.ZhHans]: [
			'会先装成要下跪道歉的样子，\n然后用后脑勺尖如长矛的\n头发刺向对手。',
			'喜欢动歪脑筋，把人们\n引诱到深夜的森林中。\n似乎拥有培育农作物的能力。',
		],
	},
	[
		[
			Variety.Morgrem,
			130,
			8,
			125,
			[Type.Dark, Type.Fairy],
			{
				frontDefault: '16505e46.png',
				frontShiny: '0ad3a187.png',
				backDefault: '3894fb06.png',
				backShiny: '8050fc8d.png',
			},
			{
				[Stat.Hp]: {baseStat: 65},
				[Stat.Attack]: {baseStat: 60},
				[Stat.Defense]: {baseStat: 45},
				[Stat.SpecialAttack]: {baseStat: 75, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 55},
				[Stat.Speed]: {baseStat: 70},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.ScaryFace,
					Move.Imprison,
					Move.Fling,
					Move.MistyTerrain,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.FakeOut,
					Move.Flatter,
					Move.Confide,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.LowKick,
					Move.ThunderWave,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.FakeTears,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.FoulPlay,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.ThroatChop,
					Move.BurningJealousy,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FakeTears,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DarkPulse,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FalseSurrender,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.MegaKick,
					Move.LowKick,
					Move.ThunderWave,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.Revenge,
					Move.FakeTears,
					Move.Assurance,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.FoulPlay,
					Move.Round,
					Move.Retaliate,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.FakeOut,
					Move.Flatter,
					Move.Confide,
					Move.FalseSurrender,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FakeTears,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DarkPulse,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					46,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FalseSurrender,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.BurningJealousy,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.Prankster,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Pickpocket,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Morgrem,
					PokemonFormBits.Default,
					{
						frontDefault: '16505e46.png',
						frontShiny: '0ad3a187.png',
						backDefault: '3894fb06.png',
						backShiny: '8050fc8d.png',
					},
					[Type.Dark, Type.Fairy],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Grimmsnarl,
	50,
	45,
	Color.Purple,
	[EggGroup.Fairy, EggGroup.Humanshape],
	0,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['オーロンゲ'],
		[Language.Roomaji]: ['Ohlonge'],
		[Language.Ko]: ['오롱털'],
		[Language.ZhHant]: ['長毛巨魔'],
		[Language.Fr]: ['Angoliath'],
		[Language.De]: ['Olangaar'],
		[Language.Es]: ['Grimmsnarl'],
		[Language.It]: ['Grimmsnarl'],
		[Language.En]: ['Grimmsnarl'],
		[Language.Ja]: ['オーロンゲ'],
		[Language.ZhHans]: ['长毛巨魔'],
	},
	{
		[Language.JaHrkt]: ['ビルドアップポケモン'],
		[Language.Ko]: ['벌크업포켓몬'],
		[Language.ZhHant]: ['健美寶可夢'],
		[Language.Fr]: ['Pokémon Gonflette'],
		[Language.De]: ['Muskelaufbau-Pokémon'],
		[Language.Es]: ['Pokémon Voluminoso'],
		[Language.It]: ['Pokémon Granfisico'],
		[Language.En]: ['Bulk Up Pokémon'],
		[Language.Ja]: ['ビルドアップポケモン'],
		[Language.ZhHans]: ['健美宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'かみのけを　ぜんしんに　まきつけると\nきんりょくが　アップ。　カイリキーを\nねじふせる　パワーを　はっきする。',
			'かみのけは　きんにくせんいの　ように\nはたらき　ほどけると　しょくしゅの\nうごきで　あいてを　からめとる。',
		],
		[Language.Ko]: [
			'머리카락을 전신에 휘감아\n근력이 올랐다. 괴력몬을\n압도하는 파워를 발휘한다.',
			'머리카락은 근섬유의 역할을 하며\n매듭이 풀어지면 촉수와 같은\n움직임으로 상대를 묶어버린다.',
		],
		[Language.ZhHant]: [
			'透過用頭髮裹住全身，\n讓肌肉的力量向上提升。\n能發揮出足以壓倒怪力的力量。',
			'毛髮能發揮肌肉纖維般的作用。\n伸展開來時會像觸手那樣\n把對手纏繞起來。',
		],
		[Language.Fr]: [
			'Il enroule ses cheveux autour de son corps pour\naugmenter sa masse musculaire, ce qui lui donne\nassez de force pour enserrer un Mackogneur.',
			'Ses cheveux sont comme des muscles filandreux\nqu’il peut détacher pour saisir ses adversaires,\ntels des tentacules.',
		],
		[Language.De]: [
			'Wickelt es seine Haare um den ganzen Körper,\nverstärkt dies seine Muskelkraft. Das macht es so\nstark, dass es sogar Machomei bezwingen könnte.',
			'Seine Haare funktionieren wie Muskelfasern.\nEs kann diese vom Körper lösen und wie Tentakel\nverwenden, um Gegner einzufangen.',
		],
		[Language.Es]: [
			'Cuando enrolla sus cabellos por todo el cuerpo,\naumenta su potencia muscular. Posee una fuerza\ncapaz de someter a Machamp.',
			'Su cabello desempeña una función similar a la de\nfibras musculares. Al soltárselo, su movimiento\ntentacular le permite reducir a su objetivo.',
		],
		[Language.It]: [
			'Se avvolge il corpo con i capelli, la sua potenza\nmuscolare aumenta. La sua forza gli permette\ndi immobilizzare a terra anche Machamp.',
			'I sui capelli svolgono una funzione simile a quella\ndelle fibre muscolari. Li può sciogliere e usare\ncome dei tentacoli per avvinghiare il nemico.',
		],
		[Language.En]: [
			'With the hair wrapped around its body helping to\nenhance its muscles, this Pokémon can overwhelm\neven Machamp.',
			'Its hairs work like muscle fibers. When its hairs\nunfurl, they latch on to opponents, ensnaring\nthem as tentacles would.',
		],
		[Language.Ja]: [
			'髪の毛を　全身に　巻きつけると\n筋力が　アップ。　カイリキーを\nねじ伏せる　パワーを　発揮する。',
			'髪の毛は　筋肉繊維の　ように\n働き　ほどけると　触手の\n動きで　相手を　絡めとる。',
		],
		[Language.ZhHans]: [
			'通过用头发裹住全身，\n让肌肉的力量向上提升。\n能发挥出足以压倒怪力的力量。',
			'毛发能发挥肌肉纤维般的作用。\n伸展开来时会像触手那样\n把对手缠绕起来。',
		],
	},
	[
		[
			Variety.Grimmsnarl,
			255,
			15,
			610,
			[Type.Dark, Type.Fairy],
			{
				frontDefault: 'f64ab1c3.png',
				frontShiny: 'f6788a56.png',
				backDefault: 'b8868a72.png',
				backShiny: '2d68cb1b.png',
			},
			{
				[Stat.Hp]: {baseStat: 95},
				[Stat.Attack]: {baseStat: 120, effort: 3},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 95},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 60},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.ThunderWave,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.BrickBreak,
					Move.FakeTears,
					Move.BulkUp,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.LowSweep,
					Move.FoulPlay,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.ThroatChop,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.BurningJealousy,
					Move.LashOut,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.FocusPunch,
					Move.Imprison,
					Move.Fling,
					Move.MistyTerrain,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.FakeOut,
					Move.Flatter,
					Move.BulkUp,
					Move.Confide,
					Move.FalseSurrender,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FakeTears,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DarkPulse,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SpiritBreak,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.ThunderWave,
					Move.LightScreen,
					Move.Reflect,
					Move.FocusEnergy,
					Move.Metronome,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.FakeTears,
					Move.BulkUp,
					Move.Assurance,
					Move.PowerSwap,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.PowerWhip,
					Move.WonderRoom,
					Move.LowSweep,
					Move.FoulPlay,
					Move.Round,
					Move.Retaliate,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.DarkestLariat,
					Move.ThroatChop,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.FakeOut,
					Move.Flatter,
					Move.BulkUp,
					Move.Confide,
					Move.PowerUpPunch,
					Move.SpiritBreak,
					Move.FalseSurrender,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FakeTears,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DarkPulse,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FoulPlay,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SpiritBreak,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.BurningJealousy,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.Prankster,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Pickpocket,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Grimmsnarl,
					PokemonFormBits.Default,
					{
						frontDefault: 'f64ab1c3.png',
						frontShiny: 'f6788a56.png',
						backDefault: 'b8868a72.png',
						backShiny: '2d68cb1b.png',
					},
					[Type.Dark, Type.Fairy],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.GrimmsnarlGmax,
			255,
			320,
			10000,
			[Type.Dark, Type.Fairy],
			{
				frontDefault: '89ba810e.png',
				frontShiny: 'bdc9e57b.png',
				backDefault: '0871f4d2.png',
				backShiny: '52db2deb.png',
			},
			{
				[Stat.Hp]: {baseStat: 95},
				[Stat.Attack]: {baseStat: 120, effort: 3},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 95},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 60},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.Prankster,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Pickpocket,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.GrimmsnarlGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '89ba810e.png',
						frontShiny: 'bdc9e57b.png',
						backDefault: '0871f4d2.png',
						backShiny: '52db2deb.png',
					},
					[Type.Dark, Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Angoliath Gigamax'],
						[Language.De]: ['Gigadynamax-Olangaar'],
						[Language.En]: ['Gigantamax Grimmsnarl'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Obstagoon,
	50,
	45,
	Color.Gray,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	15,
	GrowthRate.Medium,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['タチフサグマ'],
		[Language.Roomaji]: ['Tachifusaguma'],
		[Language.Ko]: ['가로막구리'],
		[Language.ZhHant]: ['堵攔熊'],
		[Language.Fr]: ['Ixon'],
		[Language.De]: ['Barrikadax'],
		[Language.Es]: ['Obstagoon'],
		[Language.It]: ['Obstagoon'],
		[Language.En]: ['Obstagoon'],
		[Language.Ja]: ['タチフサグマ'],
		[Language.ZhHans]: ['堵拦熊'],
	},
	{
		[Language.JaHrkt]: ['ていしポケモン'],
		[Language.Ko]: ['정지포켓몬'],
		[Language.ZhHant]: ['停止寶可夢'],
		[Language.Fr]: ['Pokémon Barrage'],
		[Language.De]: ['Barrikaden-Pokémon'],
		[Language.Es]: ['Pokémon Bloqueador'],
		[Language.It]: ['Pokémon Bloccaggio'],
		[Language.En]: ['Blocking Pokémon'],
		[Language.Ja]: ['ていしポケモン'],
		[Language.ZhHans]: ['停止宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'すさまじい　せいりょうを　もつ。\nシャウトとともに　いかくするさまは\nブロッキングと　よばれている。',
			'ケンカを　くりかえし　しんか。\nうでをクロスし　さけぶ　おたけびは\nどんな　あいても　ひるませるぞ。',
		],
		[Language.Ko]: [
			'엄청난 성량을 가졌다.\n샤우팅하며 위협하는 모습은\n블로킹이라 불린다.',
			'싸움을 반복하면서 진화한다.\n팔을 크로스하고 우렁차게 외치면\n어떤 상대라도 풀죽게 된다.',
		],
		[Language.ZhHant]: [
			'能夠發出驚人的音量。\n牠在大叫的同時威嚇對手\n的樣子被稱為「攔堵」。',
			'在不斷的鬥爭中得到了進化。\n牠交叉著雙臂發出的怒吼\n能讓一切對手都為之膽怯。',
		],
		[Language.Fr]: [
			'Il possède une puissance vocale remarquable.\nOn appelle Blocage sa technique qui consiste\nà intimider l’ennemi avec son cri guttural.',
			'Il a évolué après avoir enchaîné de nombreux\ncombats. Le cri qu’il pousse lorsqu’il fait un « X »\navec ses bras ébranle n’importe quel ennemi.',
		],
		[Language.De]: [
			'Es verfügt über eine beeindruckende Stimmkraft.\nSein von Schreien begleitetes Drohverhalten\nnennt man auch „Abblocker“.',
			'Durch das Austragen unzähliger Kämpfe hat es\nsich entwickelt. Formt es mit den Armen ein „X“\nund stößt einen Schrei aus, verschreckt das jeden.',
		],
		[Language.Es]: [
			'La potencia de su voz es realmente pasmosa. La\ntécnica que usa para intimidar al rival mientras\ngrita recibe el nombre de Obstrucción.',
			'Evoluciona tras haber librado numerosas peleas.\nEl grito de guerra que profiere mientras pone los\nbrazos en cruz atemoriza a cualquier rival.',
		],
		[Language.It]: [
			'Ha una potenza vocale impressionante. Quando\nassume la tipica posa intimidatoria e si mette a\nurlare, si dice che sta facendo “sbarramento”.',
			'Si è evoluto a forza di lottare. L’urlo di guerra\nche lancia mentre mette le braccia a X è in\ngrado di terrorizzare qualsiasi avversario.',
		],
		[Language.En]: [
			'Its voice is staggering in volume. Obstagoon\nhas a tendency to take on a threatening posture\nand shout—this move is known as Obstruct.',
			'It evolved after experiencing numerous fights.\nWhile crossing its arms, it lets out a shout that\nwould make any opponent flinch.',
		],
		[Language.Ja]: [
			'凄まじい　声量を　もつ。\nシャウトとともに　威嚇するさまは\nブロッキングと　呼ばれている。',
			'ケンカを　繰り返し　進化。\n腕をクロスし　叫ぶ　雄叫びは\nどんな　相手も　怯ませるぞ。',
		],
		[Language.ZhHans]: [
			'能够发出惊人的音量。\n它在大叫的同时威吓对手\n的样子被称为“拦堵”。',
			'在不断的斗争中得到了进化。\n它交叉着双臂发出的怒吼\n能让一切对手都为之胆怯。',
		],
	},
	[
		[
			Variety.Obstagoon,
			260,
			16,
			460,
			[Type.Dark, Type.Normal],
			{
				frontDefault: 'bd514037.png',
				frontShiny: 'a0f1ff8d.png',
				backDefault: 'e7cd7ebd.png',
				backShiny: '011ade2f.png',
			},
			{
				[Stat.Hp]: {baseStat: 93},
				[Stat.Attack]: {baseStat: 90},
				[Stat.Defense]: {baseStat: 101, effort: 3},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 81},
				[Stat.Speed]: {baseStat: 95},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.PinMissile,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.LowKick,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Dig,
					Move.Screech,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.IronTail,
					Move.RainDance,
					Move.SunnyDay,
					Move.ShadowBall,
					Move.Whirlpool,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Trick,
					Move.Revenge,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.FakeTears,
					Move.IronDefense,
					Move.BulkUp,
					Move.MudShot,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.SeedBomb,
					Move.XScissor,
					Move.GigaImpact,
					Move.ShadowClaw,
					Move.CrossPoison,
					Move.GunkShot,
					Move.GrassKnot,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.Snarl,
					Move.ThroatChop,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.SandAttack,
					Move.Tackle,
					Move.PinMissile,
					Move.Leer,
					Move.Submission,
					Move.Lick,
					Move.CrossChop,
					Move.NightSlash,
					Move.Switcheroo,
					Move.BabyDollEyes,
					Move.Obstruct,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Rest,
					23,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Snarl,
					9,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Obstruct,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.Reckless,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Guts,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Defiant,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Obstagoon,
					PokemonFormBits.Default,
					{
						frontDefault: 'bd514037.png',
						frontShiny: 'a0f1ff8d.png',
						backDefault: 'e7cd7ebd.png',
						backShiny: '011ade2f.png',
					},
					[Type.Dark, Type.Normal],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Perrserker,
	50,
	90,
	Color.Brown,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ニャイキング'],
		[Language.Roomaji]: ['Nyaiking'],
		[Language.Ko]: ['나이킹'],
		[Language.ZhHant]: ['喵頭目'],
		[Language.Fr]: ['Berserkatt'],
		[Language.De]: ['Mauzinger'],
		[Language.Es]: ['Perrserker'],
		[Language.It]: ['Perrserker'],
		[Language.En]: ['Perrserker'],
		[Language.Ja]: ['ニャイキング'],
		[Language.ZhHans]: ['喵头目'],
	},
	{
		[Language.JaHrkt]: ['バイキングポケモン'],
		[Language.Ko]: ['바이킹포켓몬'],
		[Language.ZhHant]: ['維京寶可夢'],
		[Language.Fr]: ['Pokémon Viking'],
		[Language.De]: ['Wikinger-Pokémon'],
		[Language.Es]: ['Pokémon Vikingo'],
		[Language.It]: ['Pokémon Vichingo'],
		[Language.En]: ['Viking Pokémon'],
		[Language.Ja]: ['バイキングポケモン'],
		[Language.ZhHans]: ['维京宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あたまの　たいもうが　こうしつかして\nてつの　ヘルメットのように　なった。\nとても　こうせんてきな　せいしつ。',
			'たたかいに　あけくれて　しんかした\nけっか　のばすと　たんけんに　かわる\nぶっそうな　ツメを　てにいれた。',
		],
		[Language.Ko]: [
			'머리의 털이 단단해져서\n철로 된 헬멧처럼 되었다.\n매우 호전적인 성질을 가졌다.',
			'싸움에 열중해 진화한 결과\n펴면 단검으로 변하는\n위험한 발톱을 얻었다.',
		],
		[Language.ZhHant]: [
			'有著十分好戰的性格。\n頭上像鐵頭盔一樣的東西\n其實是牠硬化後的體毛。',
			'在日復一日的戰鬥中得以進化。\n進化的結果是那危險的指甲，\n留長後能當作短劍來用。',
		],
		[Language.Fr]: [
			'La fourrure sur sa tête s’est endurcie\net a pris la forme d’un casque en fer.\nIl est de nature très bagarreuse.',
			'Il s’est tant adonné au combat qu’il a évolué :\nil est désormais doté de griffes redoutables\nqui prennent la forme de dagues en s’allongeant.',
		],
		[Language.De]: [
			'Die Haare auf seinem Kopf haben sich zu etwas\nverhärtet, das an einen eisernen Helm erinnert.\nEs ist von Natur aus kriegerisch veranlagt.',
			'Es entwickelte sich nach einer langen Zeit voller\nKämpfe. Nun kann es seine Krallen ausfahren,\num sie als Dolche zu nutzen.',
		],
		[Language.Es]: [
			'El pelo de la cabeza se le ha endurecido hasta\nel punto de parecer un yelmo de hierro. Posee\nun temperamento muy combativo.',
			'Su devoción por la lucha ha propiciado que\nevolucionara y le ha conferido unas peligrosas\ngarras que se convierten en dagas al extenderse.',
		],
		[Language.It]: [
			'La pelliccia sulla testa si è indurita ed è\ndiventata simile a un elmetto di ferro.\nHa una natura molto combattiva.',
			'Si è evoluto dopo aver passato giorni interi\na lottare e ha sviluppato degli artigli che,\nuna volta sfoderati, diventano temibili pugnali.',
		],
		[Language.En]: [
			'What appears to be an iron helmet is actually\nhardened hair. This Pokémon lives for the thrill\nof battle.',
			'After many battles, it evolved dangerous\nclaws that come together to form daggers\nwhen extended.',
		],
		[Language.Ja]: [
			'頭の　体毛が　硬質化して\n鉄の　ヘルメットのように　なった。\nとても　好戦的な　性質。',
			'戦いに　明け暮れて　進化した\n結果　伸ばすと　短剣に　変わる\n物騒な　ツメを　手に入れた。',
		],
		[Language.ZhHans]: [
			'有着十分好战的性格。\n头上像铁头盔一样的东西\n其实是它硬化后的体毛。',
			'在日复一日的战斗中得以进化。\n进化的结果是那危险的指甲，\n留长后能当作短剑来用。',
		],
	},
	[
		[
			Variety.Perrserker,
			154,
			8,
			280,
			[Type.Steel],
			{
				frontDefault: 'ff6e3a01.png',
				frontShiny: 'ada93c18.png',
				backDefault: '577294b6.png',
				backShiny: '2aabdf02.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 110, effort: 2},
				[Stat.Defense]: {baseStat: 100},
				[Stat.SpecialAttack]: {baseStat: 50},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PayDay,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
					Move.FakeOut,
					Move.IronDefense,
					Move.MetalBurst,
					Move.HoneClaws,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.Thunder,
					Move.Dig,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.RainDance,
					Move.SunnyDay,
					Move.Crunch,
					Move.ShadowBall,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.IronDefense,
					Move.GyroBall,
					Move.UTurn,
					Move.CloseCombat,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.GunkShot,
					Move.HeavySlam,
					Move.FoulPlay,
					Move.PlayRough,
					Move.ThroatChop,
					Move.SteelBeam,
					Move.LashOut,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Metronome,
					Move.Curse,
					Move.Spite,
					Move.Charm,
					Move.FalseSwipe,
					Move.MetalClaw,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.KnockOff,
					Move.Endeavor,
					Move.FakeTears,
					Move.MetalSound,
					Move.XScissor,
					Move.IronHead,
					Move.StealthRock,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					31,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalClaw,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalSound,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PayDay,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PayDay,
					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.Thunder,
					Move.Dig,
					Move.Screech,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.IronTail,
					Move.RainDance,
					Move.SunnyDay,
					Move.Crunch,
					Move.ShadowBall,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.IronDefense,
					Move.GyroBall,
					Move.UTurn,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.GunkShot,
					Move.IronHead,
					Move.HeavySlam,
					Move.FoulPlay,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.PlayRough,
					Move.ThroatChop,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Growl,
					Move.FakeOut,
					Move.IronDefense,
					Move.MetalBurst,
					Move.IronHead,
					Move.HoneClaws,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					31,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MetalClaw,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MetalSound,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SteelBeam,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.BattleArmor,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ToughClaws,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SteelySpirit,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Perrserker,
					PokemonFormBits.Default,
					{
						frontDefault: 'ff6e3a01.png',
						frontShiny: 'ada93c18.png',
						backDefault: '577294b6.png',
						backShiny: '2aabdf02.png',
					},
					[Type.Steel],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Cursola,
	50,
	30,
	Color.White,
	[EggGroup.Water1, EggGroup.Water3],
	6,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Fast,
	Shape.Arms,
	{
		[Language.JaHrkt]: ['サニゴーン'],
		[Language.Roomaji]: ['Sunigoon'],
		[Language.Ko]: ['산호르곤'],
		[Language.ZhHant]: ['魔靈珊瑚'],
		[Language.Fr]: ['Corayôme'],
		[Language.De]: ['Gorgasonn'],
		[Language.Es]: ['Cursola'],
		[Language.It]: ['Cursola'],
		[Language.En]: ['Cursola'],
		[Language.Ja]: ['サニゴーン'],
		[Language.ZhHans]: ['魔灵珊瑚'],
	},
	{
		[Language.JaHrkt]: ['さんごポケモン'],
		[Language.Ko]: ['산호포켓몬'],
		[Language.ZhHant]: ['珊瑚寶可夢'],
		[Language.Fr]: ['Pokémon Corail'],
		[Language.De]: ['Korallen-Pokémon'],
		[Language.Es]: ['Pokémon Coral'],
		[Language.It]: ['Pokémon Corallo'],
		[Language.En]: ['Coral Pokémon'],
		[Language.Ja]: ['さんごポケモン'],
		[Language.ZhHans]: ['珊瑚宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'れいりょくが　たかまり　カラから\nときはなたれた。　れいたいで\nかくの　たましいを　まもっている。',
			'たましいを　おおう　れいたいの\nからだには　ちゅうい。　ふれると\nいしのように　うごけなく　なるぞ。',
		],
		[Language.Ko]: [
			'영력이 높아져서 껍질에서\n해방되었다. 영체로\n핵이 되는 영혼을 지킨다.',
			'혼을 감싸는 영체의 몸은\n주의가 필요하다. 만지면\n돌처럼 움직일 수 없게 된다.',
		],
		[Language.ZhHant]: [
			'靈力增強之後從殼裡\n被解放出來。用靈體\n保護著內核中的靈魂。',
			'一定要小心牠那包覆著\n靈魂的靈體。如果觸摸到，\n就會像石頭一樣動彈不得。',
		],
		[Language.Fr]: [
			'Son énergie spectrale accrue s’est répandue\nhors de sa coquille. Il protège l’âme de son noyau\navec son corps spirituel.',
			'Ceux qui ont le malheur de toucher le corps\nspirituel qui protège son noyau se retrouveront\nimmobilisés, comme changés en pierre.',
		],
		[Language.De]: [
			'In ihm wuchs eine mysteriöse Kraft und so löste\nes sich von seinem Panzer los. Sein geisterhaftes\nEktoplasma schützt die Seele im Kern.',
			'Vor dem geisterhaften Ektoplasma, das seine\nSeele umhüllt, ist Vorsicht geboten. Berührt man\nes, erstarrt man wie zu Stein.',
		],
		[Language.Es]: [
			'Su energía espiritual ha aumentado hasta hacerlo\ndesprenderse de su base caliza. Protege el alma\ndel núcleo con su cuerpo espectral.',
			'Conviene tener cuidado con el cuerpo espectral\nque recubre su alma, pues quien lo toque podría\nacabar inerte como una piedra.',
		],
		[Language.It]: [
			'Un accumulo di energia misteriosa lo ha separato\ndal suo guscio. Protegge l’anima contenuta nel\nsuo nucleo in una sorta di ectoplasma.',
			'Il corpo di ectoplasma che avvolge la sua anima\nè pericolosissimo: chi lo tocca si immobilizza\ncome se fosse stato tramutato in pietra.',
		],
		[Language.En]: [
			'Its shell is overflowing with its heightened\notherworldly energy. The ectoplasm serves as\nprotection for this Pokémon’s core spirit.',
			'Be cautious of the ectoplasmic body\nsurrounding its soul. You’ll become\nstiff as stone if you touch it.',
		],
		[Language.Ja]: [
			'霊力が　高まり　殻から\n解き放たれた。　霊体で\n核の　魂を　守っている。',
			'魂を　被う　霊体の\n体には　注意。　触れると\n石のように　動けなく　なるぞ。',
		],
		[Language.ZhHans]: [
			'灵力增强之后从壳里\n被解放出来。用灵体\n保护着内核中的灵魂。',
			'一定要小心它那包覆着\n灵魂的灵体。如果触摸到，\n就会像石头一样动弹不得。',
		],
	},
	[
		[
			Variety.Cursola,
			179,
			10,
			4,
			[Type.Ghost],
			{
				frontDefault: 'c5133a4f.png',
				frontShiny: '04e03cbe.png',
				backDefault: '4a35fb36.png',
				backShiny: '2345b4e9.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 145, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 130},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Disable,
					Move.Harden,
					Move.PerishSong,
					Move.Astonish,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.PinMissile,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Psychic,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.SelfDestruct,
					Move.Amnesia,
					Move.LeechLife,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.Sandstorm,
					Move.GigaDrain,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.RainDance,
					Move.SunnyDay,
					Move.ShadowBall,
					Move.Whirlpool,
					Move.Hail,
					Move.WillOWisp,
					Move.Facade,
					Move.Revenge,
					Move.RockTomb,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.CalmMind,
					Move.RockBlast,
					Move.Brine,
					Move.PowerGem,
					Move.EarthPower,
					Move.GigaImpact,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Round,
					Move.Scald,
					Move.Hex,
					Move.Bulldoze,
					Move.ThroatChop,
					Move.StompingTantrum,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NightShade,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spite,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MirrorCoat,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Grudge,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerGem,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StrengthSap,
					35,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.MeteorBeam,
					Move.BurningJealousy,
					Move.Poltergeist,
				),
			].flat(),
			[
				{
					ability: Ability.WeakArmor,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.PerishBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Cursola,
					PokemonFormBits.Default,
					{
						frontDefault: 'c5133a4f.png',
						frontShiny: '04e03cbe.png',
						backDefault: '4a35fb36.png',
						backShiny: '2345b4e9.png',
					},
					[Type.Ghost],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Sirfetchd,
	50,
	45,
	Color.White,
	[EggGroup.Flying, EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['ネギガナイト'],
		[Language.Roomaji]: ['Negigaknight'],
		[Language.Ko]: ['창파나이트'],
		[Language.ZhHant]: ['蔥遊兵'],
		[Language.Fr]: ['Palarticho'],
		[Language.De]: ['Lauchzelot'],
		[Language.Es]: ['Sirfetch’d'],
		[Language.It]: ['Sirfetch’d'],
		[Language.En]: ['Sirfetch’d'],
		[Language.Ja]: ['ネギガナイト'],
		[Language.ZhHans]: ['葱游兵'],
	},
	{
		[Language.JaHrkt]: ['かるがもポケモン'],
		[Language.Ko]: ['청둥오리포켓몬'],
		[Language.ZhHant]: ['黃嘴鴨寶可夢'],
		[Language.Fr]: ['Pokémon Canard Fou'],
		[Language.De]: ['Wildenten-Pokémon'],
		[Language.Es]: ['Pokémon Pato Salvaje'],
		[Language.It]: ['Pokémon Selvanatra'],
		[Language.En]: ['Wild Duck Pokémon'],
		[Language.Ja]: ['かるがもポケモン'],
		[Language.ZhHans]: ['黄嘴鸭宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'れきせんを　いきぬいた　ものが\nこのすがたに　しんかする。　ネギが\nかれるとき　せんじょうを　さる。',
			'かたいネギの　はで　こうげきを\nいなし　するどい　クキで　はんげき。\nネギは　ぶぐで　あり　しょくざい。',
		],
		[Language.Ko]: [
			'많은 싸움에서 살아남은 자만이\n이 모습으로 진화한다.\n파가 시들면 전장을 떠난다.',
			'단단한 파잎으로 공격을 받아넘기고\n날카로운 줄기로 반격한다.\n파는 무기인 동시에 식재료다.',
		],
		[Language.ZhHant]: [
			'只有歷經過無數戰鬥的\n大蔥鴨才能進化成這個樣子。\n當大蔥枯萎了就會離開戰場。',
			'會用堅硬的蔥葉抵擋攻擊，\n接著用鋒利的莖反擊。\n牠的蔥既是武器也是食材。',
		],
		[Language.Fr]: [
			'Seuls les Canarticho ayant survécu à de nombreux\ncombats atteignent ce stade d’évolution. Si son\npoireau se flétrit, il se retire du champ de bataille.',
			'Il pare les attaques avec le tranchant de son\nsolide poireau, et contre-attaque avec la pointe\nde la tige. Son arme est également comestible.',
		],
		[Language.De]: [
			'Porenta, die viele Schlachten überstanden haben,\nentwickeln sich zu Lauchzelot. Verwelkt seine\nLauchstange, zieht es sich vom Kämpfen zurück.',
			'Der Lauch dient ihm als Waffe und zur Abwehr,\naber viele essen ihn auch. Mit den harten Blättern\npariert es und mit der scharfen Stange kontert es.',
		],
		[Language.Es]: [
			'Los ejemplares que superan numerosos combates\nevolucionan y adoptan esta forma. Abandonan el\nterreno de combate en cuanto el puerro se seca.',
			'Repele ataques con las hojas de su duro puerro y\ncontraataca con su tallo afilado. El puerro que le\nsirve de armamento sigue siendo comestible.',
		],
		[Language.It]: [
			'Gli esemplari con tante lotte alle spalle si\nevolvono assumendo questa forma. Se il suo\ngambo si secca, abbandona il campo di lotta.',
			'Devia gli attacchi usando la dura foglia del porro\ne contrattacca con il gambo affilato. Usa il porro\nsia come arma che come cibo.',
		],
		[Language.En]: [
			'Only Farfetch’d that have survived many battles\ncan attain this evolution. When this Pokémon’s\nleek withers, it will retire from combat.',
			'After deflecting attacks with its hard leaf shield,\nit strikes back with its sharp leek stalk. The leek\nstalk is both weapon and food.',
		],
		[Language.Ja]: [
			'歴戦を　生き抜いた　ものが\nこの姿に　進化する。　ネギが\n枯れるとき　戦場を　去る。',
			'硬いネギの　葉で　攻撃を\nいなし　鋭い　茎で　反撃。\nネギは　武具であり　食材。',
		],
		[Language.ZhHans]: [
			'只有经历过无数战斗的\n大葱鸭才能进化成这个样子。\n当大葱枯萎了就会离开战场。',
			'会用坚硬的葱叶抵挡攻击，\n接着用锋利的茎反击。\n它的葱既是武器也是食材。',
		],
	},
	[
		[
			Variety.Sirfetchd,
			177,
			8,
			1170,
			[Type.Fighting],
			{
				frontDefault: 'db892c9b.png',
				frontShiny: '91bcf695.png',
				backDefault: '7d510310.png',
				backShiny: '0b621909.png',
			},
			{
				[Stat.Hp]: {baseStat: 62},
				[Stat.Attack]: {baseStat: 135, effort: 2},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 68},
				[Stat.SpecialDefense]: {baseStat: 82},
				[Stat.Speed]: {baseStat: 65},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					45,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.FocusEnergy,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.SunnyDay,
					Move.Facade,
					Move.HelpingHand,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.IronDefense,
					Move.LeafBlade,
					Move.CloseCombat,
					Move.Assurance,
					Move.PoisonJab,
					Move.BraveBird,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.SolarBlade,
					Move.ThroatChop,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.SandAttack,
					Move.Leer,
					Move.Peck,
					Move.FuryCutter,
					Move.IronDefense,
					Move.FirstImpression,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.KnockOff,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeafBlade,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BraveBird,
					65,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Defog,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FinalGambit,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MeteorAssault,
					70,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.GrassyGlide,
					Move.Coaching,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.Steadfast,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Scrappy,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Sirfetchd,
					PokemonFormBits.Default,
					{
						frontDefault: 'db892c9b.png',
						frontShiny: '91bcf695.png',
						backDefault: '7d510310.png',
						backShiny: '0b621909.png',
					},
					[Type.Fighting],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.MrRime,
	50,
	45,
	Color.Purple,
	[EggGroup.Humanshape],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Medium,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['バリコオル'],
		[Language.Roomaji]: ['Barrikohru'],
		[Language.Ko]: ['마임꽁꽁'],
		[Language.ZhHant]: ['踏冰人偶'],
		[Language.Fr]: ['M. Glaquette'],
		[Language.De]: ['Pantifrost'],
		[Language.Es]: ['Mr. Rime'],
		[Language.It]: ['Mr. Rime'],
		[Language.En]: ['Mr. Rime'],
		[Language.Ja]: ['バリコオル'],
		[Language.ZhHans]: ['踏冰人偶'],
	},
	{
		[Language.JaHrkt]: ['コメディアンポケモン'],
		[Language.Ko]: ['코미디언포켓몬'],
		[Language.ZhHant]: ['喜劇演員寶可夢'],
		[Language.Fr]: ['Pokémon Comédien'],
		[Language.De]: ['Komiker-Pokémon'],
		[Language.Es]: ['Pokémon Cómico'],
		[Language.It]: ['Pokémon Comico'],
		[Language.En]: ['Comedian Pokémon'],
		[Language.Ja]: ['コメディアンポケモン'],
		[Language.ZhHans]: ['喜剧演员宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'タップダンスの　たつじん。\nこおりで　できた　ステッキを　ふり\nかろやかな　ステップを　ひろうする。',
			'ユーモラスな　うごきで　みんなの\nにんきもの。　おなかの　もようから\nサイコパワーを　ほうしゅつする。',
		],
		[Language.Ko]: [
			'탭 댄스의 달인이다.\n얼음으로 만든 지팡이를 휘두르며\n경쾌한 스텝을 선보인다.',
			'유머러스한 움직임으로 모두에게\n인기가 높다. 배의 무늬에서\n사이코 파워를 방출한다.',
		],
		[Language.ZhHant]: [
			'踢踏舞的達人。\n會揮動手中的冰杖，\n向觀眾表演輕快的舞步。',
			'幽默的動作使牠獲得了\n眾人的喜愛。能從腹部的\n圖案釋放出精神力量。',
		],
		[Language.Fr]: [
			'Véritable virtuose des claquettes, il se donne\nen spectacle en dansant d’un pas léger\ntout en jonglant avec sa canne de glace.',
			'Ses gestes hilarants le rendent très populaire.\nIl peut libérer ses pouvoirs psychiques depuis\nle motif sur son ventre.',
		],
		[Language.De]: [
			'Dieser begnadete Stepptänzer schwingt einen\naus Eis geformten Gehstock und gibt mit\nleichtem Fuß seinen Tanz zum Besten.',
			'Dank seiner unterhaltsamen Bewegungen ist es\nallseits sehr beliebt. Von dem Muster auf seinem\nBauch sendet es Psycho-Kräfte aus.',
		],
		[Language.Es]: [
			'Es un bailarín consumado de claqué. Agita su\nbastón de hielo mientras exhibe su destreza con\ngráciles pasos.',
			'Se ha granjeado la simpatía de todo el mundo\npor sus cómicos movimientos. Emite poderes\npsíquicos por el motivo de su barriga.',
		],
		[Language.It]: [
			'È un maestro del tip tap. Fa roteare il suo\nbastone di ghiaccio mentre si esibisce\nin leggiadri passi di danza.',
			'Le sue comiche movenze lo rendono simpatico\na tutti. Emette poteri psichici dal motivo che ha\nsul ventre.',
		],
		[Language.En]: [
			'It’s highly skilled at tap-dancing. It waves its cane\nof ice in time with its graceful movements.',
			'Its amusing movements make it very popular.\nIt releases its psychic power from the pattern\non its belly.',
		],
		[Language.Ja]: [
			'タップダンスの　達人。\n氷で　できた　ステッキを　振り\n軽やかな　ステップを　披露する。',
			'ユーモラスな　動きで　みんなの\n人気者。　お腹の　模様から\nサイコパワーを　放出する。',
		],
		[Language.ZhHans]: [
			'踢踏舞的达人。\n会挥动手中的冰杖，\n向观众表演轻快的舞步。',
			'幽默的动作使它获得了\n众人的喜爱。能从腹部的\n图案释放出精神力量。',
		],
	},
	[
		[
			Variety.MrRime,
			182,
			15,
			582,
			[Type.Ice, Type.Psychic],
			{
				frontDefault: '43e2fb76.png',
				frontShiny: 'cdf9b505.png',
				backDefault: '55ae1487.png',
				backShiny: 'd53a44d2.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 75},
				[Stat.SpecialAttack]: {baseStat: 110, effort: 3},
				[Stat.SpecialDefense]: {baseStat: 100},
				[Stat.Speed]: {baseStat: 70},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Mimic,
					Move.LightScreen,
					Move.Reflect,
					Move.Protect,
					Move.Safeguard,
					Move.BatonPass,
					Move.Encore,
					Move.RapidSpin,
					Move.RolePlay,
					Move.Recycle,
					Move.SlackOff,
					Move.FakeTears,
					Move.Block,
					Move.Copycat,
					Move.IceShard,
					Move.AfterYou,
					Move.MistyTerrain,
					Move.DazzlingGleam,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.IcePunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Psychic,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.Encore,
					Move.RainDance,
					Move.SunnyDay,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Uproar,
					Move.Hail,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Trick,
					Move.BrickBreak,
					Move.SkillSwap,
					Move.FakeTears,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.CalmMind,
					Move.Payback,
					Move.Fling,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.GrassKnot,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.FoulPlay,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.MistyTerrain,
					Move.DazzlingGleam,
					Move.PsychicTerrain,
					Move.StompingTantrum,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Confusion,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hypnosis,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MirrorCoat,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TeeterDance,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuckerPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AllySwitch,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ExpandingForce,
					Move.TripleAxel,
				),
			].flat(),
			[
				{
					ability: Ability.TangledFeet,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ScreenCleaner,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.IceBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.MrRime,
					PokemonFormBits.Default,
					{
						frontDefault: '43e2fb76.png',
						frontShiny: 'cdf9b505.png',
						backDefault: '55ae1487.png',
						backShiny: 'd53a44d2.png',
					},
					[Type.Ice, Type.Psychic],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Runerigus,
	50,
	90,
	Color.Gray,
	[EggGroup.Mineral, EggGroup.Indeterminate],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Medium,
	Shape.Blob,
	{
		[Language.JaHrkt]: ['デスバーン'],
		[Language.Roomaji]: ['Deathbarn'],
		[Language.Ko]: ['데스판'],
		[Language.ZhHant]: ['死神板'],
		[Language.Fr]: ['Tutétékri'],
		[Language.De]: ['Oghnatoll'],
		[Language.Es]: ['Runerigus'],
		[Language.It]: ['Runerigus'],
		[Language.En]: ['Runerigus'],
		[Language.Ja]: ['デスバーン'],
		[Language.ZhHans]: ['迭失板'],
	},
	{
		[Language.JaHrkt]: ['おんねんポケモン'],
		[Language.Ko]: ['원념포켓몬'],
		[Language.ZhHant]: ['怨念寶可夢'],
		[Language.Fr]: ['Pokémon Rancune'],
		[Language.De]: ['Gram-Pokémon'],
		[Language.Es]: ['Pokémon Resquemor'],
		[Language.It]: ['Pokémon Rancore'],
		[Language.En]: ['Grudge Pokémon'],
		[Language.Ja]: ['おんねんポケモン'],
		[Language.ZhHans]: ['怨念宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'つよい　のろいを　こめて　かかれた\nこだいの　えが　デスマスの\nたましいを　とりこみ　うごきだした。',
			'かげの　ような　からだに　ふれては\nいけない。　えに　きざまれた\nおそろしい　きおくを　みせられるぞ。',
		],
		[Language.Ko]: [
			'강한 저주를 담아 그린\n고대의 그림이 데스마스의 영혼을\n흡수해서 움직이기 시작했다.',
			'그림자 같은 몸을 만지면 안 된다.\n그림에 새겨진 무서운 기억을\n보게 되기 때문이다.',
		],
		[Language.ZhHant]: [
			'被注入了強烈詛咒的古代繪畫\n在吸進哭哭面具的靈魂後\n就開始動起來了。',
			'絕對不能觸摸牠影子般的\n身體，否則牠會讓你看到\n印刻在牠畫中的恐怖記憶。',
		],
		[Language.Fr]: [
			'Les motifs antiques qui ont été gravés\nen y incorporant une puissante malédiction\nont aspiré l’âme de Tutafeh avant de prendre vie.',
			'Quiconque touchera son corps semblable\nà une ombre devra endurer la vision des souvenirs\neffroyables gravés dans ses motifs.',
		],
		[Language.De]: [
			'Eine antike Malerei, die mit einem mächtigen\nFluch versehen wurde, nahm die Seele eines\nMakabaja auf und erwachte zum Leben.',
			'Man sollte seinen schattenhaften Körper nicht\nberühren, sonst zeigt es einem die schauerlichen\nErinnerungen, die in sein Bild eingraviert wurden.',
		],
		[Language.Es]: [
			'Una poderosa maldición pesa sobre esta antigua\nimagen grabada, que ha cobrado vida tras\nadueñarse del alma de Yamask.',
			'Su cuerpo, similar a una sombra, no debe tocarse\nbajo ningún concepto o se visualizarán los\nhorribles recuerdos impregnados en la imagen.',
		],
		[Language.It]: [
			'Un antico disegno afflitto da una potente\nmaledizione ha preso vita, imprigionando\nl’anima di Yamask.',
			'Non bisogna toccare il suo corpo simile a\nun’ombra, o si vedranno i propri ricordi più\nterribili imprigionati nel suo motivo.',
		],
		[Language.En]: [
			'A powerful curse was woven into an ancient\npainting. After absorbing the spirit of a Yamask,\nthe painting began to move.',
			'Never touch its shadowlike body, or you’ll be\nshown the horrific memories behind the picture\ncarved into it.',
		],
		[Language.Ja]: [
			'強い　呪いを　こめて　描かれた\n古代の　絵が　デスマスの\n魂を　取り込み　動きだした。',
			'影の　ような　体に　触れては\nいけない。　絵に　刻まれた\n恐ろしい　記憶を　見せられるぞ。',
		],
		[Language.ZhHans]: [
			'被注入了强烈诅咒的古代绘画\n在吸进哭哭面具的灵魂后\n就开始动起来了。',
			'绝对不能触摸它影子般的\n身体，否则它会让你看到\n印刻在它画中的恐怖记忆。',
		],
	},
	[
		[
			Variety.Runerigus,
			169,
			16,
			666,
			[Type.Ground, Type.Ghost],
			{
				frontDefault: 'd841c3c7.png',
				frontShiny: '54bf5f6b.png',
				backDefault: '7ad60007.png',
				backShiny: '2d5fa750.png',
			},
			{
				[Stat.Hp]: {baseStat: 58},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 145, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 50},
				[Stat.SpecialDefense]: {baseStat: 105},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Disable,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.Earthquake,
					Move.Psychic,
					Move.Amnesia,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.RainDance,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Taunt,
					Move.Trick,
					Move.Revenge,
					Move.SkillSwap,
					Move.Imprison,
					Move.FakeTears,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.CalmMind,
					Move.RockBlast,
					Move.Payback,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.ToxicSpikes,
					Move.DarkPulse,
					Move.DragonPulse,
					Move.EnergyBall,
					Move.EarthPower,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.StoneEdge,
					Move.StealthRock,
					Move.GrassKnot,
					Move.WonderRoom,
					Move.Round,
					Move.AllySwitch,
					Move.Hex,
					Move.Bulldoze,
					Move.PhantomForce,
					Move.BrutalSwing,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Earthquake,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.NightShade,
					Move.Haze,
					Move.Protect,
					Move.ScaryFace,
					Move.Astonish,
					Move.ShadowClaw,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					38,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DestinyBond,
					62,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MeanLook,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShadowClaw,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 56,
					},

					Move.GuardSplit,
					Move.PowerSplit,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CraftyShield,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Poltergeist,
				),
			].flat(),
			[
				{
					ability: Ability.WanderingSpirit,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Runerigus,
					PokemonFormBits.Default,
					{
						frontDefault: 'd841c3c7.png',
						frontShiny: '54bf5f6b.png',
						backDefault: '7ad60007.png',
						backShiny: '2d5fa750.png',
					},
					[Type.Ground, Type.Ghost],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Milcery,
	50,
	200,
	Color.White,
	[EggGroup.Fairy, EggGroup.Indeterminate],
	8,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Ball,
	{
		[Language.JaHrkt]: ['マホミル'],
		[Language.Roomaji]: ['Mahomil'],
		[Language.Ko]: ['마빌크'],
		[Language.ZhHant]: ['小仙奶'],
		[Language.Fr]: ['Crèmy'],
		[Language.De]: ['Hokumil'],
		[Language.Es]: ['Milcery'],
		[Language.It]: ['Milcery'],
		[Language.En]: ['Milcery'],
		[Language.Ja]: ['マホミル'],
		[Language.ZhHans]: ['小仙奶'],
	},
	{
		[Language.JaHrkt]: ['クリームポケモン'],
		[Language.Ko]: ['크림포켓몬'],
		[Language.ZhHant]: ['鮮奶油寶可夢'],
		[Language.Fr]: ['Pokémon Crème'],
		[Language.De]: ['Sahne-Pokémon'],
		[Language.Es]: ['Pokémon Nata'],
		[Language.It]: ['Pokémon Pannafresca'],
		[Language.En]: ['Cream Pokémon'],
		[Language.Ja]: ['クリームポケモン'],
		[Language.ZhHans]: ['鲜奶油宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'クリームで　できた　からだを　もつ。\nくうきちゅうの　あまい　かおりの\nせいぶんが　あつまって　うまれた。',
			'マホミルが　すがたを　みせた\nパティスリーは　だいはんじょうが\nやくそく　されると　いわれている。',
		],
		[Language.Ko]: [
			'크림으로 이루어진 몸을 가졌다.\n공기 중을 떠도는 달콤한 향기의\n성분이 모여서 태어났다.',
			'마빌크가 모습을 보인\n디저트 가게는 크게\n번창한다고 전해지고 있다.',
		],
		[Language.ZhHant]: [
			'空氣中甜甜香氣的\n成分集中之後誕生。\n身體由鮮奶油構成。',
			'據說有小仙奶\n現身的蛋糕店\n保證能生意興隆。',
		],
		[Language.Fr]: [
			'Son corps de crème s’est composé à partir\nde particules au parfum sucré flottant dans l’air.',
			'Les pâtissiers connaissent tous ce vieil adage :\nQuand Crèmy apparaît, le succès est assuré.',
		],
		[Language.De]: [
			'Sein Körper besteht aus Sahne. Es entstand\naus einer Ansammlung süßer Geruchspartikel\nin der Luft.',
			'Es heißt, dass den Konditoreien, in denen sich\nHokumil zeigt, großer Wohlstand verheißen sei.',
		],
		[Language.Es]: [
			'Su cremoso cuerpo surgió a partir de la unión\nde partículas odoríferas de dulces aromas\npresentes en el aire.',
			'Se dice que las pastelerías donde ha aparecido\nMilcery tienen casi todas las papeletas para\nsaborear las mieles del éxito.',
		],
		[Language.It]: [
			'Il suo corpo è fatto di panna. È nato dall’unione\ndi particelle di profumo dolce disperse nell’aria.',
			'Si dice che le pasticcerie in cui è apparso\nun Milcery avranno un successo assicurato!',
		],
		[Language.En]: [
			'This Pokémon was born from sweet-smelling\nparticles in the air. Its body is made of cream.',
			'They say that any patisserie visited by Milcery\nis guaranteed success and good fortune.',
		],
		[Language.Ja]: [
			'クリームで　できた　体を　もつ。\n空気中の　甘い　香りの\n成分が　集まって　生まれた。',
			'マホミルが　姿を　みせた\nパティスリーは　大繁盛が\n約束されると　いわれている。',
		],
		[Language.ZhHans]: [
			'空气中甜甜香气的\n成分集中之后诞生。\n身体由鲜奶油构成。',
			'据说有小仙奶\n现身过的蛋糕店\n保证能生意兴隆。',
		],
	},
	[
		[
			Variety.Milcery,
			54,
			2,
			3,
			[Type.Fairy],
			{
				frontDefault: '7d94a16d.png',
				frontShiny: '28c2dfdb.png',
				backDefault: 'd5b5a02c.png',
				backShiny: '83943598.png',
			},
			{
				[Stat.Hp]: {baseStat: 45},
				[Stat.Attack]: {baseStat: 40},
				[Stat.Defense]: {baseStat: 40},
				[Stat.SpecialAttack]: {baseStat: 50},
				[Stat.SpecialDefense]: {baseStat: 61, effort: 1},
				[Stat.Speed]: {baseStat: 34},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.AromaticMist,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AcidArmor,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.Facade,
					Move.HelpingHand,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.MistyTerrain,
					Move.DazzlingGleam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SweetKiss,
					5,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Charm,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Attract,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SweetScent,
					10,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.LastResort,
					Move.BabyDollEyes,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Entrainment,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrainingKiss,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MistyTerrain,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					35,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_Machine,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.AromaticMist,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AcidArmor,
					30,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.HelpingHand,
					Move.Fling,
					Move.Round,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.MistyTerrain,
					Move.DazzlingGleam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SweetKiss,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Attract,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SweetScent,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.LastResort,
					Move.BabyDollEyes,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Entrainment,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrainingKiss,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MistyTerrain,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					35,
				),
			].flat(),
			[
				{
					ability: Ability.SweetVeil,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.AromaVeil,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Milcery,
					PokemonFormBits.Default,
					{
						frontDefault: '7d94a16d.png',
						frontShiny: '28c2dfdb.png',
						backDefault: 'd5b5a02c.png',
						backShiny: '83943598.png',
					},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Alcremie,
	50,
	100,
	Color.White,
	[EggGroup.Fairy, EggGroup.Indeterminate],
	8,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Blob,
	{
		[Language.JaHrkt]: ['マホイップ'],
		[Language.Roomaji]: ['Mawhip'],
		[Language.Ko]: ['마휘핑'],
		[Language.ZhHant]: ['霜奶仙'],
		[Language.Fr]: ['Charmilly'],
		[Language.De]: ['Pokusan'],
		[Language.Es]: ['Alcremie'],
		[Language.It]: ['Alcremie'],
		[Language.En]: ['Alcremie'],
		[Language.Ja]: ['マホイップ'],
		[Language.ZhHans]: ['霜奶仙'],
	},
	{
		[Language.JaHrkt]: ['クリームポケモン'],
		[Language.Ko]: ['크림포켓몬'],
		[Language.ZhHant]: ['鮮奶油寶可夢'],
		[Language.Fr]: ['Pokémon Crème'],
		[Language.De]: ['Sahne-Pokémon'],
		[Language.Es]: ['Pokémon Nata'],
		[Language.It]: ['Pokémon Pannafresca'],
		[Language.En]: ['Cream Pokémon'],
		[Language.Ja]: ['クリームポケモン'],
		[Language.ZhHans]: ['鲜奶油宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'しんらいする　トレーナーには\nクリームで　デコレーションした\nきのみを　ふるまって　くれるのだ。',
			'てから　うみだす　クリームは\nマホイップが　しあわせなとき\nあまみと　コクが　ふかまる。',
		],
		[Language.Ko]: [
			'믿을 수 있는 트레이너에게는\n크림으로 데코레이션한\n나무열매를 대접한다.',
			'손에서 나오는 크림은\n마휘핑이 행복할 때\n단맛과 감칠맛이 깊어진다.',
		],
		[Language.ZhHant]: [
			'牠會把自己用鮮奶油\n裝飾過的樹果送給\n自己信任的訓練家。',
			'當牠感到幸福的時候，\n手中產生出的鮮奶油\n會變得更加香濃甜美。',
		],
		[Language.Fr]: [
			'Il offre aux Dresseurs auxquels il accorde\ntoute sa confiance des Baies décorées\navec de la crème.',
			'Quand il est heureux, la crème qu’il produit\navec ses mains devient plus sucrée\net plus onctueuse.',
		],
		[Language.De]: [
			'Es macht einem Trainer, dem es vertraut, mit\nBeeren samt Sahnedekoration eine Freude.',
			'Die Sahne, die Pokusan aus seinen Händen\nhervorbringt, wird noch süßer und intensiver\nim Geschmack, wenn es glücklich ist.',
		],
		[Language.Es]: [
			'Obsequia bayas decoradas con nata a aquellos\nEntrenadores en los que confía.',
			'La nata que le brota de las manos es más dulce\ny sustanciosa cuando está feliz.',
		],
		[Language.It]: [
			'Agli Allenatori di cui si fida regala bacche\ndecorate con la panna.',
			'La panna che Alcremie produce dalle mani\nè più dolce e gustosa quando è felice.',
		],
		[Language.En]: [
			'When it trusts a Trainer, it will treat them to\nberries it’s decorated with cream.',
			'When Alcremie is content, the cream it\nsecretes from its hands becomes sweeter\nand richer.',
		],
		[Language.Ja]: [
			'信頼する　トレーナーには\nクリームで　デコレーションした\n木の実を　ふるまって　くれるのだ。',
			'手から　生みだす　クリームは\nマホイップが　幸せなとき\n甘味と　コクが　深まる。',
		],
		[Language.ZhHans]: [
			'它会把自己用鲜奶油\n装饰过的树果送给\n自己信任的训练家。',
			'当它感到幸福的时候，\n手中产生出的鲜奶油\n会变得更加香浓甜美。',
		],
	},
	[
		[
			Variety.Alcremie,
			173,
			3,
			5,
			[Type.Fairy],
			{
				frontDefault: '820e2fe2.png',
				frontShiny: '29ae00d4.png',
				backDefault: 'fb55f484.png',
				backShiny: '10679aca.png',
			},
			{
				[Stat.Hp]: {baseStat: 65},
				[Stat.Attack]: {baseStat: 60},
				[Stat.Defense]: {baseStat: 75},
				[Stat.SpecialAttack]: {baseStat: 110},
				[Stat.SpecialDefense]: {baseStat: 121, effort: 2},
				[Stat.Speed]: {baseStat: 64},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.SweetKiss,
					Move.SweetScent,
					Move.AromaticMist,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.LightScreen,
					Move.Metronome,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.Encore,
					Move.Facade,
					Move.HelpingHand,
					Move.Imprison,
					Move.FakeTears,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.Fling,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.MistyTerrain,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.MistyExplosion,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AcidArmor,
					30,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Charm,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Attract,
					25,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PainSplit,
					Move.PsychUp,
					Move.Endeavor,
					Move.DisarmingVoice,
					Move.TeraBlast,
					Move.AlluringVoice,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.LastResort,
					Move.BabyDollEyes,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Entrainment,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrainingKiss,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MistyTerrain,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Decorate,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.SweetKiss,
					Move.SweetScent,
					Move.AromaticMist,
					Move.Decorate,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.LightScreen,
					Move.Metronome,
					Move.Rest,
					Move.TriAttack,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.Charm,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.Encore,
					Move.Facade,
					Move.HelpingHand,
					Move.Imprison,
					Move.FakeTears,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.Fling,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.Round,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.MistyTerrain,
					Move.PlayRough,
					Move.MysticalFire,
					Move.DazzlingGleam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AcidArmor,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Attract,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Entrainment,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DrainingKiss,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MistyTerrain,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Decorate,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.MistyExplosion,
				),
			].flat(),
			[
				{
					ability: Ability.SweetVeil,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.AromaVeil,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.AlcremieVanillaCream,
					PokemonFormBits.Default,
					{
						frontDefault: '820e2fe2.png',
						frontShiny: '29ae00d4.png',
						backDefault: 'fb55f484.png',
						backShiny: '10679aca.png',
					},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Lait Vanille'],
						[Language.De]: ['Pokusan (Vanille-Creme)'],
						[Language.En]: ['Vanilla Cream Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ミルキィバニラ'],
						[Language.Ko]: ['밀키바닐라'],
						[Language.ZhHant]: ['奶香香草'],
						[Language.Fr]: ['Lait Vanille'],
						[Language.De]: ['Vanille-Creme'],
						[Language.Es]: ['Crema de Vainilla'],
						[Language.It]: ['Lattevaniglia'],
						[Language.En]: ['Vanilla Cream'],
						[Language.Ja]: ['ミルキィバニラ'],
						[Language.ZhHans]: ['奶香香草'],
					},
					'vanilla-cream',
				],
				[
					Form.AlcremieRubyCream,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Lait Ruby'],
						[Language.De]: ['Pokusan (Ruby-Creme)'],
						[Language.En]: ['Ruby Cream Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ミルキィルビー'],
						[Language.Ko]: ['밀키루비'],
						[Language.ZhHant]: ['奶香紅鑽'],
						[Language.Fr]: ['Lait Ruby'],
						[Language.De]: ['Ruby-Creme'],
						[Language.Es]: ['Crema Rosa'],
						[Language.It]: ['Latterosa'],
						[Language.En]: ['Ruby Cream'],
						[Language.Ja]: ['ミルキィルビー'],
						[Language.ZhHans]: ['奶香红钻'],
					},
					'ruby-cream',
				],
				[
					Form.AlcremieMatchaCream,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Lait Matcha'],
						[Language.De]: ['Pokusan (Matcha-Creme)'],
						[Language.En]: ['Matcha Cream Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ミルキィまっちゃ'],
						[Language.Ko]: ['밀키말차'],
						[Language.ZhHant]: ['奶香抹茶'],
						[Language.Fr]: ['Lait Matcha'],
						[Language.De]: ['Matcha-Creme'],
						[Language.Es]: ['Crema de Té'],
						[Language.It]: ['Lattematcha'],
						[Language.En]: ['Matcha Cream'],
						[Language.Ja]: ['ミルキィまっちゃ'],
						[Language.ZhHans]: ['奶香抹茶'],
					},
					'matcha-cream',
				],
				[
					Form.AlcremieMintCream,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Lait Menthe'],
						[Language.De]: ['Pokusan (Minz-Creme)'],
						[Language.En]: ['Mint Cream Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ミルキィミント'],
						[Language.Ko]: ['밀키민트'],
						[Language.ZhHant]: ['奶香薄荷'],
						[Language.Fr]: ['Lait Menthe'],
						[Language.De]: ['Minz-Creme'],
						[Language.Es]: ['Crema de Menta'],
						[Language.It]: ['Lattementa'],
						[Language.En]: ['Mint Cream'],
						[Language.Ja]: ['ミルキィミント'],
						[Language.ZhHans]: ['奶香薄荷'],
					},
					'mint-cream',
				],
				[
					Form.AlcremieLemonCream,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Lait Citron'],
						[Language.De]: ['Pokusan (Zitronen-Creme)'],
						[Language.En]: ['Lemon Cream Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ミルキィレモン'],
						[Language.Ko]: ['밀키레몬'],
						[Language.ZhHant]: ['奶香檸檬'],
						[Language.Fr]: ['Lait Citron'],
						[Language.De]: ['Zitronen-Creme'],
						[Language.Es]: ['Crema de Limón'],
						[Language.It]: ['Lattelimone'],
						[Language.En]: ['Lemon Cream'],
						[Language.Ja]: ['ミルキィレモン'],
						[Language.ZhHans]: ['奶香柠檬'],
					},
					'lemon-cream',
				],
				[
					Form.AlcremieSaltedCream,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Lait Salé'],
						[Language.De]: ['Pokusan (Salz-Creme)'],
						[Language.En]: ['Salted Cream Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ミルキィソルト'],
						[Language.Ko]: ['밀키솔트'],
						[Language.ZhHant]: ['奶香雪鹽'],
						[Language.Fr]: ['Lait Salé'],
						[Language.De]: ['Salz-Creme'],
						[Language.Es]: ['Crema Salada'],
						[Language.It]: ['Lattesale'],
						[Language.En]: ['Salted Cream'],
						[Language.Ja]: ['ミルキィソルト'],
						[Language.ZhHans]: ['奶香雪盐'],
					},
					'salted-cream',
				],
				[
					Form.AlcremieRubySwirl,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Mélange Ruby'],
						[Language.De]: ['Pokusan (Ruby-Mix)'],
						[Language.En]: ['Ruby Swirl Alcremie'],
					},
					{
						[Language.JaHrkt]: ['ルビーミックス'],
						[Language.Ko]: ['루비믹스'],
						[Language.ZhHant]: ['紅鑽綜合'],
						[Language.Fr]: ['Mélange Ruby'],
						[Language.De]: ['Ruby-Mix'],
						[Language.Es]: ['Mezcla Rosa'],
						[Language.It]: ['Rosamix'],
						[Language.En]: ['Ruby Swirl'],
						[Language.Ja]: ['ルビーミックス'],
						[Language.ZhHans]: ['红钻综合'],
					},
					'ruby-swirl',
				],
				[
					Form.AlcremieCaramelSwirl,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Mélange Caramel'],
						[Language.De]: ['Pokusan (Karamell-Mix)'],
						[Language.En]: ['Caramel Swirl Alcremie'],
					},
					{
						[Language.JaHrkt]: ['キャラメルミックス'],
						[Language.Ko]: ['캐러멜믹스'],
						[Language.ZhHant]: ['焦糖綜合'],
						[Language.Fr]: ['Mélange Caramel'],
						[Language.De]: ['Karamell-Mix'],
						[Language.Es]: ['Mezcla Caramelo'],
						[Language.It]: ['Caramelmix'],
						[Language.En]: ['Caramel Swirl'],
						[Language.Ja]: ['キャラメルミックス'],
						[Language.ZhHans]: ['焦糖综合'],
					},
					'caramel-swirl',
				],
				[
					Form.AlcremieRainbowSwirl,
					PokemonFormBits.None,
					{},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Mélange Tricolore'],
						[Language.De]: ['Pokusan (Trio-Mix)'],
						[Language.En]: ['Rainbow Swirl Alcremie'],
					},
					{
						[Language.JaHrkt]: ['トリプルミックス'],
						[Language.Ko]: ['트리플믹스'],
						[Language.ZhHant]: ['三色綜合'],
						[Language.Fr]: ['Mélange Tricolore'],
						[Language.De]: ['Trio-Mix'],
						[Language.Es]: ['Tres Sabores'],
						[Language.It]: ['Triplomix'],
						[Language.En]: ['Rainbow Swirl'],
						[Language.Ja]: ['トリプルミックス'],
						[Language.ZhHans]: ['三色综合'],
					},
					'rainbow-swirl',
				],
			],
		],
		[
			Variety.AlcremieGmax,
			173,
			300,
			10000,
			[Type.Fairy],
			{
				frontDefault: '8fe4e505.png',
				frontShiny: '923c84d6.png',
				backDefault: '48025238.png',
				backShiny: 'ad65d874.png',
			},
			{
				[Stat.Hp]: {baseStat: 65},
				[Stat.Attack]: {baseStat: 60},
				[Stat.Defense]: {baseStat: 75},
				[Stat.SpecialAttack]: {baseStat: 110},
				[Stat.SpecialDefense]: {baseStat: 121, effort: 2},
				[Stat.Speed]: {baseStat: 64},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.SweetVeil,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.AromaVeil,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.AlcremieGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '8fe4e505.png',
						frontShiny: '923c84d6.png',
						backDefault: '48025238.png',
						backShiny: 'ad65d874.png',
					},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Charmilly Gigamax'],
						[Language.De]: ['Gigadynamax-Pokusan'],
						[Language.En]: ['Gigantamax Alcremie'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Falinks,
	50,
	45,
	Color.Yellow,
	[EggGroup.Fairy, EggGroup.Mineral],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Medium,
	Shape.Heads,
	{
		[Language.JaHrkt]: ['タイレーツ'],
		[Language.Roomaji]: ['Tairetsu'],
		[Language.Ko]: ['대여르'],
		[Language.ZhHant]: ['列陣兵'],
		[Language.Fr]: ['Hexadron'],
		[Language.De]: ['Legios'],
		[Language.Es]: ['Falinks'],
		[Language.It]: ['Falinks'],
		[Language.En]: ['Falinks'],
		[Language.Ja]: ['タイレーツ'],
		[Language.ZhHans]: ['列阵兵'],
	},
	{
		[Language.JaHrkt]: ['じんけいポケモン'],
		[Language.Ko]: ['진형포켓몬'],
		[Language.ZhHant]: ['陣形寶可夢'],
		[Language.Fr]: ['Pokémon Escadron'],
		[Language.De]: ['Formations-Pokémon'],
		[Language.Es]: ['Pokémon Formación'],
		[Language.It]: ['Pokémon Schieramento'],
		[Language.En]: ['Formation Pokémon'],
		[Language.Ja]: ['じんけいポケモン'],
		[Language.ZhHans]: ['阵形宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ヘイチョーと　よばれる　１ぴきと\nヘイと　よばれる　５ひきで　ひとつ。\nヘイチョーの　めいれいは　ぜったい。',
			'６ぴきで　１ぴきの　ポケモン。\nたいれつを　くみかえながら\nチームワークで　たたかうのだ。',
		],
		[Language.Ko]: [
			'리더라고 불리는 1마리와\n멤버라고 불리는 5마리로 이루어져 있다.\n리더의 명령은 절대적이다.',
			'6마리가 1마리의 포켓몬이다.\n대열을 바꿔가며\n팀워크로 싸운다.',
		],
		[Language.ZhHant]: [
			'列陣兵由１個頭頭\n和５個跟班組成。\n頭頭的命令不可違抗。',
			'６隻為一體的寶可夢。\n慣於團隊行動，會一邊\n變換陣形一邊戰鬥。',
		],
		[Language.Fr]: [
			'C’est une entité unique composée d’un chef\net de cinq cadets. Ces derniers obéissent\nsans sourciller à leur supérieur hiérarchique.',
			'À six, ils représentent un Pokémon unique.\nIls peuvent changer de formation et comptent\nsur leur travail d’équipe en combat.',
		],
		[Language.De]: [
			'Dieses Pokémon besteht aus fünf Untergebenen\nund einem Anführer. Die Befehle des Anführers\nwerden nie in Frage gestellt.',
			'Sie bilden zu sechst ein Pokémon. Es kann im\nKampf seine Formation nach Belieben ändern\nund legt bemerkenswerte Teamarbeit an den Tag.',
		],
		[Language.Es]: [
			'Este Pokémon consta de cinco subalternos y un\nlíder, cuyas órdenes obedecen sin rechistar.',
			'Este Pokémon está formado por seis individuos\nque cambian de formación al luchar, haciendo\ngala de un notable espíritu de equipo.',
		],
		[Language.It]: [
			'Questo Pokémon è formato da un capo e da\ncinque sottoposti che obbediscono ciecamente\nai suoi ordini.',
			'Pokémon dallo spiccato spirito di squadra, è\nformato da 6 elementi che lottano assieme\ncambiando schieramento in base alla situazione.',
		],
		[Language.En]: [
			'Five of them are troopers, and one is the brass.\nThe brass’s orders are absolute.',
			'The six of them work together as one Pokémon.\nTeamwork is also their battle strategy, and they\nconstantly change their formation as they fight.',
		],
		[Language.Ja]: [
			'ヘイチョーと　呼ばれる　１匹と\nヘイと　呼ばれる　５匹で　ひとつ。\nヘイチョーの　命令は　絶対。',
			'６匹で　１匹の　ポケモン。\n隊列を　組み替えながら\nチームワークで　戦うのだ。',
		],
		[Language.ZhHans]: [
			'列阵兵由１个头头\n和５个跟班组成。\n头头的命令不可违抗。',
			'６只为一体的宝可梦。\n惯于团队行动，会一边\n变换阵形一边战斗。',
		],
	},
	[
		[
			Variety.Falinks,
			165,
			30,
			620,
			[Type.Fighting],
			{
				frontDefault: '3df61945.png',
				frontShiny: '682323ee.png',
				backDefault: '8df183d9.png',
				backShiny: '006b7df3.png',
			},
			{
				[Stat.Hp]: {baseStat: 65},
				[Stat.Attack]: {baseStat: 100, effort: 2},
				[Stat.Defense]: {baseStat: 100},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 60, effort: 1},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.Agility,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.Facade,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.BulkUp,
					Move.CloseCombat,
					Move.PoisonJab,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.ThroatChop,
					Move.SmartStrike,
					Move.Coaching,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					15,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Protect,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.RainDance,
					Move.SunnyDay,
					Move.PsychUp,
					Move.Uproar,
					Move.KnockOff,
					Move.Endeavor,
					Move.HighHorsepower,
					Move.Lunge,
					Move.BodyPress,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.UpperHand,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Reversal,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Endure,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Megahorn,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FirstImpression,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NoRetreat,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.Agility,
					Move.Screech,
					Move.FocusEnergy,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.Megahorn,
					Move.BeatUp,
					Move.Facade,
					Move.HelpingHand,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.BulkUp,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.PoisonJab,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.Round,
					Move.Retaliate,
					Move.ThroatChop,
					Move.SmartStrike,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Protect,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Reversal,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Endure,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Megahorn,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FirstImpression,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NoRetreat,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Coaching,
				),
			].flat(),
			[
				{
					ability: Ability.BattleArmor,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Defiant,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Falinks,
					PokemonFormBits.Default,
					{
						frontDefault: '3df61945.png',
						frontShiny: '682323ee.png',
						backDefault: '8df183d9.png',
						backShiny: '006b7df3.png',
					},
					[Type.Fighting],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Pincurchin,
	50,
	75,
	Color.Purple,
	[EggGroup.Water1, EggGroup.Indeterminate],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Tentacles,
	{
		[Language.JaHrkt]: ['バチンウニ'],
		[Language.Roomaji]: ['Bachinuni'],
		[Language.Ko]: ['찌르성게'],
		[Language.ZhHant]: ['啪嚓海膽'],
		[Language.Fr]: ['Wattapik'],
		[Language.De]: ['Britzigel'],
		[Language.Es]: ['Pincurchin'],
		[Language.It]: ['Pincurchin'],
		[Language.En]: ['Pincurchin'],
		[Language.Ja]: ['バチンウニ'],
		[Language.ZhHans]: ['啪嚓海胆'],
	},
	{
		[Language.JaHrkt]: ['うにポケモン'],
		[Language.Ko]: ['성게포켓몬'],
		[Language.ZhHant]: ['海膽寶可夢'],
		[Language.Fr]: ['Pokémon Oursin'],
		[Language.De]: ['Seeigel-Pokémon'],
		[Language.Es]: ['Pokémon Erizo de Mar'],
		[Language.It]: ['Pokémon Echino'],
		[Language.En]: ['Sea Urchin Pokémon'],
		[Language.Ja]: ['うにポケモン'],
		[Language.ZhHans]: ['海胆宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'トゲの　さきから　でんきを　はなつ。\nするどい　はで　いわに　ついた\nかいそうを　こそいで　たべる。',
			'トゲの　１ぽん　１ぽんに　でんきを\nたくわえる。　おれた　トゲでも\n３じかんは　ほうでんを　つづけるぞ。',
		],
		[Language.Ko]: [
			'가시 끝에서 전기를 발산한다.\n날카로운 이빨로 바위에 붙은\n해초를 갉아 먹는다.',
			'가시 하나하나에 전기를\n비축하고 있다. 부러진 가시도\n3시간 동안 방전을 계속한다.',
		],
		[Language.ZhHant]: [
			'能從刺的尖端放電。\n會用銳利的牙齒刮取\n附在岩石上的海藻來吃。',
			'每根刺裡都儲存著電力。\n即使是折斷的刺也至少\n能持續放電３小時。',
		],
		[Language.Fr]: [
			'Il libère de l’électricité depuis la pointe de ses\népines, et se nourrit des algues accrochées aux\nrochers en les arrachant avec ses dents aiguisées.',
			'Chacune de ses épines est chargée en électricité.\nS’il en perd une, celle-ci continue d’émettre\nun courant électrique pendant trois heures.',
		],
		[Language.De]: [
			'Aus den Spitzen seiner Stacheln setzt es\nElektrizität frei. Mit seinen scharfen Zähnen\nschabt es Algen von Steinen ab und frisst sie.',
			'In jedem einzelnen seiner Stacheln speichert es\nElektrizität. Selbst abgebrochene Stacheln sind\nnoch drei Stunden lang geladen.',
		],
		[Language.Es]: [
			'Libera electricidad por la punta de las púas.\nCon sus afilados dientes raspa las algas pegadas\na las rocas para ingerirlas.',
			'Acumula electricidad en cada una de sus púas.\nAunque estas se rompan, son capaces de seguir\ndescargando energía durante 3 h.',
		],
		[Language.It]: [
			'Sprigiona elettricità dalla punta dei suoi aculei.\nUsa i denti affilati per raschiare dalle rocce\nle alghe di cui si nutre.',
			'Ogni singolo aculeo è carico di elettricità.\nQuando se ne rompe uno, continua a emettere\nscariche elettriche per tre ore.',
		],
		[Language.En]: [
			'It feeds on seaweed, using its teeth to scrape it\noff rocks. Electric current flows from the tips of\nits spines.',
			'It stores electricity in each spine. Even if one gets\nbroken off, it still continues to emit electricity for\nat least three hours.',
		],
		[Language.Ja]: [
			'棘の　先から　電気を　放つ。\n鋭い　歯で　岩に　ついた\n海藻を　こそいで　食べる。',
			'棘の　１本　１本に　電気を\n蓄える。　折れた　棘でも\n３時間は　放電を　続けるぞ。',
		],
		[Language.ZhHans]: [
			'能从刺的尖端放电。\n会用锐利的牙齿刮取\n附在岩石上的海藻吃。',
			'每根刺里都储存着电力。\n即使是折断的刺也至少\n能连续放电３小时。',
		],
	},
	[
		[
			Variety.Pincurchin,
			152,
			3,
			10,
			[Type.Electric],
			{
				frontDefault: '068c6d19.png',
				frontShiny: '71837529.png',
				backDefault: '9e7db45b.png',
				backShiny: '03fbfd4e.png',
			},
			{
				[Stat.Hp]: {baseStat: 48},
				[Stat.Attack]: {baseStat: 101, effort: 2},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 91},
				[Stat.SpecialDefense]: {baseStat: 85},
				[Stat.Speed]: {baseStat: 15},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					15,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.HyperBeam,
					Move.Swift,
					Move.Curse,
					Move.PainSplit,
					Move.Charge,
					Move.GigaImpact,
					Move.ChargeBeam,
					Move.ElectroBall,
					Move.Electroweb,
					Move.WildCharge,
					Move.TeraBlast,
					Move.ChillingWater,
					Move.SupercellSlam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					5,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HydroPump,
					Move.Surf,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.Spikes,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Facade,
					Move.MuddyWater,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.Venoshock,
					Move.Scald,
					Move.Hex,
					Move.ElectricTerrain,
					Move.ThroatChop,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BubbleBeam,
					25,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Memento,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Acupressure,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ElectricTerrain,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ZingZap,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FuryAttack,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PinMissile,
					Move.HydroPump,
					Move.Surf,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.SelfDestruct,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Spikes,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Facade,
					Move.MuddyWater,
					Move.Brine,
					Move.Payback,
					Move.Assurance,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.Venoshock,
					Move.Round,
					Move.Scald,
					Move.Hex,
					Move.VenomDrench,
					Move.ElectricTerrain,
					Move.ThroatChop,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WaterGun,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BubbleBeam,
					25,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Peck,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Curse,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Memento,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Acupressure,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ElectricTerrain,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ZingZap,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.RisingVoltage,
				),
			].flat(),
			[
				{
					ability: Ability.LightningRod,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.ElectricSurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Pincurchin,
					PokemonFormBits.Default,
					{
						frontDefault: '068c6d19.png',
						frontShiny: '71837529.png',
						backDefault: '9e7db45b.png',
						backShiny: '03fbfd4e.png',
					},
					[Type.Electric],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Snom,
	50,
	190,
	Color.White,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.Squiggle,
	{
		[Language.JaHrkt]: ['ユキハミ'],
		[Language.Roomaji]: ['Yukihami'],
		[Language.Ko]: ['누니머기'],
		[Language.ZhHant]: ['雪吞蟲'],
		[Language.Fr]: ['Frissonille'],
		[Language.De]: ['Snomnom'],
		[Language.Es]: ['Snom'],
		[Language.It]: ['Snom'],
		[Language.En]: ['Snom'],
		[Language.Ja]: ['ユキハミ'],
		[Language.ZhHans]: ['雪吞虫'],
	},
	{
		[Language.JaHrkt]: ['いもむしポケモン'],
		[Language.Ko]: ['애벌레포켓몬'],
		[Language.ZhHant]: ['蟲寶寶寶可夢'],
		[Language.Fr]: ['Pokémon Ver'],
		[Language.De]: ['Wurm-Pokémon'],
		[Language.Es]: ['Pokémon Gusano'],
		[Language.It]: ['Pokémon Baco'],
		[Language.En]: ['Worm Pokémon'],
		[Language.Ja]: ['いもむしポケモン'],
		[Language.ZhHans]: ['虫宝宝宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'れいきの　まざった　いとを　はく。\nいとで　からだを　えだに　まきつけ\nつららの　ふりをして　ねむるのだ。',
			'じめんに　つもった　ゆきを　たべる。\nたくさん　たべれば　たべるほど\nせなかの　トゲは　りっぱに　そだつ。',
		],
		[Language.Ko]: [
			'냉기가 서린 실을 뿜는다.\n실로 몸을 가지에 휘감아서\n고드름인 척하고 잠든다.',
			'땅에 쌓인 눈을 먹는다.\n많이 먹으면 먹을수록\n등의 가시는 훌륭하게 자란다.',
		],
		[Language.ZhHant]: [
			'能吐出帶著冷氣的絲。\n會用絲把自己掛在樹枝上，\n一邊裝成冰柱一邊睡覺。',
			'會吃地面上的積雪。\n吃得越多，背上的\n刺就會長得越挺拔。',
		],
		[Language.Fr]: [
			'Il crache un fil gelé qu’il utilise pour s’accrocher\nà une branche : il dort ainsi en imitant\nune stalactite.',
			'Il se nourrit de la neige entassée sur le sol.\nPlus il en mange, plus les épines sur son dos\ngrandissent.',
		],
		[Language.De]: [
			'Es spinnt einen eiskalten Faden, mit dem es sich\nan einen Ast hängt. Dabei tut es so, als wäre es\nein Eiszapfen, um in Ruhe schlafen zu können.',
			'Es frisst den Schnee, der sich am Boden\nangesammelt hat. Je mehr es frisst, desto größer\nwerden die Stacheln auf seinem Rücken.',
		],
		[Language.Es]: [
			'Teje un hilo gélido que le permite aferrarse a\nlas ramas y simula ser un carámbano mientras\nduerme.',
			'Se nutre de la nieve acumulada en el terreno.\nCuanta más ingiere, más imponentes se vuelven\nlas púas que presenta en el lomo.',
		],
		[Language.It]: [
			'Si assicura a un ramo con il filo gelido che\nproduce dalla bocca e dorme fingendosi\nun ghiacciolo.',
			'Si nutre della neve accumulatasi sul terreno.\nPiù ne mangia, più gli aculei sul suo dorso\ndiventano grandi.',
		],
		[Language.En]: [
			'It spits out thread imbued with a frigid sort of\nenergy and uses it to tie its body to branches,\ndisguising itself as an icicle while it sleeps.',
			'It eats snow that piles up on the ground.\nThe more snow it eats, the bigger and more\nimpressive the spikes on its back grow.',
		],
		[Language.Ja]: [
			'冷気の　混ざった　糸を　吐く。\n糸で　体を　枝に　巻きつけ\n氷柱の　振りをして　眠るのだ。',
			'地面に　積もった　雪を　食べる。\nたくさん　食べれば　食べるほど\n背中の　棘は　立派に　育つ。',
		],
		[Language.ZhHans]: [
			'能吐出带着冷气的丝。\n会用丝把自己挂在树枝上\n一边装成冰柱一边睡觉。',
			'会吃地面上的积雪。\n吃得越多，背上的\n刺就会长得越挺拔。',
		],
	},
	[
		[
			Variety.Snom,
			37,
			3,
			38,
			[Type.Ice, Type.Bug],
			{
				frontDefault: '23ca6ecf.png',
				frontShiny: 'c83dc359.png',
				backDefault: '2e6dfddd.png',
				backShiny: 'd9cf7c0d.png',
			},
			{
				[Stat.Hp]: {baseStat: 30},
				[Stat.Attack]: {baseStat: 25},
				[Stat.Defense]: {baseStat: 35},
				[Stat.SpecialAttack]: {baseStat: 45, effort: 1},
				[Stat.SpecialDefense]: {baseStat: 30},
				[Stat.Speed]: {baseStat: 20},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.IcyWind,
					Move.SleepTalk,
					Move.Facade,
					Move.IcicleSpear,
					Move.BugBuzz,
					Move.SkitterSmack,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.PowderSnow,
					Move.StruggleBug,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.MirrorCoat,
					Move.BugBite,
					Move.FairyWind,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BugBite,
					Move.StruggleBug,
					Move.Lunge,
					Move.TeraBlast,
					Move.Pounce,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.IcicleSpear,
					Move.BugBuzz,
					Move.Round,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.PowderSnow,
					Move.StruggleBug,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.MirrorCoat,
					Move.BugBite,
					Move.FairyWind,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.SkitterSmack,
				),
			].flat(),
			[
				{
					ability: Ability.ShieldDust,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.IceScales,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Snom,
					PokemonFormBits.Default,
					{
						frontDefault: '23ca6ecf.png',
						frontShiny: 'c83dc359.png',
						backDefault: '2e6dfddd.png',
						backShiny: 'd9cf7c0d.png',
					},
					[Type.Ice, Type.Bug],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Frosmoth,
	50,
	75,
	Color.White,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	20,
	GrowthRate.Medium,
	Shape.BugWings,
	{
		[Language.JaHrkt]: ['モスノウ'],
		[Language.Roomaji]: ['Mothnow'],
		[Language.Ko]: ['모스노우'],
		[Language.ZhHant]: ['雪絨蛾'],
		[Language.Fr]: ['Beldeneige'],
		[Language.De]: ['Mottineva'],
		[Language.Es]: ['Frosmoth'],
		[Language.It]: ['Frosmoth'],
		[Language.En]: ['Frosmoth'],
		[Language.Ja]: ['モスノウ'],
		[Language.ZhHans]: ['雪绒蛾'],
	},
	{
		[Language.JaHrkt]: ['こおりがポケモン'],
		[Language.Ko]: ['얼음나방포켓몬'],
		[Language.ZhHant]: ['冰蛾寶可夢'],
		[Language.Fr]: ['Pokémon Mite Givre'],
		[Language.De]: ['Eismotten-Pokémon'],
		[Language.Es]: ['Pokémon Polillahielo'],
		[Language.It]: ['Pokémon Gelofalena'],
		[Language.En]: ['Frost Moth Pokémon'],
		[Language.Ja]: ['こおりがポケモン'],
		[Language.ZhHans]: ['冰蛾宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'はねの　おんどは　マイナス１８０ど。\nれいきを　こめた　りんぷんを　ゆきの\nように　ふりまき　のやまを　とぶ。',
			'のやまを　あらすものには　ようしゃ\nしない。　つめたいはねで　とびまわり\nふぶきを　おこして　こらしめる。',
		],
		[Language.Ko]: [
			'날개의 온도는 영하 180도.\n냉기가 담긴 인분을 눈처럼\n흩뿌리며 산과 들을 날아다닌다.',
			'산과 들을 황폐하게 만들면 용서하지 않는다.\n차가운 날개로 날아다니며\n눈보라를 일으켜 응징한다.',
		],
		[Language.ZhHant]: [
			'翅膀的溫度是零下１８０度。\n當牠飛過山野時，帶有冷氣的\n鱗粉會像下雪般地飄落下來。',
			'絕不放過破壞山野環境的人。\n會用冰冷的翅膀四處飛翔，\n製造出暴風雪來懲罰他們。',
		],
		[Language.Fr]: [
			'La température de ses ailes est de - 180 °C.\nQuand il vole, ses écailles gelées tombent\nsur le paysage comme des flocons de neige.',
			'Sans pitié pour les vandales, il bat ses ailes\ngelées pour provoquer des blizzards et punir\nquiconque ose souiller les champs et les collines.',
		],
		[Language.De]: [
			'Seine Flügel sind -180 ºC kalt. Während es über\nFelder und Berge fliegt, verstreut es mit Kälte\nversetzten Flügelstaub, der wie Schnee aussieht.',
			'Verwüstet jemand Felder und Berge, vergibt es\nihm niemals. Es bestraft den Täter, indem es mit\nseinen kalten Flügeln einen Schneesturm erzeugt.',
		],
		[Language.Es]: [
			'La temperatura de sus alas es de -180 °C.\nSobrevuela el campo esparciendo sus gélidas\nescamas, como si de nieve se tratase.',
			'No muestra la menor compasión con quien asole\nel campo: lo escarmienta batiendo sus gélidas\nalas para provocar una ventisca.',
		],
		[Language.It]: [
			'La temperatura delle sue ali è di -180 ºC.\nSorvola pianure e montagne lasciando cadere le\nsue scaglie gelide come fossero fiocchi di neve.',
			'Non ha alcuna pietà per chi danneggia la natura.\nVola in ricognizione e punisce i malfattori con\ntempeste di neve che crea con le sue fredde ali.',
		],
		[Language.En]: [
			'Icy scales fall from its wings like snow as it flies\nover fields and mountains. The temperature of its\nwings is less than −290 degrees Fahrenheit.',
			'It shows no mercy to any who desecrate fields\nand mountains. It will fly around on its icy wings,\ncausing a blizzard to chase offenders away.',
		],
		[Language.Ja]: [
			'はねの　温度は　マイナス１８０度。\n冷気を　込めた　りんぷんを　雪の\nように　ふりまき　野山を　飛ぶ。',
			'野山を　荒らすものには　容赦\nしない。　冷たいはねで　飛びまわり\n吹雪を　起こして　懲らしめる。',
		],
		[Language.ZhHans]: [
			'翅膀的温度为零下１８０度。\n当它飞过山野时，带有冷气的\n鳞粉会像下雪般地飘落下来。',
			'绝不放过破坏山野环境的人。\n会用冰冷的翅膀四处飞翔，\n制造出暴风雪来惩罚他们。',
		],
	},
	[
		[
			Variety.Frosmoth,
			166,
			13,
			420,
			[Type.Ice, Type.Bug],
			{
				frontDefault: 'd6c3b496.png',
				frontShiny: '9c66f39e.png',
				backDefault: 'a09d22cf.png',
				backShiny: '8023f899.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 65},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 125, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 65},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Swift,
					Move.IcyWind,
					Move.FeatherDance,
					Move.Tailwind,
					Move.BugBite,
					Move.StruggleBug,
					Move.Lunge,
					Move.TeraBlast,
					Move.IceSpinner,
					Move.Snowscape,
					Move.Pounce,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.LightScreen,
					Move.Reflect,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.HelpingHand,
					Move.Imprison,
					Move.WeatherBall,
					Move.IcicleSpear,
					Move.CalmMind,
					Move.UTurn,
					Move.AirSlash,
					Move.BugBuzz,
					Move.GigaImpact,
					Move.Avalanche,
					Move.Acrobatics,
					Move.Hurricane,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.SkitterSmack,
					Move.TripleAxel,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AuroraBeam,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StunSpore,
					4,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.PowderSnow,
					Move.Attract,
					Move.HelpingHand,
					Move.StruggleBug,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FeatherDance,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Tailwind,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BugBuzz,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Defog,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WideGuard,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.QuiverDance,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Infestation,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					36,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Snowscape,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					12,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.LightScreen,
					Move.Reflect,
					Move.LeechLife,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.GigaDrain,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.Hail,
					Move.Facade,
					Move.HelpingHand,
					Move.Imprison,
					Move.WeatherBall,
					Move.IcicleSpear,
					Move.CalmMind,
					Move.UTurn,
					Move.AirSlash,
					Move.BugBuzz,
					Move.GigaImpact,
					Move.Avalanche,
					Move.Round,
					Move.Acrobatics,
					Move.Hurricane,
					Move.PlayRough,
					Move.DazzlingGleam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuroraBeam,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StunSpore,
					4,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.PowderSnow,
					Move.IcyWind,
					Move.Attract,
					Move.HelpingHand,
					Move.StruggleBug,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hail,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FeatherDance,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Tailwind,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BugBuzz,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Defog,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WideGuard,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.QuiverDance,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Infestation,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SkitterSmack,
					Move.TripleAxel,
					Move.DualWingbeat,
				),
			].flat(),
			[
				{
					ability: Ability.ShieldDust,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.IceScales,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Frosmoth,
					PokemonFormBits.Default,
					{
						frontDefault: 'd6c3b496.png',
						frontShiny: '9c66f39e.png',
						backDefault: 'a09d22cf.png',
						backShiny: '8023f899.png',
					},
					[Type.Ice, Type.Bug],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Stonjourner,
	50,
	60,
	Color.Gray,
	[EggGroup.Mineral],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Slow,
	Shape.Legs,
	{
		[Language.JaHrkt]: ['イシヘンジン'],
		[Language.Roomaji]: ['Ishihengin'],
		[Language.Ko]: ['돌헨진'],
		[Language.ZhHant]: ['巨石丁'],
		[Language.Fr]: ['Dolman'],
		[Language.De]: ['Humanolith'],
		[Language.Es]: ['Stonjourner'],
		[Language.It]: ['Stonjourner'],
		[Language.En]: ['Stonjourner'],
		[Language.Ja]: ['イシヘンジン'],
		[Language.ZhHans]: ['巨石丁'],
	},
	{
		[Language.JaHrkt]: ['きょせきポケモン'],
		[Language.Ko]: ['거석포켓몬'],
		[Language.ZhHant]: ['巨石寶可夢'],
		[Language.Fr]: ['Pokémon Mégalithe'],
		[Language.De]: ['Megalithen-Pokémon'],
		[Language.Es]: ['Pokémon Megalito'],
		[Language.It]: ['Pokémon Megalito'],
		[Language.En]: ['Big Rock Pokémon'],
		[Language.Ja]: ['きょせきポケモン'],
		[Language.ZhHans]: ['巨石宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'だいそうげんの　なかで　たたずみ\nひの　かたむきを　ながめて　くらす。\nダイナミックな　けりわざが　とくい。',
			'１ねんに　いちど　きまった　にちじに\nどこから　ともなく　あつまり　わに\nなって　ならぶ　しゅうせいが　ある。',
		],
		[Language.Ko]: [
			'넓은 초원 한복판에 우뚝 서서\n해가 기우는 것을 바라보며 지낸다.\n다이내믹한 발차기 기술이 특기다.',
			'1년에 1번 정해진 일시에\n어디선가 모여 둥글게\n늘어서는 습성이 있다.',
		],
		[Language.ZhHant]: [
			'佇立在大草原上，\n每天眺望著日升日落。\n擅長強而有力的踢技。',
			'每年會有一天，牠們會在\n特定的時間突然出現，\n聚集在一起排成一個圈。',
		],
		[Language.Fr]: [
			'Il se tient immobile au milieu des plaines\net passe son temps à observer la course du soleil\ndans le ciel. Son jeu de jambes est phénoménal.',
			'Tous les ans à la même date, ils arrivent\nde nulle part pour se réunir en cercle.\nC’est une de leurs coutumes.',
		],
		[Language.De]: [
			'Es verweilt auf weitläufigen Wiesen und\nbeobachtet den Lauf der Sonne. Dynamische\nTrittangriffe sind sein Spezialgebiet.',
			'Sie haben die Angewohnheit, sich einmal im Jahr\nzu einer bestimmten Zeit wie aus dem Nichts zu\nversammeln und in einem Kreis aufzustellen.',
		],
		[Language.Es]: [
			'Pasa el tiempo observando inmóvil el recorrido\ndel sol sobre las extensas praderas que habita.\nSe especializa en técnicas de ágiles patadas.',
			'Una vez al año y en una fecha concreta, tienen la\ncostumbre de aparecer de la nada para reunirse\ny formar un círculo.',
		],
		[Language.It]: [
			'Trascorre le giornate nelle grandi praterie\nosservando immobile il passaggio del sole.\nLe mosse basate sui calci sono la sua specialità.',
			'Ogni anno, in un giorno stabilito, hanno l’usanza\ndi radunarsi giungendo da ogni dove per poi\ndisporsi in cerchio.',
		],
		[Language.En]: [
			'It stands in grasslands, watching the sun’s descent\nfrom zenith to horizon. This Pokémon has a talent\nfor delivering dynamic kicks.',
			'Once a year, on a specific date and at a specific\ntime, they gather out of nowhere and form up in\na circle.',
		],
		[Language.Ja]: [
			'大草原の　中で　たたずみ\n陽の　傾きを　眺めて　暮らす。\nダイナミックな　蹴り技が　得意。',
			'１年に　一度　きまった　日時に\nどこから　ともなく　集まり　輪に\nなって　並ぶ　習性が　ある。',
		],
		[Language.ZhHans]: [
			'伫立在大草原里，\n每天眺望着日升日落。\n擅长强而有力的踢技。',
			'每年会有一天，它们会在\n特定的时间突然出现，\n聚集在一起排成一个圈。',
		],
	},
	[
		[
			Variety.Stonjourner,
			165,
			25,
			5200,
			[Type.Rock],
			{
				frontDefault: '516c6647.png',
				frontShiny: 'f658f158.png',
				backDefault: 'b8a37a04.png',
				backShiny: 'e6877d59.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 125},
				[Stat.Defense]: {baseStat: 135, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 20},
				[Stat.SpecialDefense]: {baseStat: 20},
				[Stat.Speed]: {baseStat: 70},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MegaKick,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					42,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Sandstorm,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Imprison,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.EarthPower,
					Move.GigaImpact,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.Bulldoze,
					Move.HeatCrash,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.MeteorBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.LowKick,
					Move.Curse,
					Move.SunnyDay,
					Move.PsychUp,
					Move.Endeavor,
					Move.Gravity,
					Move.PowerGem,
					Move.SmackDown,
					Move.LowSweep,
					Move.HighHorsepower,
					Move.TeraBlast,
					Move.HardPress,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.RockThrow,
					Move.Block,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockSlide,
					36,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Curse,
					Move.AncientPower,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockTomb,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Gravity,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StoneEdge,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WideGuard,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeavySlam,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MegaKick,
					66,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Earthquake,
					Move.SelfDestruct,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Sandstorm,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.Facade,
					Move.Superpower,
					Move.Imprison,
					Move.RockTomb,
					Move.SandTomb,
					Move.IronDefense,
					Move.RockBlast,
					Move.Assurance,
					Move.EarthPower,
					Move.GigaImpact,
					Move.StoneEdge,
					Move.StealthRock,
					Move.WonderRoom,
					Move.HeavySlam,
					Move.Round,
					Move.Bulldoze,
					Move.HeatCrash,
					Move.BrutalSwing,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BodySlam,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.RockThrow,
					Move.Block,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockSlide,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Curse,
					Move.AncientPower,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockTomb,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Gravity,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockPolish,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StoneEdge,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.StealthRock,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WideGuard,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HeavySlam,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.MeteorBeam,
				),
			].flat(),
			[
				{
					ability: Ability.PowerSpot,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Stonjourner,
					PokemonFormBits.Default,
					{
						frontDefault: '516c6647.png',
						frontShiny: 'f658f158.png',
						backDefault: 'b8a37a04.png',
						backShiny: 'e6877d59.png',
					},
					[Type.Rock],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Eiscue,
	50,
	60,
	Color.Blue,
	[EggGroup.Water1, EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Slow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['コオリッポ'],
		[Language.Roomaji]: ['Korippo'],
		[Language.Ko]: ['빙큐보'],
		[Language.ZhHant]: ['冰砌鵝'],
		[Language.Fr]: ['Bekaglaçon'],
		[Language.De]: ['Kubuin'],
		[Language.Es]: ['Eiscue'],
		[Language.It]: ['Eiscue'],
		[Language.En]: ['Eiscue'],
		[Language.Ja]: ['コオリッポ'],
		[Language.ZhHans]: ['冰砌鹅'],
	},
	{
		[Language.JaHrkt]: ['ペンギンポケモン'],
		[Language.Ko]: ['펭귄포켓몬'],
		[Language.ZhHant]: ['企鵝寶可夢'],
		[Language.Fr]: ['Pokémon Pingouin'],
		[Language.De]: ['Pinguin-Pokémon'],
		[Language.Es]: ['Pokémon Pingüino'],
		[Language.It]: ['Pokémon Pinguino'],
		[Language.En]: ['Penguin Pokémon'],
		[Language.Ja]: ['ペンギンポケモン'],
		[Language.ZhHans]: ['企鹅宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'とても　さむい　ばしょから　ながれ\nながされ　やってきた。　こおりで\nかおを　つねに　ひやして　いるのだ。',
			'あつさに　よわい　かおを　いつも\nこおりで　ひやしている。　あたまの\nけを　うみに　たらして　エサをつる。',
		],
		[Language.Ko]: [
			'매우 추운 곳에서 흘러 흘러\n떠내려왔다. 항상 얼음으로\n얼굴을 식히고 있다.',
			'더위에 약해서 얼굴을 언제나\n얼음으로 식히고 있다. 머리의 털을\n바다에 늘어뜨리고 먹이를 낚는다.',
		],
		[Language.ZhHant]: [
			'從非常寒冷的地方漂流\n而來。隨時都用冰塊\n冰鎮著自己的臉。',
			'無論何時都用冰塊冰鎮著\n自己怕熱的臉。會把頭頂\n上的毛垂到海裡釣食物吃。',
		],
		[Language.Fr]: [
			'Originaire d’une contrée polaire, ce Pokémon\na débarqué dans la région ballotté par les flots.\nIl garde toujours la tête froide.',
			'Ne supportant pas la chaleur, il se rafraîchit\ntoujours la tête avec de la glace.\nIl pêche de quoi se nourrir à l’aide de son cheveu.',
		],
		[Language.De]: [
			'Es kam von einem extrem kalten Ort, indem es\nsich treiben ließ und schließlich angespült wurde.\nEs kühlt unablässig sein Gesicht mit Eis.',
			'Es kühlt sein Gesicht ständig mit Eis, da dieses\nHitze nicht gut verträgt. Das Haar auf dem Kopf\nhängt es ins Meer und angelt sich damit Beute.',
		],
		[Language.Es]: [
			'La corriente lo ha transportado hasta aquí desde\nun lugar sumamente gélido. Utiliza el hielo para\nmantener la cara refrigerada en todo momento.',
			'Se enfría constantemente la cara con hielo por\nsu escasa resistencia al calor. Utiliza el pelo de\nla cabeza para pescar en el mar.',
		],
		[Language.It]: [
			'È arrivato da un luogo freddissimo trasportato\ndalla corrente. Mantiene sempre fredda la\ntesta servendosi del ghiaccio.',
			'Raffredda costantemente la testa con del\nghiaccio perché non sopporta il caldo. Usa il\npelo che ha sul capo per pescare le sue prede.',
		],
		[Language.En]: [
			'It drifted in on the flow of ocean waters from a\nfrigid place. It keeps its head iced constantly to\nmake sure it stays nice and cold.',
			'This Pokémon keeps its heat-sensitive head cool\nwith ice. It fishes for its food, dangling its single\nhair into the sea to lure in prey.',
		],
		[Language.Ja]: [
			'とても　寒い　場所から　流れ\n流されて　やってきた。　氷で\n顔を　つねに　冷やして　いるのだ。',
			'暑さに　弱い　顔を　いつも\n氷で　冷やしている。　頭の\n毛を　海に　たらして　餌を釣る。',
		],
		[Language.ZhHans]: [
			'从非常寒冷的地方漂流\n而来。随时都用冰块\n冰镇着自己的脸。',
			'无论何时都用冰块冰镇着\n自己怕热的脸。会把头顶\n上的毛垂到海里钓食物吃。',
		],
	},
	[
		[
			Variety.EiscueIce,
			165,
			14,
			890,
			[Type.Ice],
			{
				frontDefault: 'e852b1cd.png',
				frontShiny: 'fe76eb32.png',
				backDefault: '2c91f9fa.png',
				backShiny: '5cd86266.png',
			},
			{
				[Stat.Hp]: {baseStat: 75},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 110, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.IcePunch,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.Agility,
					Move.Reflect,
					Move.Waterfall,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.Whirlpool,
					Move.Facade,
					Move.WeatherBall,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.PowderSnow,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.HyperBeam,
					Move.RainDance,
					Move.FeatherDance,
					Move.WaterPulse,
					Move.GigaImpact,
					Move.FlipTurn,
					Move.TeraBlast,
					Move.IceSpinner,
					Move.Snowscape,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DoubleEdge,
					Move.BellyDrum,
					Move.AquaRing,
					Move.HeadSmash,
					Move.Soak,
					Move.IcicleCrash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Surf,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WeatherBall,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Snowscape,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.IcePunch,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.Agility,
					Move.Reflect,
					Move.Waterfall,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Whirlpool,
					Move.Hail,
					Move.Facade,
					Move.Dive,
					Move.WeatherBall,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.Brine,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.Round,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.PowderSnow,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DoubleEdge,
					Move.BellyDrum,
					Move.AquaRing,
					Move.HeadSmash,
					Move.Soak,
					Move.IcicleCrash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Surf,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hail,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WeatherBall,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					48,
				),
			].flat(),
			[
				{
					ability: Ability.IceFace,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.EiscueIce,
					PokemonFormBits.Default,
					{
						frontDefault: 'e852b1cd.png',
						frontShiny: 'fe76eb32.png',
						backDefault: '2c91f9fa.png',
						backShiny: '5cd86266.png',
					},
					[Type.Ice],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Bekaglaçon Tête de Gel'],
						[Language.De]: ['Kubuin (Tiefkühlkopf)'],
						[Language.En]: ['Ice Eiscue'],
					},
					{
						[Language.JaHrkt]: ['アイスフェイス'],
						[Language.Ko]: ['아이스페이스'],
						[Language.ZhHant]: ['結凍頭'],
						[Language.Fr]: ['Tête de Gel'],
						[Language.De]: ['Tiefkühlkopf'],
						[Language.Es]: ['Cara de Hielo'],
						[Language.It]: ['Gelofaccia'],
						[Language.En]: ['Ice Face'],
						[Language.Ja]: ['アイスフェイス'],
						[Language.ZhHans]: ['结冻头'],
					},
					'ice',
				],
			],
		],
		[
			Variety.EiscueNoice,
			165,
			14,
			890,
			[Type.Ice],
			{
				frontDefault: '7b22e4ca.png',
				frontShiny: '71e11957.png',
				backDefault: '8499aa1d.png',
				backShiny: '7641b9f4.png',
			},
			{
				[Stat.Hp]: {baseStat: 75},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 70, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 130},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.IcePunch,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.Agility,
					Move.Reflect,
					Move.Waterfall,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.Whirlpool,
					Move.Facade,
					Move.WeatherBall,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.PowderSnow,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.HyperBeam,
					Move.RainDance,
					Move.FeatherDance,
					Move.WaterPulse,
					Move.GigaImpact,
					Move.FlipTurn,
					Move.TeraBlast,
					Move.IceSpinner,
					Move.Snowscape,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DoubleEdge,
					Move.BellyDrum,
					Move.AquaRing,
					Move.HeadSmash,
					Move.Soak,
					Move.IcicleCrash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Surf,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WeatherBall,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Snowscape,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.IcePunch,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.Agility,
					Move.Reflect,
					Move.Waterfall,
					Move.Amnesia,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Whirlpool,
					Move.Hail,
					Move.Facade,
					Move.Dive,
					Move.WeatherBall,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.Brine,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.Round,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.PowderSnow,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.DoubleEdge,
					Move.BellyDrum,
					Move.AquaRing,
					Move.HeadSmash,
					Move.Soak,
					Move.IcicleCrash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Surf,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Amnesia,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hail,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WeatherBall,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					48,
				),
			].flat(),
			[
				{
					ability: Ability.IceFace,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.EiscueNoice,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '7b22e4ca.png',
						frontShiny: '71e11957.png',
						backDefault: '8499aa1d.png',
						backShiny: '7641b9f4.png',
					},
					[Type.Ice],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Bekaglaçon Tête Dégel'],
						[Language.De]: ['Kubuin (Wohlfühlkopf)'],
						[Language.En]: ['Noice Eiscue'],
					},
					{
						[Language.JaHrkt]: ['ナイスフェイス'],
						[Language.Ko]: ['나이스페이스'],
						[Language.ZhHant]: ['解凍頭'],
						[Language.Fr]: ['Tête Dégel'],
						[Language.De]: ['Wohlfühlkopf'],
						[Language.Es]: ['Cara Deshielo'],
						[Language.It]: ['Liquefaccia'],
						[Language.En]: ['Noice Face'],
						[Language.Ja]: ['ナイスフェイス'],
						[Language.ZhHans]: ['解冻头'],
					},
					'noice',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Indeedee,
	140,
	30,
	Color.Purple,
	[EggGroup.Fairy],
	4,
	PokemonSpeciesBits.GenderDifferences,
	Generation.GenerationVIII,
	40,
	GrowthRate.Fast,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['イエッサン'],
		[Language.Roomaji]: ['Yessan'],
		[Language.Ko]: ['에써르'],
		[Language.ZhHant]: ['愛管侍'],
		[Language.Fr]: ['Wimessir'],
		[Language.De]: ['Servol'],
		[Language.Es]: ['Indeedee'],
		[Language.It]: ['Indeedee'],
		[Language.En]: ['Indeedee'],
		[Language.Ja]: ['イエッサン'],
		[Language.ZhHans]: ['爱管侍'],
	},
	{
		[Language.JaHrkt]: ['かんじょうポケモン'],
		[Language.Ko]: ['감정포켓몬'],
		[Language.ZhHant]: ['感情寶可夢'],
		[Language.Fr]: ['Pokémon Émotion'],
		[Language.De]: ['Emotions-Pokémon'],
		[Language.Es]: ['Pokémon Sensorio'],
		[Language.It]: ['Pokémon Emozione'],
		[Language.En]: ['Emotion Pokémon'],
		[Language.Ja]: ['かんじょうポケモン'],
		[Language.ZhHans]: ['感情宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'あたまの　ツノで　あいての　きもちを\nかんじとる。　オスは　じゅうしゃの\nように　あるじのそばで　せわをやく。',
			'ツノで　ちかくの　いきものの\nきもちを　かんじとる。　ポジティブな\nかんじょうが　ちからの　みなもと。',
		],
		[Language.Ko]: [
			'머리에 달린 뿔로 상대의 기분을\n감지한다. 수컷은 집사처럼\n주인의 곁에서 시중을 든다.',
			'뿔로 가까이 있는 생명체의\n기분을 읽는다. 긍정적인\n감정이 힘의 원천이다.',
		],
		[Language.ZhHant]: [
			'會用頭上的角讀取對方的心情。\n雄性就像管家一樣，\n在主人的身邊打理一切。',
			'能透過自己的角去\n感受附近生物的情感。\n正面情緒是牠的能量之源。',
		],
		[Language.Fr]: [
			'Il peut sentir les émotions d’autrui avec ses cornes.\nLe mâle reste aux côtés de son Dresseur pour\ns’occuper de lui, à l’image d’un domestique.',
			'Avec ses cornes, il peut percevoir les émotions\ndes êtres vivants alentour. Celles qui sont\npositives lui servent de source d’énergie.',
		],
		[Language.De]: [
			'Mit den Hörnern auf seinem Kopf erfasst es die\nGefühle seines Gegenübers. Männchen kümmern\nsich wie Bedienstete um ihren Trainer.',
			'Mit seinen Hörnern erfasst es die Gefühle von\nLebewesen, die sich in seiner Nähe aufhalten.\nPositive Gefühle sind die Quelle seiner Kraft.',
		],
		[Language.Es]: [
			'Percibe las emociones del objetivo con los\ncuernos de la cabeza. Los machos están atentos\na cualquier cosa que necesite su Entrenador.',
			'Con sus cuernos percibe las emociones de los\nseres vivos que se hallen cerca. Los sentimientos\npositivos constituyen su fuente de energía.',
		],
		[Language.It]: [
			'Le corna sulla testa gli permettono di percepire\nlo stato d’animo degli altri. Il maschio segue il\nsuo Allenatore ovunque e si prende cura di lui.',
			'Percepisce lo stato d’animo di chi gli sta intorno\ngrazie alle sue corna. I sentimenti positivi sono\nla sua fonte di energia.',
		],
		[Language.En]: [
			'It uses the horns on its head to sense the\nemotions of others. Males will act as valets for\nthose they serve, looking after their every need.',
			'Through its horns, it can pick up on the emotions\nof creatures around it. Positive emotions are the\nsource of its strength.',
		],
		[Language.Ja]: [
			'頭の　ツノで　相手の　気持ちを\n感じとる。　オスは　従者の\nように　主のそばで　世話を焼く。',
			'ツノで　近くの　生き物の\n気持ちを　感じとる。　ポジティブな\n感情が　力の　源。',
		],
		[Language.ZhHans]: [
			'会用头上的角读取对方的心情。\n雄性就像管家一样，\n在主人的身边打理一切。',
			'能通过自己的角去\n感受附近生物的情感。\n正面情绪是它的能量之源。',
		],
	},
	[
		[
			Variety.IndeedeeMale,
			166,
			9,
			280,
			[Type.Psychic, Type.Normal],
			{
				frontDefault: '8b6216ab.png',
				frontShiny: 'abb5fc56.png',
				frontFemale: '4030b849.png',
				frontShinyFemale: 'aba221f1.png',
				backDefault: 'a9387f77.png',
				backShiny: '2416b2a1.png',
				backFemale: '5e3dfe39.png',
				backShinyFemale: '75e2efe2.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 65},
				[Stat.Defense]: {baseStat: 55},
				[Stat.SpecialAttack]: {baseStat: 105, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 95},
				[Stat.Speed]: {baseStat: 95},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Psybeam,
					Move.PsychUp,
					Move.SkillSwap,
					Move.Gravity,
					Move.DisarmingVoice,
					Move.TeraBlast,
					Move.PsychicNoise,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					35,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psychic,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.ShadowBall,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.Imprison,
					Move.HyperVoice,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.PsychicTerrain,
					Move.ExpandingForce,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Encore,
					5,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.PsychUp,
					Move.FakeOut,
					Move.Extrasensory,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					40,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PowerSplit,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AfterYou,
					25,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.StoredPower,
					Move.PlayNice,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DisarmingVoice,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PsychicTerrain,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PayDay,
					Move.Psychic,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.TriAttack,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Encore,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.Imprison,
					Move.HyperVoice,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.PowerSwap,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.MysticalFire,
					Move.DazzlingGleam,
					Move.PsychicTerrain,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Encore,
					5,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.PsychUp,
					Move.FakeOut,
					Move.Extrasensory,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerSplit,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AfterYou,
					25,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.StoredPower,
					Move.PlayNice,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DisarmingVoice,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PsychicTerrain,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ExpandingForce,
					Move.TerrainPulse,
				),
			].flat(),
			[
				{
					ability: Ability.InnerFocus,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Synchronize,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.PsychicSurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.IndeedeeMale,
					PokemonFormBits.Default,
					{
						frontDefault: '8b6216ab.png',
						frontShiny: 'abb5fc56.png',
						frontFemale: '4030b849.png',
						frontShinyFemale: 'aba221f1.png',
						backDefault: 'a9387f77.png',
						backShiny: '2416b2a1.png',
						backFemale: '5e3dfe39.png',
						backShinyFemale: '75e2efe2.png',
					},
					[Type.Psychic, Type.Normal],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Wimessir Mâle'],
						[Language.De]: ['Servol ♂'],
						[Language.En]: ['Male Indeedee'],
					},
					{
						[Language.JaHrkt]: ['オスのすがた'],
						[Language.Ko]: ['수컷의 모습'],
						[Language.ZhHant]: ['雄性的樣子'],
						[Language.Fr]: ['Mâle'],
						[Language.De]: ['Männlich'],
						[Language.Es]: ['Macho'],
						[Language.It]: ['Maschio'],
						[Language.En]: ['Male'],
						[Language.Ja]: ['オスのすがた'],
						[Language.ZhHans]: ['雄性的样子'],
					},
					'male',
				],
			],
		],
		[
			Variety.IndeedeeFemale,
			166,
			9,
			280,
			[Type.Psychic, Type.Normal],
			{
				frontDefault: '67bb4a9c.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 55},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 95},
				[Stat.SpecialDefense]: {baseStat: 105, effort: 2},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Psybeam,
					Move.Charm,
					Move.PsychUp,
					Move.SkillSwap,
					Move.Gravity,
					Move.TrickRoom,
					Move.DisarmingVoice,
					Move.TeraBlast,
					Move.PsychicNoise,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					35,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Psychic,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.Imprison,
					Move.HyperVoice,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.ZenHeadbutt,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.PsychicTerrain,
					Move.ExpandingForce,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BatonPass,
					5,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.PsychUp,
					Move.FakeOut,
					Move.HealPulse,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FollowMe,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					40,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GuardSplit,
					45,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.StoredPower,
					Move.PlayNice,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DisarmingVoice,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PsychicTerrain,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PayDay,
					Move.Psychic,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.Imprison,
					Move.HyperVoice,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.GuardSwap,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.ZenHeadbutt,
					Move.Psyshock,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.DrainingKiss,
					Move.PlayRough,
					Move.MysticalFire,
					Move.DazzlingGleam,
					Move.PsychicTerrain,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psybeam,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BatonPass,
					5,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.PsychUp,
					Move.FakeOut,
					Move.PsychoShift,
					Move.HealPulse,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FollowMe,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GuardSplit,
					45,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.StoredPower,
					Move.PlayNice,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DisarmingVoice,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PsychicTerrain,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ExpandingForce,
					Move.TerrainPulse,
				),
			].flat(),
			[
				{
					ability: Ability.OwnTempo,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Synchronize,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.PsychicSurge,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.IndeedeeFemale,
					PokemonFormBits.Default,
					{
						frontDefault: '67bb4a9c.png',
					},
					[Type.Psychic, Type.Normal],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Wimessir Femelle'],
						[Language.De]: ['Servol ♀'],
						[Language.En]: ['Female Indeedee'],
					},
					{
						[Language.JaHrkt]: ['メスのすがた'],
						[Language.Ko]: ['암컷의 모습'],
						[Language.ZhHant]: ['雌性的樣子'],
						[Language.Fr]: ['Femelle'],
						[Language.De]: ['Weiblich'],
						[Language.Es]: ['Hembra'],
						[Language.It]: ['Femmina'],
						[Language.En]: ['Female'],
						[Language.Ja]: ['メスのすがた'],
						[Language.ZhHans]: ['雌性的样子'],
					},
					'female',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Morpeko,
	50,
	180,
	Color.Yellow,
	[EggGroup.Ground, EggGroup.Fairy],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	10,
	GrowthRate.Medium,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['モルペコ'],
		[Language.Roomaji]: ['Morpeko'],
		[Language.Ko]: ['모르페코'],
		[Language.ZhHant]: ['莫魯貝可'],
		[Language.Fr]: ['Morpeko'],
		[Language.De]: ['Morpeko'],
		[Language.Es]: ['Morpeko'],
		[Language.It]: ['Morpeko'],
		[Language.En]: ['Morpeko'],
		[Language.Ja]: ['モルペコ'],
		[Language.ZhHans]: ['莫鲁贝可'],
	},
	{
		[Language.JaHrkt]: ['にめんポケモン'],
		[Language.Ko]: ['양면포켓몬'],
		[Language.ZhHant]: ['雙面寶可夢'],
		[Language.Fr]: ['Pokémon Volt Face'],
		[Language.De]: ['Alter Ego-Pokémon'],
		[Language.Es]: ['Pokémon Dos Caras'],
		[Language.It]: ['Pokémon Doppiafaccia'],
		[Language.En]: ['Two-Sided Pokémon'],
		[Language.Ja]: ['にめんポケモン'],
		[Language.ZhHans]: ['双面宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'いつも　おなかを　すかせている。\nポケットの　ような　ふくろに　いれた\nタネを　たべて　でんきを　つくる。',
			'どんなに　たべても　すぐに　おなかが\nすく。　でんきで　ローストした\nタネを　たいせつに　もちあるく。',
		],
		[Language.Ko]: [
			'항상 배가 고프다.\n호주머니같이 생긴 주머니에 넣어둔\n씨앗을 먹어서 전기를 만든다.',
			'아무리 먹어도 금방 배가 고프다.\n전기로 구운 씨앗을\n소중히 갖고 다닌다.',
		],
		[Language.ZhHant]: [
			'總是餓著肚子。\n會吃掉裝在像口袋一樣的\n袋子裡的種子來發電。',
			'無論怎麼吃都會馬上肚子餓。\n十分珍愛自己用電烘烤過的\n種子，隨時都帶在身上。',
		],
		[Language.Fr]: [
			'Il a toujours un petit creux. Il grignote les graines\nqu’il a mises dans ses sortes de poches\npour produire de l’électricité.',
			'Il a beau manger, il a tout le temps faim.\nIl a toujours des graines grillées à l’électricité\nsur lui.',
		],
		[Language.De]: [
			'Dieses immerzu hungrige Pokémon frisst Samen,\ndie es in seinen beutelartigen Taschen verwahrt,\nund produziert so Elektrizität.',
			'Egal, wie viel es auch frisst, es wird sofort wieder\nhungrig. Es röstet Samen mit seiner Elektrizität\nund trägt diese dann vorsichtig mit sich herum.',
		],
		[Language.Es]: [
			'Siempre tiene hambre. Se nutre de las semillas\nque guarda en una suerte de bolsillos para\ngenerar electricidad.',
			'Siempre tiene apetito, sin importar lo mucho que\ncoma. Lleva con sumo cuidado las semillas que\nha tostado con su propia electricidad.',
		],
		[Language.It]: [
			'Ha costantemente fame. Si nutre dei semi che\ntiene nelle sue tasche per produrre elettricità.',
			'Indipendentemente da quanto mangia, è sempre\naffamato. Tiene molto ai semi che ha arrostito\ncon l’elettricità e li porta sempre con sé.',
		],
		[Language.En]: [
			'As it eats the seeds stored up in its pocket-like\npouches, this Pokémon is not just satisfying its\nconstant hunger. It’s also generating electricity.',
			'It carries electrically roasted seeds with it as if\nthey’re precious treasures. No matter how much\nit eats, it always gets hungry again in short order.',
		],
		[Language.Ja]: [
			'いつも　お腹を　すかせている。\nポケットの　ような　袋に　入れた\nタネを　食べて　電気を　つくる。',
			'どんなに　食べても　すぐに　お腹が\nすく。　電気で　ローストした\nタネを　大切に　持ち歩く。',
		],
		[Language.ZhHans]: [
			'总是饿着肚子。\n会吃掉装在像口袋一样的\n袋子里的种子来发电。',
			'无论怎么吃都会马上肚子饿。\n十分珍爱自己用电烘烤过的\n种子，随时都带在身上。',
		],
	},
	[
		[
			Variety.MorpekoFullBelly,
			153,
			3,
			30,
			[Type.Electric, Type.Dark],
			{
				frontDefault: '7a1bdbf1.png',
				frontShiny: 'be9ca396.png',
				backDefault: 'a8abeb9a.png',
				backShiny: '7bd53e1c.png',
			},
			{
				[Stat.Hp]: {baseStat: 58},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 58},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 58},
				[Stat.Speed]: {baseStat: 97, effort: 2},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderPunch,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.BrickBreak,
					Move.FakeTears,
					Move.BulletSeed,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.NastyPlot,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.ElectroBall,
					Move.FoulPlay,
					Move.VoltSwitch,
					Move.Electroweb,
					Move.WildCharge,
					Move.Snarl,
					Move.ElectricTerrain,
					Move.PsychicFangs,
					Move.StompingTantrum,
					Move.LashOut,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.SuperFang,
					Move.Reversal,
					Move.Spite,
					Move.BatonPass,
					Move.Charge,
					Move.KnockOff,
					Move.Endeavor,
					Move.ChargeBeam,
					Move.EerieImpulse,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					60,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					15,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SuperFang,
					Move.Swagger,
					Move.RapidSpin,
					Move.FakeOut,
					Move.Charge,
					Move.Tickle,
					Move.Quash,
					Move.PartingShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PowerTrip,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AuraWheel,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderPunch,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Revenge,
					Move.BrickBreak,
					Move.FakeTears,
					Move.BulletSeed,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.NastyPlot,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.ElectroBall,
					Move.FoulPlay,
					Move.Round,
					Move.VoltSwitch,
					Move.Electroweb,
					Move.WildCharge,
					Move.Snarl,
					Move.ElectricTerrain,
					Move.PsychicFangs,
					Move.StompingTantrum,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					60,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SuperFang,
					Move.Swagger,
					Move.RapidSpin,
					Move.FakeOut,
					Move.Charge,
					Move.Tickle,
					Move.Quash,
					Move.PartingShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerTrip,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuraWheel,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.RisingVoltage,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.HungerSwitch,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.MorpekoFullBelly,
					PokemonFormBits.Default,
					{
						frontDefault: '7a1bdbf1.png',
						frontShiny: 'be9ca396.png',
						backDefault: 'a8abeb9a.png',
						backShiny: '7bd53e1c.png',
					},
					[Type.Electric, Type.Dark],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Morpeko Rassasié'],
						[Language.De]: ['Morpeko (Pappsattmuster)'],
						[Language.En]: ['Full Belly Morpeko'],
					},
					{
						[Language.JaHrkt]: ['まんぷくもよう'],
						[Language.Ko]: ['배부른 모양'],
						[Language.ZhHant]: ['滿腹花紋'],
						[Language.Fr]: ['Mode Rassasié'],
						[Language.De]: ['Pappsattmuster'],
						[Language.Es]: ['Forma Saciada'],
						[Language.It]: ['Motivo Panciapiena'],
						[Language.En]: ['Full Belly Mode'],
						[Language.Ja]: ['まんぷくもよう'],
						[Language.ZhHans]: ['满腹花纹'],
					},
					'full-belly',
				],
			],
		],
		[
			Variety.MorpekoHangry,
			153,
			3,
			30,
			[Type.Electric, Type.Dark],
			{},
			{
				[Stat.Hp]: {baseStat: 58},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 58},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 58},
				[Stat.Speed]: {baseStat: 97, effort: 2},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderPunch,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.BrickBreak,
					Move.FakeTears,
					Move.BulletSeed,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.NastyPlot,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.ElectroBall,
					Move.FoulPlay,
					Move.VoltSwitch,
					Move.Electroweb,
					Move.WildCharge,
					Move.Snarl,
					Move.ElectricTerrain,
					Move.PsychicFangs,
					Move.StompingTantrum,
					Move.LashOut,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.SuperFang,
					Move.Reversal,
					Move.Spite,
					Move.BatonPass,
					Move.Charge,
					Move.KnockOff,
					Move.Endeavor,
					Move.ChargeBeam,
					Move.EerieImpulse,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					60,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					15,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SuperFang,
					Move.Swagger,
					Move.RapidSpin,
					Move.FakeOut,
					Move.Charge,
					Move.Tickle,
					Move.Quash,
					Move.PartingShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PowerTrip,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AuraWheel,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderPunch,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Revenge,
					Move.BrickBreak,
					Move.FakeTears,
					Move.BulletSeed,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.NastyPlot,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.ElectroBall,
					Move.FoulPlay,
					Move.Round,
					Move.VoltSwitch,
					Move.Electroweb,
					Move.WildCharge,
					Move.Snarl,
					Move.ElectricTerrain,
					Move.PsychicFangs,
					Move.StompingTantrum,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					60,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					15,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.SuperFang,
					Move.Swagger,
					Move.RapidSpin,
					Move.FakeOut,
					Move.Charge,
					Move.Tickle,
					Move.Quash,
					Move.PartingShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Spark,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					50,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					20,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulletSeed,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerTrip,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuraWheel,
					55,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.RisingVoltage,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.HungerSwitch,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.MorpekoHangry,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{},
					[Type.Electric, Type.Dark],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Morpeko Affamé'],
						[Language.De]: ['Morpeko (Kohldampf)'],
						[Language.En]: ['Hangry Morpeko'],
					},
					{
						[Language.JaHrkt]: ['はらぺこもよう'],
						[Language.Ko]: ['배고픈 모양'],
						[Language.ZhHant]: ['空腹花紋'],
						[Language.Fr]: ['Mode Affamé'],
						[Language.De]: ['Kohldampfmuster'],
						[Language.Es]: ['Forma Voraz'],
						[Language.It]: ['Motivo Panciavuota'],
						[Language.En]: ['Hangry Mode'],
						[Language.Ja]: ['はらぺこもよう'],
						[Language.ZhHans]: ['空腹花纹'],
					},
					'hangry',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Cufant,
	50,
	190,
	Color.Yellow,
	[EggGroup.Ground, EggGroup.Mineral],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ゾウドウ'],
		[Language.Roomaji]: ['Zoudou'],
		[Language.Ko]: ['끼리동'],
		[Language.ZhHant]: ['銅象'],
		[Language.Fr]: ['Charibari'],
		[Language.De]: ['Kupfanti'],
		[Language.Es]: ['Cufant'],
		[Language.It]: ['Cufant'],
		[Language.En]: ['Cufant'],
		[Language.Ja]: ['ゾウドウ'],
		[Language.ZhHans]: ['铜象'],
	},
	{
		[Language.JaHrkt]: ['どうぞうポケモン'],
		[Language.Ko]: ['동상포켓몬'],
		[Language.ZhHant]: ['像銅寶可夢'],
		[Language.Fr]: ['Pokémon Pachycuivre'],
		[Language.De]: ['Kupferfant-Pokémon'],
		[Language.Es]: ['Pokémon Broncefante'],
		[Language.It]: ['Pokémon Bronzofante'],
		[Language.En]: ['Copperderm Pokémon'],
		[Language.Ja]: ['どうぞうポケモン'],
		[Language.ZhHans]: ['像铜宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'５トンの　にもつを　もっても\nへいきな　ちからもち　ポケモン。\nはなを　つかって　つちを　ほる。',
			'ちからしごとなら　おまかせ。\nどうの　からだは　あめで　さび\nあざやかな　みどりに　かわる。',
		],
		[Language.Ko]: [
			'5톤의 짐을 실어도 문제없는\n힘이 장사인 포켓몬.\n코를 이용해서 땅을 판다.',
			'힘쓰는 일에 강하다.\n동으로 된 몸체는 비에 녹슬어\n선명한 녹색으로 변한다.',
		],
		[Language.ZhHant]: [
			'能輕鬆舉起重達５噸的\n貨物的大力士寶可夢。\n會用鼻子挖地。',
			'擅長需要力氣的工作。\n銅質的身體會因雨水而生鏽，\n轉變成鮮豔的綠色。',
		],
		[Language.Fr]: [
			'Ce Pokémon est assez costaud pour porter\ndes charges de cinq tonnes sans problème.\nIl utilise sa trompe pour creuser le sol.',
			'Les travaux physiques, c’est son affaire.\nSon corps de cuivre rouille sous la pluie\net prend une vive couleur verte.',
		],
		[Language.De]: [
			'Dieses Pokémon verfügt über eine Stärke, mit der\nes problemlos fünf Tonnen stemmen kann. Es\nnutzt seinen Rüssel, um in der Erde zu graben.',
			'Harte Knochenarbeit kann man problemlos ihm\nüberlassen. Sein Körper aus Kupfer rostet im\nRegen und nimmt eine leuchtend grüne Farbe an.',
		],
		[Language.Es]: [
			'Su constitución fornida le permite transportar\nsin inmutarse cargas de 5 toneladas. Utiliza la\ntrompa para excavar la tierra.',
			'Realiza tareas que requieren de esfuerzo físico,\nes su fuerte. Con la lluvia, su cuerpo de cobre se\noxida y adquiere una tonalidad verde intensa.',
		],
		[Language.It]: [
			'È un Pokémon molto forte, capace di trasportare\nfacilmente carichi di cinque tonnellate. Usa la\nproboscide per scavare la terra.',
			'I lavori pesanti sono il suo pane quotidiano.\nIl suo corpo di rame si ossida con la pioggia\ncolorandosi di un verde intenso.',
		],
		[Language.En]: [
			'It digs up the ground with its trunk. It’s also very\nstrong, being able to carry loads of over\nfive tons without any problem at all.',
			'If a job requires serious strength, this Pokémon\nwill excel at it. Its copper body tarnishes in the\nrain, turning a vibrant green color.',
		],
		[Language.Ja]: [
			'５トンの　荷物を　もっても\n平気な　力持ち　ポケモン。\n鼻を　使って　土を　掘る。',
			'力仕事なら　お任せ。\n銅の　体は　雨で　錆び\n鮮やかな　緑に　変わる。',
		],
		[Language.ZhHans]: [
			'能轻松举起重达５吨的\n货物的大力士宝可梦。\n会用鼻子挖地。',
			'擅长需要力气的工作。\n铜质的身体会因雨水而生锈，\n转变成鲜艳的绿色。',
		],
	},
	[
		[
			Variety.Cufant,
			66,
			12,
			1000,
			[Type.Steel],
			{
				frontDefault: 'e7534f19.png',
				frontShiny: '56fdf766.png',
				backDefault: '89b7903f.png',
				backShiny: '541ab57b.png',
			},
			{
				[Stat.Hp]: {baseStat: 72},
				[Stat.Attack]: {baseStat: 80, effort: 1},
				[Stat.Defense]: {baseStat: 49},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 49},
				[Stat.Speed]: {baseStat: 40},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Whirlwind,
					Move.Slam,
					Move.DoubleEdge,
					Move.Fissure,
					Move.DefenseCurl,
					Move.Curse,
					Move.Swagger,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.Dig,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.Fling,
					Move.EarthPower,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StealthRock,
					Move.Bulldoze,
					Move.PlayRough,
					Move.HighHorsepower,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.SteelBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Earthquake,
					Move.Curse,
					Move.Sandstorm,
					Move.Endeavor,
					Move.FlashCannon,
					Move.StoneEdge,
					Move.HeavySlam,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Strength,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Rollout,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HighHorsepower,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Whirlwind,
					Move.Slam,
					Move.DoubleEdge,
					Move.Fissure,
					Move.DefenseCurl,
					Move.Curse,
					Move.Swagger,
					Move.Belch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaKick,
					Move.BodySlam,
					Move.Dig,
					Move.Screech,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Superpower,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.Fling,
					Move.EarthPower,
					Move.ZenHeadbutt,
					Move.PowerWhip,
					Move.IronHead,
					Move.StealthRock,
					Move.Round,
					Move.Bulldoze,
					Move.WorkUp,
					Move.PlayRough,
					Move.HighHorsepower,
					Move.BrutalSwing,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Strength,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Rollout,
					5,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					10,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					45,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HighHorsepower,
					50,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SteelBeam,
					Move.SteelRoller,
				),
			].flat(),
			[
				{
					ability: Ability.SheerForce,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.HeavyMetal,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Cufant,
					PokemonFormBits.Default,
					{
						frontDefault: 'e7534f19.png',
						frontShiny: '56fdf766.png',
						backDefault: '89b7903f.png',
						backShiny: '541ab57b.png',
					},
					[Type.Steel],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Copperajah,
	50,
	90,
	Color.Green,
	[EggGroup.Ground, EggGroup.Mineral],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	25,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ダイオウドウ'],
		[Language.Roomaji]: ['Daioudou'],
		[Language.Ko]: ['대왕끼리동'],
		[Language.ZhHant]: ['大王銅象'],
		[Language.Fr]: ['Pachyradjah'],
		[Language.De]: ['Patinaraja'],
		[Language.Es]: ['Copperajah'],
		[Language.It]: ['Copperajah'],
		[Language.En]: ['Copperajah'],
		[Language.Ja]: ['ダイオウドウ'],
		[Language.ZhHans]: ['大王铜象'],
	},
	{
		[Language.JaHrkt]: ['どうぞうポケモン'],
		[Language.Ko]: ['동상포켓몬'],
		[Language.ZhHant]: ['像銅寶可夢'],
		[Language.Fr]: ['Pokémon Pachycuivre'],
		[Language.De]: ['Kupferfant-Pokémon'],
		[Language.Es]: ['Pokémon Broncefante'],
		[Language.It]: ['Pokémon Bronzofante'],
		[Language.En]: ['Copperderm Pokémon'],
		[Language.Ja]: ['どうぞうポケモン'],
		[Language.ZhHans]: ['像铜宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'みどりのひふは　みずにも　つよい。\nむかし　ほかのとちから　やってきて\nひとと　いっしょに　はたらいた。',
			'むれを　つくって　くらしている。\nはなの　あくりょくは　おおいわも\nこなごなに　くだくほど　つよい。',
		],
		[Language.Ko]: [
			'녹색 피부는 물에도 강하다.\n오래전에 다른 지방에서 오게 되어\n사람과 함께 일했다.',
			'무리를 지어 생활한다.\n코의 악력은 큰 바위도\n산산이 부술 정도로 강하다.',
		],
		[Language.ZhHant]: [
			'綠色的皮膚非常耐水。\n在很久以前從其他地區過來，\n之後便一直與人類一起工作。',
			'群居的寶可夢。\n鼻子的握力十分強勁，\n甚至能把大石頭弄得粉碎。',
		],
		[Language.Fr]: [
			'Sa peau verte résiste bien à l’eau.\nIl s’est installé dans la région il y a longtemps\net a travaillé en coopération avec les Hommes.',
			'Ces Pokémon vivent en troupeau.\nL’étreinte de leur trompe est si forte qu’elle suffit\nà réduire un rocher en poussière.',
		],
		[Language.De]: [
			'Seine grüne Haut ist wasserresistent. Es kam\nvor langer Zeit aus einer anderen Region und\nverrichtete mit den Menschen Arbeiten.',
			'Diese Pokémon leben in Herden. Drücken sie mit\nihren kräftigen Rüsseln zu, können sie selbst\nmassive Felsen zu Staub zermahlen.',
		],
		[Language.Es]: [
			'Su piel verdosa es resistente al agua. Proviene\nde tierras lejanas y presta ayuda a las personas\nen la realización de ciertos trabajos.',
			'Viven en manadas. La fuerza prensil de su trompa\nes tan extraordinaria que le permite hacer añicos\nincluso grandes rocas.',
		],
		[Language.It]: [
			'La sua pelle verde è resistente all’acqua.\nOriginario di un’altra regione, è giunto a Galar\nin passato per lavorare insieme agli esseri umani.',
			'Vive in gruppo. La stretta della sua proboscide\nè così forte da mandare in frantumi anche le\nrocce più grandi.',
		],
		[Language.En]: [
			'They came over from another region long\nago and worked together with humans.\nTheir green skin is resistant to water.',
			'These Pokémon live in herds. Their trunks have\nincredible grip strength, strong enough to crush\ngiant rocks into powder.',
		],
		[Language.Ja]: [
			'緑の皮膚は　水にも　強い。\n昔　ほかの土地から　やってきて\n人と　いっしょに　働いた。',
			'群れを　つくって　暮らしている。\n鼻の　握力は　大岩も\n粉々に　砕くほど　強い。',
		],
		[Language.ZhHans]: [
			'绿色的皮肤非常耐水。\n在很久以前从其他地区过来，\n之后便一直与人类一起工作。',
			'群居的宝可梦。\n鼻子的握力十分强劲，\n甚至能把大石头弄得粉碎。',
		],
	},
	[
		[
			Variety.Copperajah,
			175,
			30,
			6500,
			[Type.Steel],
			{
				frontDefault: '655fa621.png',
				frontShiny: '4a91f32d.png',
				backDefault: 'c4fe60e5.png',
				backShiny: '50aabd8b.png',
			},
			{
				[Stat.Hp]: {baseStat: 122},
				[Stat.Attack]: {baseStat: 130, effort: 2},
				[Stat.Defense]: {baseStat: 69},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 69},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.Rollout,
					Move.RockSmash,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.Fling,
					Move.EarthPower,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.FlashCannon,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.Bulldoze,
					Move.HeatCrash,
					Move.Snarl,
					Move.PlayRough,
					Move.HighHorsepower,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.SteelBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Curse,
					Move.Sandstorm,
					Move.KnockOff,
					Move.Endeavor,
					Move.SmackDown,
					Move.HeavySlam,
					Move.TeraBlast,
					Move.HardPress,
					Move.SupercellSlam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Strength,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					65,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeavySlam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					51,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HighHorsepower,
					58,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.Earthquake,
					Move.Dig,
					Move.Screech,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.MudShot,
					Move.RockBlast,
					Move.Payback,
					Move.Fling,
					Move.EarthPower,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.FlashCannon,
					Move.PowerWhip,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.Round,
					Move.Bulldoze,
					Move.WorkUp,
					Move.HeatCrash,
					Move.Snarl,
					Move.PlayRough,
					Move.HighHorsepower,
					Move.BrutalSwing,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.Growl,
					Move.Rollout,
					Move.RockSmash,
					Move.HeavySlam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Strength,
					37,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Dig,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					65,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					25,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HeavySlam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bulldoze,
					15,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					51,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HighHorsepower,
					58,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SteelBeam,
					Move.SteelRoller,
				),
			].flat(),
			[
				{
					ability: Ability.SheerForce,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.HeavyMetal,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Copperajah,
					PokemonFormBits.Default,
					{
						frontDefault: '655fa621.png',
						frontShiny: '4a91f32d.png',
						backDefault: 'c4fe60e5.png',
						backShiny: '50aabd8b.png',
					},
					[Type.Steel],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CopperajahGmax,
			175,
			230,
			10000,
			[Type.Steel],
			{
				frontDefault: 'c59fea62.png',
				frontShiny: '3846743e.png',
				backDefault: 'df112364.png',
				backShiny: 'da7d17f9.png',
			},
			{
				[Stat.Hp]: {baseStat: 122},
				[Stat.Attack]: {baseStat: 130, effort: 2},
				[Stat.Defense]: {baseStat: 69},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 69},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.SheerForce,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.HeavyMetal,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.CopperajahGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'c59fea62.png',
						frontShiny: '3846743e.png',
						backDefault: 'df112364.png',
						backShiny: 'da7d17f9.png',
					},
					[Type.Steel],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Pachyradjah Gigamax'],
						[Language.De]: ['Gigadynamax-Patinaraja'],
						[Language.En]: ['Gigantamax Copperajah'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Dracozolt,
	50,
	45,
	Color.Green,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	35,
	GrowthRate.Slow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['パッチラゴン'],
		[Language.Roomaji]: ['Patchiragon'],
		[Language.Ko]: ['파치래곤'],
		[Language.ZhHant]: ['雷鳥龍'],
		[Language.Fr]: ['Galvagon'],
		[Language.De]: ['Lectragon'],
		[Language.Es]: ['Dracozolt'],
		[Language.It]: ['Dracozolt'],
		[Language.En]: ['Dracozolt'],
		[Language.Ja]: ['パッチラゴン'],
		[Language.ZhHans]: ['雷鸟龙'],
	},
	{
		[Language.JaHrkt]: ['かせきポケモン'],
		[Language.Ko]: ['화석포켓몬'],
		[Language.ZhHant]: ['化石寶可夢'],
		[Language.Fr]: ['Pokémon Fossile'],
		[Language.De]: ['Fossil-Pokémon'],
		[Language.Es]: ['Pokémon Fósil'],
		[Language.It]: ['Pokémon Fossile'],
		[Language.En]: ['Fossil Pokémon'],
		[Language.Ja]: ['かせきポケモン'],
		[Language.ZhHans]: ['化石宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'こだいでは　たくましい　かはんしんで\nむてきだったが　エサの　しょくぶつを\nたべつくしてしまい　ぜつめつした。',
			'しっぽの　たくましい　きんにくで\nはつでんする。　かはんしんに　くらべ\nじょうはんしんが　ちいさすぎる。',
		],
		[Language.Ko]: [
			'고대에는 튼튼한 하반신 덕분에\n무적이었으나 먹이인 식물을\n모두 먹어버려서 멸종했다.',
			'꼬리의 억센 근육으로\n발전한다. 하반신에 비해\n상반신이 너무 작다.',
		],
		[Language.ZhHant]: [
			'在遠古時代曾憑藉自己強大的\n下半身而所向無敵，但因吃光了\n賴以為生的植物而滅絕了。',
			'會用尾部結實的肌肉\n發電。與下半身相比，\n上半身真的太小了。',
		],
		[Language.Fr]: [
			'Jadis, la partie inférieure de son corps musclé\nle rendait invincible, mais il s’est éteint après avoir\nmangé toutes les plantes dont il se nourrissait.',
			'Il envoie des décharges avec les muscles puissants\nde sa queue. La partie supérieure de son corps\nest trop petite par rapport à la partie inférieure.',
		],
		[Language.De]: [
			'Dank seines kräftigen Unterkörpers war es in\nder Urzeit unbesiegbar, doch es fraß seine\nPflanzennahrung restlos auf und starb daher aus.',
			'Mit den kräftigen Muskeln in seinem Schwanz\nerzeugt es Elektrizität. Sein Oberkörper ist im\nVergleich zu seinem Unterkörper zu klein.',
		],
		[Language.Es]: [
			'La robustez de su tren inferior lo hacía invencible\nen la antigüedad, pero se extinguió tras comerse\ntodas las plantas de las que se nutría.',
			'Produce electricidad con la robusta musculatura\nde la cola. El tamaño de la parte superior del\ncuerpo palidece en comparación con la inferior.',
		],
		[Language.It]: [
			'Nell’antichità era invincibile grazie alla possente\nparte inferiore del corpo, ma si è estinto perché\nha mangiato tutte le piante di cui si nutriva.',
			'Produce elettricità con i possenti muscoli della\ncoda. La parte superiore del suo corpo è troppo\npiccola se paragonata a quella inferiore.',
		],
		[Language.En]: [
			'In ancient times, it was unbeatable thanks to its\npowerful lower body, but it went extinct anyway\nafter it depleted all its plant-based food sources.',
			'The powerful muscles in its tail generate its\nelectricity. Compared to its lower body,\nits upper half is entirely too small.',
		],
		[Language.Ja]: [
			'古代では　たくましい　下半身で\n無敵だったが　餌の　植物を\n食べつくしてしまい　絶滅した。',
			'しっぽの　たくましい　筋肉で\n発電する。　下半身に　くらべ\n上半身が　小さすぎる。',
		],
		[Language.ZhHans]: [
			'在远古时代曾凭借自己强大的\n下半身而所向无敌，但因吃光了\n赖以为生的植物而灭绝了。',
			'会用尾部结实的肌肉\n发电。与下半身相比，\n上半身真的太小了。',
		],
	},
	[
		[
			Variety.Dracozolt,
			177,
			18,
			1900,
			[Type.Electric, Type.Dragon],
			{
				frontDefault: '42135d59.png',
				frontShiny: '11a42664.png',
				backDefault: 'be0edd89.png',
				backShiny: 'f0b811d1.png',
			},
			{
				[Stat.Hp]: {baseStat: 90},
				[Stat.Attack]: {baseStat: 100, effort: 2},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.LowKick,
					Move.FireSpin,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Earthquake,
					Move.FireBlast,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.IronTail,
					Move.RainDance,
					Move.SunnyDay,
					Move.Facade,
					Move.Taunt,
					Move.RockTomb,
					Move.DragonClaw,
					Move.RockBlast,
					Move.DragonPulse,
					Move.EarthPower,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.FireFang,
					Move.StoneEdge,
					Move.ElectroBall,
					Move.Round,
					Move.Bulldoze,
					Move.WildCharge,
					Move.HighHorsepower,
					Move.BrutalSwing,
					Move.StompingTantrum,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.ThunderShock,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					70,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					77,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.MeteorBeam,
					Move.RisingVoltage,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonTail,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BoltBeak,
					63,
				),
			].flat(),
			[
				{
					ability: Ability.VoltAbsorb,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Hustle,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SandRush,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Dracozolt,
					PokemonFormBits.Default,
					{
						frontDefault: '42135d59.png',
						frontShiny: '11a42664.png',
						backDefault: 'be0edd89.png',
						backShiny: 'f0b811d1.png',
					},
					[Type.Electric, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Arctozolt,
	50,
	45,
	Color.Blue,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	35,
	GrowthRate.Slow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['パッチルドン'],
		[Language.Roomaji]: ['Patchilldon'],
		[Language.Ko]: ['파치르돈'],
		[Language.ZhHant]: ['雷鳥海獸'],
		[Language.Fr]: ['Galvagla'],
		[Language.De]: ['Lecryodon'],
		[Language.Es]: ['Arctozolt'],
		[Language.It]: ['Arctozolt'],
		[Language.En]: ['Arctozolt'],
		[Language.Ja]: ['パッチルドン'],
		[Language.ZhHans]: ['雷鸟海兽'],
	},
	{
		[Language.JaHrkt]: ['かせきポケモン'],
		[Language.Ko]: ['화석포켓몬'],
		[Language.ZhHant]: ['化石寶可夢'],
		[Language.Fr]: ['Pokémon Fossile'],
		[Language.De]: ['Fossil-Pokémon'],
		[Language.Es]: ['Pokémon Fósil'],
		[Language.It]: ['Pokémon Fossile'],
		[Language.En]: ['Fossil Pokémon'],
		[Language.Ja]: ['かせきポケモン'],
		[Language.ZhHans]: ['化石宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'こおりづけの　じょうはんしんが\nふるえると　でんきが　つくられる。\nあるくことが　ひじょうに　にがて。',
			'こだいの　うみべで　くらし　エサを\nからだの　こおりで　ほぞん　できたが\nうごきが　にぶいため　ぜつめつした。',
		],
		[Language.Ko]: [
			'꽁꽁 언 상반신이 진동하면\n전기가 만들어진다.\n걷는 것이 매우 서툴다.',
			'고대의 해변에 살며 먹이를\n몸의 얼음으로 보존시켰지만\n움직임이 둔해 멸종하였다.',
		],
		[Language.ZhHant]: [
			'牠凍成冰的上半身\n在顫抖時可以產生電能。\n非常不擅長走路。',
			'曾經生活在古代的海邊，\n能用身體的冰來保存食物，\n但由於動作太遲緩而滅絕了。',
		],
		[Language.Fr]: [
			'Quand la partie supérieure de son corps, couverte\nde glace, frissonne, il produit de l’électricité.\nIl éprouve de grandes difficultés à marcher.',
			'Autrefois, il vivait en bord de mer et conservait\nsa nourriture dans la glace de son corps,\nmais il s’est éteint, car il avait du mal à se déplacer.',
		],
		[Language.De]: [
			'Durch das Zittern seines gefrorenen Oberkörpers\nentsteht Elektrizität. Das Laufen fällt ihm äußerst\nschwer.',
			'In der Urzeit lebte es am Strand und konnte mit\nseinem kalten Körper Futter haltbar machen.\nEs starb wegen seiner trägen Bewegungen aus.',
		],
		[Language.Es]: [
			'La parte superior del cuerpo está congelada y,\nal temblar, genera electricidad. Camina con suma\ndificultad.',
			'Antiguamente vivía en el mar y usaba el hielo del\ncuerpo para conservar los alimentos. Su extrema\nlentitud, sin embargo, lo condenó a la extinción.',
		],
		[Language.It]: [
			'La parte superiore del suo corpo è ghiacciata\ne quando trema produce elettricità. Cammina\ncon estrema difficoltà.',
			'Anticamente viveva in riva al mare conservando\nil cibo grazie al ghiaccio del suo corpo, ma si è\nestinto a causa della sua estrema lentezza.',
		],
		[Language.En]: [
			'The shaking of its freezing upper half is what\ngenerates its electricity. It has a hard time\nwalking around.',
			'This Pokémon lived on prehistoric seashores and\nwas able to preserve food with the ice on its\nbody. It went extinct because it moved so slowly.',
		],
		[Language.Ja]: [
			'氷漬けの　上半身が\n震えると　電気が　つくられる。\n歩くことが　非常に　苦手。',
			'古代の　海辺で　暮らし　餌を\n体の　氷で　保存できたが\n動きが　鈍いため　絶滅した。',
		],
		[Language.ZhHans]: [
			'它冻成冰的上半身\n在颤抖后可以产生电能。\n非常不擅长走路。',
			'曾经生活在古代的海边，\n能用身体的冰来保存食物，\n但由于动作太迟缓而灭绝了。',
		],
	},
	[
		[
			Variety.Arctozolt,
			177,
			23,
			1500,
			[Type.Electric, Type.Ice],
			{
				frontDefault: '25517b6f.png',
				frontShiny: '72be4be6.png',
				backDefault: 'b215ec65.png',
				backShiny: '1b3b76ad.png',
			},
			{
				[Stat.Hp]: {baseStat: 90},
				[Stat.Attack]: {baseStat: 100, effort: 2},
				[Stat.Defense]: {baseStat: 90},
				[Stat.SpecialAttack]: {baseStat: 90},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 55},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.LowKick,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.IronTail,
					Move.RainDance,
					Move.Hail,
					Move.Facade,
					Move.Taunt,
					Move.HyperVoice,
					Move.RockTomb,
					Move.IcicleSpear,
					Move.RockBlast,
					Move.Payback,
					Move.GigaImpact,
					Move.Avalanche,
					Move.ThunderFang,
					Move.IceFang,
					Move.StoneEdge,
					Move.ElectroBall,
					Move.Round,
					Move.Bulldoze,
					Move.WildCharge,
					Move.StompingTantrum,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slam,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					77,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.ThunderShock,
					Move.PowderSnow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Charge,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Pluck,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Avalanche,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Discharge,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EchoedVoice,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcicleCrash,
					70,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BoltBeak,
					63,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.MeteorBeam,
					Move.RisingVoltage,
				),
			].flat(),
			[
				{
					ability: Ability.VoltAbsorb,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Static,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SlushRush,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Arctozolt,
					PokemonFormBits.Default,
					{
						frontDefault: '25517b6f.png',
						frontShiny: '72be4be6.png',
						backDefault: 'b215ec65.png',
						backShiny: '1b3b76ad.png',
					},
					[Type.Electric, Type.Ice],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Dracovish,
	50,
	45,
	Color.Green,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	35,
	GrowthRate.Slow,
	Shape.Legs,
	{
		[Language.JaHrkt]: ['ウオノラゴン'],
		[Language.Roomaji]: ['Uonoragon'],
		[Language.Ko]: ['어래곤'],
		[Language.ZhHant]: ['鰓魚龍'],
		[Language.Fr]: ['Hydragon'],
		[Language.De]: ['Pescragon'],
		[Language.Es]: ['Dracovish'],
		[Language.It]: ['Dracovish'],
		[Language.En]: ['Dracovish'],
		[Language.Ja]: ['ウオノラゴン'],
		[Language.ZhHans]: ['鳃鱼龙'],
	},
	{
		[Language.JaHrkt]: ['かせきポケモン'],
		[Language.Ko]: ['화석포켓몬'],
		[Language.ZhHant]: ['化石寶可夢'],
		[Language.Fr]: ['Pokémon Fossile'],
		[Language.De]: ['Fossil-Pokémon'],
		[Language.Es]: ['Pokémon Fósil'],
		[Language.It]: ['Pokémon Fossile'],
		[Language.En]: ['Fossil Pokémon'],
		[Language.Ja]: ['かせきポケモン'],
		[Language.ZhHans]: ['化石宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ずばぬけた　きゃくりょくと　アゴの\nちからで　こだいでは　むてきだったが\nえものを　とりつくし　ぜつめつした。',
			'じそく６０キロを　こえる　じまんの\nきゃくりょくで　はしれるが\nすいちゅうでしか　こきゅうできない。',
		],
		[Language.Ko]: [
			'뛰어난 다리와 턱의 힘 덕분에\n고대에는 무적이었으나\n먹이를 모두 잡아먹어버려서 멸종했다.',
			'특유의 다릿심으로 시속 60km\n이상으로 달릴 수 있지만\n물속에서만 호흡할 수 있다.',
		],
		[Language.ZhHant]: [
			'超乎尋常的腳力和顎力讓牠在\n古代所向無敵。但由於捕盡獵物，\n導致牠們自己也滅絕了。',
			'雖然能用自豪的腳力\n以６０公里的時速奔跑，\n但是只能在水中呼吸。',
		],
		[Language.Fr]: [
			'La force de ses pattes et de ses mâchoires\nle rendait presque invincible, mais à trop chasser\nses proies, celles-ci ont disparu, et lui avec.',
			'Ses pattes robustes lui permettent de courir\nà plus de 60 km/h, mais en revanche, il ne peut\nrespirer que sous l’eau.',
		],
		[Language.De]: [
			'Dank der enormen Kraft seiner Beine und seines\nKiefers war es in der Urzeit unbesiegbar, doch es\nfing seine Beute restlos weg und starb daher aus.',
			'Seine außergewöhnlich kräftigen Beine lassen es\nzwar über 60 km/h schnell laufen, doch atmen\nkann es nur unter Wasser.',
		],
		[Language.Es]: [
			'Su excelente capacidad motriz y la fuerza de su\nmandíbula lo hacían antaño invencible, pero dar\ncaza a todas sus presas propició su extinción.',
			'Exhibe con orgullo su inmensa capacidad motriz,\nque le permite superar los 60 km/h, pero solo\npuede respirar bajo el agua.',
		],
		[Language.It]: [
			'Anticamente era invincibile grazie all’incredibile\npotenza delle sue gambe e delle sue mascelle,\nma si è estinto dopo aver esaurito tutte le prede.',
			'Vanta gambe molto potenti che gli permettono\ndi correre a una velocità superiore a 60 km/h,\nma può respirare solo sott’acqua.',
		],
		[Language.En]: [
			'Powerful legs and jaws made it the apex predator\nof its time. Its own overhunting of its prey was\nwhat drove it to extinction.',
			'Its mighty legs are capable of running at\nspeeds exceeding 40 mph, but this Pokémon\ncan’t breathe unless it’s underwater.',
		],
		[Language.Ja]: [
			'ずば抜けた　脚力と　顎の\n力で　古代では　無敵だったが\n獲物を　獲り尽くし　絶滅した。',
			'時速６０キロを　超える　自慢の\n脚力で　走れるが\n水中でしか　呼吸できない。',
		],
		[Language.ZhHans]: [
			'超乎寻常的脚力和颚力让它在\n古代所向无敌。但由于捕尽猎物，\n导致它们自己也灭绝了。',
			'虽然能用自豪的脚力\n以６０公里的时速奔跑，\n但是只能在水中呼吸。',
		],
	},
	[
		[
			Variety.Dracovish,
			177,
			23,
			2150,
			[Type.Water, Type.Dragon],
			{
				frontDefault: '266e987a.png',
				frontShiny: 'bc6f4752.png',
				backDefault: '27df24df.png',
				backShiny: 'd3a77fc5.png',
			},
			{
				[Stat.Hp]: {baseStat: 90},
				[Stat.Attack]: {baseStat: 90},
				[Stat.Defense]: {baseStat: 100, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 75},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaKick,
					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.HyperBeam,
					Move.LowKick,
					Move.Earthquake,
					Move.Waterfall,
					Move.LeechLife,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Facade,
					Move.Dive,
					Move.RockTomb,
					Move.RockBlast,
					Move.Brine,
					Move.DragonPulse,
					Move.EarthPower,
					Move.GigaImpact,
					Move.IceFang,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.Round,
					Move.Scald,
					Move.Bulldoze,
					Move.BrutalSwing,
					Move.PsychicFangs,
					Move.StompingTantrum,
					Move.Liquidation,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.WaterGun,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuperFang,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonBreath,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					70,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					77,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.MeteorBeam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrutalSwing,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FishiousRend,
					63,
				),
			].flat(),
			[
				{
					ability: Ability.WaterAbsorb,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.StrongJaw,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SandRush,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Dracovish,
					PokemonFormBits.Default,
					{
						frontDefault: '266e987a.png',
						frontShiny: 'bc6f4752.png',
						backDefault: '27df24df.png',
						backShiny: 'd3a77fc5.png',
					},
					[Type.Water, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Arctovish,
	50,
	45,
	Color.Blue,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	35,
	GrowthRate.Slow,
	Shape.Fish,
	{
		[Language.JaHrkt]: ['ウオチルドン'],
		[Language.Roomaji]: ['Uochilldon'],
		[Language.Ko]: ['어치르돈'],
		[Language.ZhHant]: ['鰓魚海獸'],
		[Language.Fr]: ['Hydragla'],
		[Language.De]: ['Pescryodon'],
		[Language.Es]: ['Arctovish'],
		[Language.It]: ['Arctovish'],
		[Language.En]: ['Arctovish'],
		[Language.Ja]: ['ウオチルドン'],
		[Language.ZhHans]: ['鳃鱼海兽'],
	},
	{
		[Language.JaHrkt]: ['かせきポケモン'],
		[Language.Ko]: ['화석포켓몬'],
		[Language.ZhHant]: ['化石寶可夢'],
		[Language.Fr]: ['Pokémon Fossile'],
		[Language.De]: ['Fossil-Pokémon'],
		[Language.Es]: ['Pokémon Fósil'],
		[Language.It]: ['Pokémon Fossile'],
		[Language.En]: ['Fossil Pokémon'],
		[Language.Ja]: ['かせきポケモン'],
		[Language.ZhHans]: ['化石宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'しゅういを　こおりつかせて　えものを\nつかまえるが　くちが　あたまの\nうえに　あるので　たべづらい。',
			'どんな　こうげきにも　きずつかない\nつらのかわを　もつが　こきゅうが\nふじゆうだったため　ぜつめつした。',
		],
		[Language.Ko]: [
			'주변을 꽁꽁 얼려서 먹이를\n잡지만 입이 머리 윗부분에\n있어서 먹기 힘들다.',
			'어떤 공격에도 상처 입지 않는\n얼굴 가죽을 가졌지만 호흡이\n자유롭지 않았던 탓에 멸종하였다.',
		],
		[Language.ZhHant]: [
			'雖然能透過凍結四周來捕捉獵物，\n但由於嘴長在頭頂上，\n所以吃起東西來不太方便。',
			'面部的皮膚無論受到什麼攻擊\n都不會受傷，但由於呼吸起來\n不方便而滅絕了。',
		],
		[Language.Fr]: [
			'Il gèle les alentours pour capturer ses proies,\nmais comme sa bouche est sur le dessus de\nsa tête, il a beaucoup de mal à les manger.',
			'Aucune attaque ne pouvait égratigner la peau\nde son visage, mais il s’est éteint, car il avait\ndu mal à respirer.',
		],
		[Language.De]: [
			'Es fängt seine Beute, indem es seine Umgebung\neinfriert, doch da sich sein Maul oben auf seinem\nKopf befindet, ist Fressen für es sehr umständlich.',
			'Kein Angriff konnte seine Gesichtshaut verletzen,\ndoch es war in seiner Atmung eingeschränkt und\nstarb daher aus.',
		],
		[Language.Es]: [
			'Atrapa a sus presas congelando su entorno, pero\nla ubicación de la boca encima de la cabeza le\ngenera dificultades para deglutirlas.',
			'Aunque la piel de su rostro era capaz de resistir\ncualquier ataque, su dificultad para respirar\nacabó provocando su extinción.',
		],
		[Language.It]: [
			'Cattura le prede congelando l’ambiente\ncircostante, ma avendo la bocca sopra\nla testa fatica a inghiottirle.',
			'Nessun attacco poteva scalfire la pelle del suo\nmuso, ma si è estinto perché aveva difficoltà\na respirare.',
		],
		[Language.En]: [
			'Though it’s able to capture prey by freezing its\nsurroundings, it has trouble eating the prey\nafterward because its mouth is on top of its head.',
			'The skin on its face is impervious to attack, but\nbreathing difficulties made this Pokémon go\nextinct anyway.',
		],
		[Language.Ja]: [
			'周囲を　凍りつかせて　獲物を\n捕まえるが　口が　頭の\n上に　あるので　食べづらい。',
			'どんな　攻撃にも　傷つかない\n面の皮を　もつが　呼吸が\n不自由だったため　絶滅した。',
		],
		[Language.ZhHans]: [
			'虽然能通过冻结四周来捕捉猎物，\n但由于嘴长在头顶上，\n所以吃起东西来不太方便。',
			'面部的皮肤无论受到什么攻击\n都不会受伤，但由于呼吸起来\n不方便而灭绝了。',
		],
	},
	[
		[
			Variety.Arctovish,
			177,
			20,
			1750,
			[Type.Water, Type.Ice],
			{
				frontDefault: '353d08f9.png',
				frontShiny: 'f14dac86.png',
				backDefault: '3d2a285e.png',
				backShiny: '5a1ff8c9.png',
			},
			{
				[Stat.Hp]: {baseStat: 90},
				[Stat.Attack]: {baseStat: 90},
				[Stat.Defense]: {baseStat: 100, effort: 2},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 90},
				[Stat.Speed]: {baseStat: 55},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Waterfall,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Crunch,
					Move.Whirlpool,
					Move.Hail,
					Move.Facade,
					Move.Dive,
					Move.RockTomb,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.RockBlast,
					Move.Brine,
					Move.GigaImpact,
					Move.Avalanche,
					Move.IceFang,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.Round,
					Move.PsychicFangs,
					Move.Liquidation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					28,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.WaterGun,
					Move.PowderSnow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Blizzard,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SuperFang,
					49,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Protect,
					7,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcyWind,
					14,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					21,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcicleCrash,
					70,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FreezeDry,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AuroraVeil,
					35,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FishiousRend,
					63,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.MeteorBeam,
				),
			].flat(),
			[
				{
					ability: Ability.WaterAbsorb,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.IceBody,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SlushRush,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Arctovish,
					PokemonFormBits.Default,
					{
						frontDefault: '353d08f9.png',
						frontShiny: 'f14dac86.png',
						backDefault: '3d2a285e.png',
						backShiny: '5a1ff8c9.png',
					},
					[Type.Water, Type.Ice],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Duraludon,
	50,
	45,
	Color.White,
	[EggGroup.Mineral, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	30,
	GrowthRate.Medium,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ジュラルドン'],
		[Language.Roomaji]: ['Duraludon'],
		[Language.Ko]: ['두랄루돈'],
		[Language.ZhHant]: ['鋁鋼龍'],
		[Language.Fr]: ['Duralugon'],
		[Language.De]: ['Duraludon'],
		[Language.Es]: ['Duraludon'],
		[Language.It]: ['Duraludon'],
		[Language.En]: ['Duraludon'],
		[Language.Ja]: ['ジュラルドン'],
		[Language.ZhHans]: ['铝钢龙'],
	},
	{
		[Language.JaHrkt]: ['ごうきんポケモン'],
		[Language.Ko]: ['합금포켓몬'],
		[Language.ZhHant]: ['合金寶可夢'],
		[Language.Fr]: ['Pokémon Alliage'],
		[Language.De]: ['Legierungs-Pokémon'],
		[Language.Es]: ['Pokémon Aleación'],
		[Language.It]: ['Pokémon Metallolega'],
		[Language.En]: ['Alloy Pokémon'],
		[Language.Ja]: ['ごうきんポケモン'],
		[Language.ZhHans]: ['合金宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'みがきあげた　きんぞくの　ような\nからだは　かるいうえに　かたいが\nさびやすいのが　けってんなのだ。',
			'とくしゅな　きんぞくの　からだは\nかるく　みのこなしは　ばつぐん。\nあめが　にがてで　どうくつに　すむ。',
		],
		[Language.Ko]: [
			'윤이 나는 금속과도 같은\n몸은 가벼우면서도 튼튼하지만\n녹슬기 쉽다는 것이 흠이다.',
			'금속으로 된 특수한 몸은\n가벼워서 몸놀림이 뛰어나다.\n비를 싫어해 동굴에 산다.',
		],
		[Language.ZhHant]: [
			'身體猶如打磨過的金屬，\n雖然輕而堅硬，卻有著\n容易生鏽的弱點。',
			'由特殊金屬構成的身體\n十分輕盈，能夠靈活地活動。\n不喜歡下雨，所以住在洞窟裡。',
		],
		[Language.Fr]: [
			'Son corps, semblable à du métal poli,\nallie légèreté et solidité.\nMalheureusement, il rouille facilement.',
			'Son corps, composé d’un métal spécial, est léger\net lui offre une excellente mobilité. Il est toutefois\nsensible à la pluie et vit donc dans les grottes.',
		],
		[Language.De]: [
			'Sein an aufpoliertes Metall erinnernder Körper ist\nnicht nur leicht, sondern auch robust. Er hat\njedoch den Nachteil, schnell zu rosten.',
			'Es ist sehr beweglich, weil sein Körper aus einem\nspeziellen, leichten Metall besteht. Da es Regen\nnicht mag, lebt es in Höhlen.',
		],
		[Language.Es]: [
			'Su cuerpo, similar a un metal pulido, es tan ligero\ncomo robusto. Sin embargo, tiene el defecto de\nque se oxida con facilidad.',
			'Hace gala de una agilidad extraordinaria, ya que\nsu cuerpo está compuesto de un metal especial.\nDetesta la lluvia, por lo que habita en cuevas.',
		],
		[Language.It]: [
			'Il suo corpo simile a metallo lucidato è leggero\ne resistente, ma ha il difetto di arrugginire\nfacilmente.',
			'Il suo corpo fatto di un metallo speciale è\nleggero e gli conferisce un’andatura impeccabile.\nVive nelle grotte perché odia la pioggia.',
		],
		[Language.En]: [
			'Its body resembles polished metal, and it’s both\nlightweight and strong. The only drawback is that\nit rusts easily.',
			'The special metal that composes its body is very\nlight, so this Pokémon has considerable agility.\nIt lives in caves because it dislikes the rain.',
		],
		[Language.Ja]: [
			'磨きあげた　金属の　ような\n体は　軽いうえに　硬いが\n錆びやすいのが　欠点なのだ。',
			'特殊な　金属の　体は\n軽く　身のこなしは　抜群。\n雨が　苦手で　洞窟に　棲む。',
		],
		[Language.ZhHans]: [
			'身体犹如打磨过的金属，\n虽然轻而坚硬，却有着\n容易生锈的弱点。',
			'由特殊金属构成的身体\n十分轻盈，能够灵活地活动。\n不喜欢下雨，所以住在洞窟里。',
		],
	},
	[
		[
			Variety.Duraludon,
			187,
			18,
			400,
			[Type.Steel, Type.Dragon],
			{
				frontDefault: '88eb249c.png',
				frontShiny: '5706a3b1.png',
				backDefault: '4b17e690.png',
				backShiny: '9ba382e0.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 115},
				[Stat.SpecialAttack]: {baseStat: 120, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.LightScreen,
					Move.Reflect,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.DragonClaw,
					Move.GyroBall,
					Move.DarkPulse,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.FlashCannon,
					Move.DracoMeteor,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.FoulPlay,
					Move.Snarl,
					Move.BodyPress,
					Move.BreakingSwipe,
					Move.SteelBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.MetalClaw,
					Move.MetalSound,
					Move.DragonTail,
					Move.TeraBlast,
					Move.DragonCheer,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.MetalClaw,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					66,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					42,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Slash,
					Move.MirrorCoat,
					Move.NightSlash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalSound,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonClaw,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalBurst,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FlashCannon,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonTail,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BreakingSwipe,
					24,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Outrage,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.DragonClaw,
					Move.GyroBall,
					Move.DarkPulse,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.FlashCannon,
					Move.IronHead,
					Move.StoneEdge,
					Move.StealthRock,
					Move.HeavySlam,
					Move.FoulPlay,
					Move.Round,
					Move.Snarl,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.BreakingSwipe,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.MetalClaw,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					66,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Slash,
					Move.MirrorCoat,
					Move.NightSlash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.RockSmash,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MetalSound,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonClaw,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MetalBurst,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FlashCannon,
					54,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.SteelBeam,
					Move.SteelRoller,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonTail,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BreakingSwipe,
					24,
				),
			].flat(),
			[
				{
					ability: Ability.LightMetal,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.HeavyMetal,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Stalwart,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Duraludon,
					PokemonFormBits.Default,
					{
						frontDefault: '88eb249c.png',
						frontShiny: '5706a3b1.png',
						backDefault: '4b17e690.png',
						backShiny: '9ba382e0.png',
					},
					[Type.Steel, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.DuraludonGmax,
			187,
			430,
			10000,
			[Type.Steel, Type.Dragon],
			{
				frontDefault: 'b535395f.png',
				frontShiny: '489acc03.png',
				backDefault: '883499a7.png',
				backShiny: '1d82bf24.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 95},
				[Stat.Defense]: {baseStat: 115},
				[Stat.SpecialAttack]: {baseStat: 120, effort: 2},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.LightMetal,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.HeavyMetal,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Stalwart,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.DuraludonGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: 'b535395f.png',
						frontShiny: '489acc03.png',
						backDefault: '883499a7.png',
						backShiny: '1d82bf24.png',
					},
					[Type.Steel, Type.Dragon],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Duralugon Gigamax'],
						[Language.De]: ['Gigadynamax-Duraludon'],
						[Language.En]: ['Gigantamax Duraludon'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Dreepy,
	50,
	45,
	Color.Green,
	[EggGroup.Indeterminate, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	40,
	GrowthRate.Slow,
	Shape.Squiggle,
	{
		[Language.JaHrkt]: ['ドラメシヤ'],
		[Language.Roomaji]: ['Dorameshiya'],
		[Language.Ko]: ['드라꼰'],
		[Language.ZhHant]: ['多龍梅西亞'],
		[Language.Fr]: ['Fantyrm'],
		[Language.De]: ['Grolldra'],
		[Language.Es]: ['Dreepy'],
		[Language.It]: ['Dreepy'],
		[Language.En]: ['Dreepy'],
		[Language.Ja]: ['ドラメシヤ'],
		[Language.ZhHans]: ['多龙梅西亚'],
	},
	{
		[Language.JaHrkt]: ['うらめしポケモン'],
		[Language.Ko]: ['원망포켓몬'],
		[Language.ZhHant]: ['哀怨寶可夢'],
		[Language.Fr]: ['Pokémon Âme Errante'],
		[Language.De]: ['Missgunst-Pokémon'],
		[Language.Es]: ['Pokémon Resentido'],
		[Language.It]: ['Pokémon Risentimento'],
		[Language.En]: ['Lingering Pokémon'],
		[Language.Ja]: ['うらめしポケモン'],
		[Language.ZhHans]: ['哀怨宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'こだいの　うみで　くらしていた。\nゴーストポケモンとして　よみがえり\nかつての　すみかを　さまよっている。',
			'１ぴきでは　こどもにも　まけるくらい\nひりきだが　なかまの　きょうりょくで\nきたえられ　しんかして　つよくなる。',
		],
		[Language.Ko]: [
			'고대의 바다에 살았다.\n고스트포켓몬으로 되살아나\n과거의 보금자리를 떠돌고 있다.',
			'1마리로는 아이에게도 질 정도로\n힘이 약하지만 동료의 협력으로\n단련하고 진화하면 강해진다.',
		],
		[Language.ZhHant]: [
			'曾經棲息在古代的大海。\n在重生為幽靈寶可夢後，\n會在昔日的住處徘徊。',
			'雖然單獨１隻弱得甚至敵不過小孩，\n但會和夥伴合作一起鍛鍊，\n透過進化而變得更強。',
		],
		[Language.Fr]: [
			'Revenu à la vie sous forme de Pokémon Spectre,\nil erre au-dessus de la mer dans laquelle il vivait\nautrefois.',
			'Seul, il est si faible qu’il ne saurait rivaliser avec\nun enfant, mais en coopérant avec ses semblables,\nil peut devenir assez fort pour évoluer.',
		],
		[Language.De]: [
			'In der Urzeit lebte es im Meer. Nun ist es als\nGeister-Pokémon wiedererwacht und irrt rastlos\ndurch seinen früheren Lebensraum.',
			'Alleine ist es sogar gegen ein Kind machtlos,\ndoch mit der Hilfe seiner Gefährten trainiert es,\nentwickelt sich und wird so stärker.',
		],
		[Language.Es]: [
			'Habitaba los mares en tiempos inmemoriales. Ha\nrevivido en forma de Pokémon de tipo Fantasma\npara vagar por su antigua morada.',
			'En solitario es tan débil que no sería rival ni para\nun niño, pero, al entrenarse con sus congéneres,\nevoluciona y se vuelve más fuerte.',
		],
		[Language.It]: [
			'Abitava i mari in tempi antichi. È rinato sotto\nforma di Pokémon di tipo Spettro e vaga per\nquella che un tempo era la sua dimora.',
			'Da solo è più debole di un bambino, ma se\nsi allena con l’aiuto dei suoi simili si evolve\ne diventa più forte.',
		],
		[Language.En]: [
			'After being reborn as a ghost Pokémon,\nDreepy wanders the areas it used to inhabit\nback when it was alive in prehistoric seas.',
			'If this weak Pokémon is by itself, a mere child\ncould defeat it. But if Dreepy has friends to help\nit train, it can evolve and become much stronger.',
		],
		[Language.Ja]: [
			'古代の　海で　暮らしていた。\nゴーストポケモンとして　よみがえり\nかつての　すみかを　さまよっている。',
			'１匹では　子どもにも　負けるくらい\n非力だが　仲間の　協力で\n鍛えられ　進化して　強くなる。',
		],
		[Language.ZhHans]: [
			'曾经栖息在古代的大海。\n在重生为幽灵宝可梦后，\n会在昔日的住处徘徊。',
			'虽然单独１只弱得甚至敌不过小孩，\n但会和伙伴合作一起锻炼，\n通过进化而变得更强。',
		],
	},
	[
		[
			Variety.Dreepy,
			54,
			5,
			20,
			[Type.Dragon, Type.Ghost],
			{
				frontDefault: '8d9b46f1.png',
				frontShiny: 'd96b9fa8.png',
				backDefault: '59bb0387.png',
				backShiny: '17478b56.png',
			},
			{
				[Stat.Hp]: {baseStat: 28},
				[Stat.Attack]: {baseStat: 60},
				[Stat.Defense]: {baseStat: 30},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 30},
				[Stat.Speed]: {baseStat: 82, effort: 1},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.Astonish,
					Move.Infestation,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Disable,
					Move.DoubleTeam,
					Move.ConfuseRay,
					Move.Curse,
					Move.SuckerPunch,
					Move.DragonTail,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Facade,
					Move.HelpingHand,
					Move.DracoMeteor,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ConfuseRay,
					Move.Curse,
					Move.DragonTail,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.Astonish,
					Move.Infestation,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Disable,
					Move.DoubleTeam,
					Move.ConfuseRay,
					Move.Curse,
					Move.Grudge,
					Move.SuckerPunch,
					Move.DragonTail,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.ThunderWave,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Facade,
					Move.HelpingHand,
					Move.Round,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DracoMeteor,
				),
			].flat(),
			[
				{
					ability: Ability.ClearBody,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Infiltrator,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.CursedBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Dreepy,
					PokemonFormBits.Default,
					{
						frontDefault: '8d9b46f1.png',
						frontShiny: 'd96b9fa8.png',
						backDefault: '59bb0387.png',
						backShiny: '17478b56.png',
					},
					[Type.Dragon, Type.Ghost],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Drakloak,
	50,
	45,
	Color.Green,
	[EggGroup.Indeterminate, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	40,
	GrowthRate.Slow,
	Shape.Arms,
	{
		[Language.JaHrkt]: ['ドロンチ'],
		[Language.Roomaji]: ['Doronch'],
		[Language.Ko]: ['드래런치'],
		[Language.ZhHant]: ['多龍奇'],
		[Language.Fr]: ['Dispareptil'],
		[Language.De]: ['Phandra'],
		[Language.Es]: ['Drakloak'],
		[Language.It]: ['Drakloak'],
		[Language.En]: ['Drakloak'],
		[Language.Ja]: ['ドロンチ'],
		[Language.ZhHans]: ['多龙奇'],
	},
	{
		[Language.JaHrkt]: ['せわやくポケモン'],
		[Language.Ko]: ['돌보미포켓몬'],
		[Language.ZhHant]: ['保姆寶可夢'],
		[Language.Fr]: ['Pokémon Baby-sitter'],
		[Language.De]: ['Betreuer-Pokémon'],
		[Language.Es]: ['Pokémon Cuidador'],
		[Language.It]: ['Pokémon Sostegno'],
		[Language.En]: ['Caretaker Pokémon'],
		[Language.Ja]: ['せわやくポケモン'],
		[Language.ZhHans]: ['保姆宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ひこう　そくどは　じそく２００キロ。\nドラメシヤと　いっしょに　たたかい\nぶじに　しんかするまで　せわをする。',
			'せわをする　ドラメシヤを　あたまに\nのせていないと　おちつかないので\nほかの　ポケモンを　のせようとする。',
		],
		[Language.Ko]: [
			'비행 속도는 시속 200km.\n드라꼰과 함께 싸우며\n무사히 진화할 때까지 돌본다.',
			'보살피는 드라꼰을 머리에\n태우지 않으면 진정하지 못하고\n다른 포켓몬을 태우려고 한다.',
		],
		[Language.ZhHant]: [
			'飛行速度為每小時２００公里。\n與多龍梅西亞一起戰鬥，\n到牠進化為止都會細心照顧。',
			'要是沒讓自己在照顧的多龍梅西亞\n乘在頭上就靜不下心來，甚至會\n因此試圖把別的寶可夢放到頭上。',
		],
		[Language.Fr]: [
			'Il vole à une vitesse de 200 km/h et se bat\naux côtés d’un Fantyrm, dont il prend soin\njusqu’à son évolution.',
			'Il prend soin du Fantyrm sur sa tête.\nQuand ce dernier n’est plus là, il panique\net tente de le remplacer par un autre Pokémon.',
		],
		[Language.De]: [
			'Beim Fliegen ist es bis zu 200 km/h schnell. Es\nkämpft gemeinsam mit Grolldra und kümmert\nsich bis zu dessen Entwicklung um es.',
			'Hat es kein Grolldra auf seinem Kopf, auf das es\naufpassen kann, wird es nervös. Dann versucht es,\nein anderes Pokémon auf seinen Kopf zu setzen.',
		],
		[Language.Es]: [
			'Vuela a una velocidad de 200 km/h. Lucha junto\na un Dreepy, al que cuida hasta el momento de\nsu evolución.',
			'Si no lleva un Dreepy del que cuidar encima de\nla cabeza, se intranquiliza y trata de sustituirlo\ncon otro Pokémon.',
		],
		[Language.It]: [
			'Vola a una velocità di 200 km/h. Lotta assieme\na Dreepy e se ne prende cura fino a quando\nnon si evolve.',
			'Se non ha un Dreepy sulla testa di cui prendersi\ncura, non riesce a stare tranquillo e cerca\ndi sostituirlo con altri Pokémon.',
		],
		[Language.En]: [
			'It’s capable of flying faster than 120 mph.\nIt battles alongside Dreepy and\ndotes on them until they successfully evolve.',
			'Without a Dreepy to place on its head and\ncare for, it gets so uneasy it’ll try to substitute\nany Pokémon it finds for the missing Dreepy.',
		],
		[Language.Ja]: [
			'飛行速度は　時速２００キロ。\nドラメシヤと　いっしょに　戦い\n無事に　進化するまで　世話をする。',
			'世話をする　ドラメシヤを　頭に\n乗せていないと　落ち着かないので\nほかの　ポケモンを　乗せようとする。',
		],
		[Language.ZhHans]: [
			'飞行速度为每小时２００公里。\n与多龙梅西亚一起战斗，\n到它进化为止都会细心照顾。',
			'要是没让自己在照顾的多龙梅西亚\n乘在头上就静不下心来，甚至会\n因此试图把别的宝可梦放到头上。',
		],
	},
	[
		[
			Variety.Drakloak,
			144,
			14,
			110,
			[Type.Dragon, Type.Ghost],
			{
				frontDefault: '17a6af56.png',
				frontShiny: 'b2456ec2.png',
				backDefault: '141f1d74.png',
				backShiny: 'be2961b6.png',
			},
			{
				[Stat.Hp]: {baseStat: 68},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 60},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 102, effort: 2},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					54,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.NightShade,
					Move.LightScreen,
					Move.Reflect,
					Move.Curse,
					Move.SunnyDay,
					Move.DragonPulse,
					Move.DragonTail,
					Move.TeraBlast,
					Move.Pounce,
					Move.DragonCheer,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					66,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.Astonish,
					Move.Infestation,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.HydroPump,
					Move.Surf,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.HelpingHand,
					Move.DragonDance,
					Move.UTurn,
					Move.DracoMeteor,
					Move.Hex,
					Move.Acrobatics,
					Move.PhantomForce,
					Move.PsychicFangs,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LockOn,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					61,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PhantomForce,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					66,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.Astonish,
					Move.DragonPulse,
					Move.Infestation,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Flamethrower,
					Move.HydroPump,
					Move.Surf,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.BeatUp,
					Move.WillOWisp,
					Move.Facade,
					Move.HelpingHand,
					Move.Dive,
					Move.DragonDance,
					Move.Brine,
					Move.UTurn,
					Move.Assurance,
					Move.DragonPulse,
					Move.Round,
					Move.AllySwitch,
					Move.Scald,
					Move.Hex,
					Move.Acrobatics,
					Move.PhantomForce,
					Move.PsychicFangs,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LockOn,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					61,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DracoMeteor,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PhantomForce,
					48,
				),
			].flat(),
			[
				{
					ability: Ability.ClearBody,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Infiltrator,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.CursedBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Drakloak,
					PokemonFormBits.Default,
					{
						frontDefault: '17a6af56.png',
						frontShiny: 'b2456ec2.png',
						backDefault: '141f1d74.png',
						backShiny: 'be2961b6.png',
					},
					[Type.Dragon, Type.Ghost],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Dragapult,
	50,
	45,
	Color.Green,
	[EggGroup.Indeterminate, EggGroup.Dragon],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	40,
	GrowthRate.Slow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ドラパルト'],
		[Language.Roomaji]: ['Dorapult'],
		[Language.Ko]: ['드래펄트'],
		[Language.ZhHant]: ['多龍巴魯托'],
		[Language.Fr]: ['Lanssorien'],
		[Language.De]: ['Katapuldra'],
		[Language.Es]: ['Dragapult'],
		[Language.It]: ['Dragapult'],
		[Language.En]: ['Dragapult'],
		[Language.Ja]: ['ドラパルト'],
		[Language.ZhHans]: ['多龙巴鲁托'],
	},
	{
		[Language.JaHrkt]: ['ステルスポケモン'],
		[Language.Ko]: ['스텔스포켓몬'],
		[Language.ZhHant]: ['隱形寶可夢'],
		[Language.Fr]: ['Pokémon Furtif'],
		[Language.De]: ['Tarnkünstler-Pokémon'],
		[Language.Es]: ['Pokémon Furtivo'],
		[Language.It]: ['Pokémon Furtivo'],
		[Language.En]: ['Stealth Pokémon'],
		[Language.Ja]: ['ステルスポケモン'],
		[Language.ZhHans]: ['隐形宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ツノの　あなに　ドラメシヤを　いれて\nくらす。　たたかいになると　マッハの\nスピードで　ドラメシヤを　とばす。',
			'ツノに　はいった　ドラメシヤは\nマッハの　スピードで　とばされるのを\nこころまちに　しているらしい。',
		],
		[Language.Ko]: [
			'뿔에 있는 구멍에 드라꼰을 넣고\n지낸다. 싸움이 시작되면 마하의\n스피드로 드라꼰을 날린다.',
			'뿔에 들어간 드라꼰은\n마하의 속도로 날려지기를\n기대하고 있는 것 같다.',
		],
		[Language.ZhHant]: [
			'讓多龍梅西亞住在自己角上的\n洞裡。戰鬥開始後會用音速\n將多龍梅西亞發射出去。',
			'牠角裡的多龍梅西亞\n似乎滿心期待著能被\n以音速發射出去。',
		],
		[Language.Fr]: [
			'Il vit en compagnie de Fantyrm qui logent\ndans les trous de ses cornes. Quand il passe\nà l’attaque, il les propulse à la vitesse du son.',
			'Il paraît que les Fantyrm installés dans ses cornes\nattendent impatiemment le moment où ils seront\npropulsés à la vitesse du son.',
		],
		[Language.De]: [
			'Es transportiert Grolldra in den Löchern an\nseinen Hörnern. Kommt es zum Kampf, schießt\nes diese mit Mach-Geschwindigkeit ab.',
			'Die Grolldra, die in seinen Hörnern sitzen,\nwarten angeblich voller Spannung darauf, mit\nMach-Geschwindigkeit abgefeuert zu werden.',
		],
		[Language.Es]: [
			'Vive en compañía de Dreepy, a los que hospeda\nen el interior de sus cuernos. Los dispara a\nvelocidad supersónica en combate.',
			'Al parecer, los Dreepy que residen en sus\ncuernos esperan con ilusión el momento de ser\npropulsados a velocidad supersónica.',
		],
		[Language.It]: [
			'Vive assieme ai Dreepy, che ospita all’interno\ndei buchi sulle sue corna. Quando lotta\nli espelle alla velocità del suono.',
			'I Dreepy che vivono nelle sue corna attendono\nansiosamente di essere sparati alla velocità\ndel suono.',
		],
		[Language.En]: [
			'When it isn’t battling, it keeps Dreepy in the\nholes on its horns. Once a fight starts, it launches\nthe Dreepy like supersonic missiles.',
			'Apparently the Dreepy inside Dragapult’s\nhorns eagerly look forward to being launched out\nat Mach speeds.',
		],
		[Language.Ja]: [
			'ツノの　穴に　ドラメシヤを　入れて\n暮らす。　戦いになると　マッハの\nスピードで　ドラメシヤを　飛ばす。',
			'ツノに　入った　ドラメシヤは\nマッハの　スピードで　飛ばされるのを\n心待ちに　しているらしい。',
		],
		[Language.ZhHans]: [
			'让多龙梅西亚住在自己角上的\n洞里。战斗开始后会用音速\n将多龙梅西亚发射出去。',
			'它角里的多龙梅西亚\n似乎满心期待着能被\n以音速发射出去。',
		],
	},
	[
		[
			Variety.Dragapult,
			300,
			30,
			500,
			[Type.Dragon, Type.Ghost],
			{
				frontDefault: '4c531f28.png',
				frontShiny: '447bff26.png',
				backDefault: 'fb35f8de.png',
				backShiny: 'dbcb2795.png',
			},
			{
				[Stat.Hp]: {baseStat: 88},
				[Stat.Attack]: {baseStat: 120},
				[Stat.Defense]: {baseStat: 75},
				[Stat.SpecialAttack]: {baseStat: 100},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 142, effort: 3},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.BodySlam,
					Move.Flamethrower,
					Move.HydroPump,
					Move.Surf,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.HelpingHand,
					Move.DragonClaw,
					Move.DragonDance,
					Move.UTurn,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.DracoMeteor,
					Move.Hex,
					Move.Acrobatics,
					Move.PhantomForce,
					Move.PsychicFangs,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					54,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.NightShade,
					Move.Curse,
					Move.SunnyDay,
					Move.DragonTail,
					Move.TeraBlast,
					Move.Pounce,
					Move.DragonCheer,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					70,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.DragonBreath,
					Move.Astonish,
					Move.Infestation,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LockOn,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					63,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PhantomForce,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonDarts,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.BodySlam,
					Move.Flamethrower,
					Move.HydroPump,
					Move.Surf,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.FireBlast,
					Move.Swift,
					Move.Rest,
					Move.TriAttack,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SteelWing,
					Move.Attract,
					Move.SleepTalk,
					Move.BatonPass,
					Move.ShadowBall,
					Move.BeatUp,
					Move.WillOWisp,
					Move.Facade,
					Move.HelpingHand,
					Move.Dive,
					Move.DragonClaw,
					Move.DragonDance,
					Move.Brine,
					Move.UTurn,
					Move.Assurance,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.Round,
					Move.AllySwitch,
					Move.Scald,
					Move.Hex,
					Move.Acrobatics,
					Move.PhantomForce,
					Move.PsychicFangs,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					70,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.DragonBreath,
					Move.Astonish,
					Move.SuckerPunch,
					Move.Infestation,
					Move.DragonDarts,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LockOn,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Assurance,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LastResort,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonRush,
					63,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.DracoMeteor,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PhantomForce,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDarts,
				),
			].flat(),
			[
				{
					ability: Ability.ClearBody,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Infiltrator,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.CursedBody,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Dragapult,
					PokemonFormBits.Default,
					{
						frontDefault: '4c531f28.png',
						frontShiny: '447bff26.png',
						backDefault: 'fb35f8de.png',
						backShiny: 'dbcb2795.png',
					},
					[Type.Dragon, Type.Ghost],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Zacian,
	0,
	10,
	Color.Blue,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ザシアン'],
		[Language.Roomaji]: ['Zacian'],
		[Language.Ko]: ['자시안'],
		[Language.ZhHant]: ['蒼響'],
		[Language.Fr]: ['Zacian'],
		[Language.De]: ['Zacian'],
		[Language.Es]: ['Zacian'],
		[Language.It]: ['Zacian'],
		[Language.En]: ['Zacian'],
		[Language.Ja]: ['ザシアン'],
		[Language.ZhHans]: ['苍响'],
	},
	{
		[Language.JaHrkt]: ['つわものポケモン'],
		[Language.Ko]: ['강자포켓몬'],
		[Language.ZhHant]: ['強者寶可夢'],
		[Language.Fr]: ['Pokémon Valeureux'],
		[Language.De]: ['Krieger-Pokémon'],
		[Language.Es]: ['Pokémon Guerrero'],
		[Language.It]: ['Pokémon Guerriero'],
		[Language.En]: ['Warrior Pokémon'],
		[Language.Ja]: ['つわものポケモン'],
		[Language.ZhHans]: ['强者宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'でんせつの　えいゆうと　よばれる\nポケモン。　きんぞくを　とりこみ\nぶぐに　へんかさせ　たたかう。',
			'ながい　ねむりに　ついていた\nザマゼンタの　あね　とも\nライバルとも　いわれる　ポケモン。',
		],
		[Language.Ko]: [
			'전설의 영웅이라고 불리는\n포켓몬. 금속을 흡수한 뒤\n무기로 변화시켜서 싸운다.',
			'오랜 세월 잠들어 있던\n자마젠타의 형제자매 또는\n라이벌로 불리는 포켓몬이다.',
		],
		[Language.ZhHant]: [
			'被稱為傳說中的英雄。\n能夠吸收金屬，將之\n轉化為武器來戰鬥。',
			'這隻寶可夢被認為是沉睡已久的\n藏瑪然特的姐姐，也有人\n認為牠們之間是勁敵關係。',
		],
		[Language.Fr]: [
			'Également surnommé « héros légendaire »,\nce Pokémon absorbe du métal et se change\nen arme pour se battre.',
			'On dit qu’il s’agit de la figure fraternelle\net du rival de Zamazenta, un Pokémon plongé\ndans un long sommeil.',
		],
		[Language.De]: [
			'Dieses Pokémon gilt als legendärer Held.\nEs nimmt Metall auf, wandelt dies in eine Waffe\num und kämpft damit.',
			'Man sagt, es sei wie ein älteres Geschwisterteil,\naber auch wie ein Rivale zu Zamazenta, welches\nin einen langen Schlaf gefallen war.',
		],
		[Language.Es]: [
			'Este Pokémon está considerado como un héroe\nde leyenda. Absorbe el metal para transformarlo\ny emplearlo como armamento.',
			'Hay quien lo considera una suerte de figura\nfraterna a la par que rival de Zamazenta,\nun Pokémon sumido en un profundo letargo.',
		],
		[Language.It]: [
			'È conosciuto come “l’eroe della leggenda”.\nAssorbe il metallo e lo trasforma per armarsi\ndurante la lotta.',
			'Viene considerato una figura fraterna e allo\nstesso tempo un rivale per Zamazenta,\nun Pokémon rimasto a lungo addormentato.',
		],
		[Language.En]: [
			'Known as a legendary hero, this Pokémon\nabsorbs metal particles, transforming them\ninto a weapon it uses to battle.',
			'This Pokémon has slumbered for many years.\nSome say it’s Zamazenta’s elder sister—others\nsay the two Pokémon are rivals.',
		],
		[Language.Ja]: [
			'伝説の　英雄と　呼ばれる\nポケモン。　金属を　取り込み\n武具に　変化させ　戦う。',
			'長い　眠りに　ついていた\nザマゼンタの　姉　とも\nライバルとも　いわれる　ポケモン。',
		],
		[Language.ZhHans]: [
			'被称为传说中的英雄。\n能够吸收金属，将之\n转化为武器来战斗。',
			'这只宝可梦被认为是沉睡已久的\n藏玛然特的姐姐，也有人\n认为它们之间是劲敌关系。',
		],
	},
	[
		[
			Variety.Zacian,
			335,
			28,
			1100,
			[Type.Fairy],
			{
				frontDefault: '135b14b0.png',
				frontShiny: '3ab130dc.png',
				backDefault: '2fb1ff08.png',
				backShiny: '0300d363.png',
			},
			{
				[Stat.Hp]: {baseStat: 92},
				[Stat.Attack]: {baseStat: 120},
				[Stat.Defense]: {baseStat: 115},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 115},
				[Stat.Speed]: {baseStat: 138, effort: 3},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					22,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.Dig,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.Imprison,
					Move.HyperVoice,
					Move.CloseCombat,
					Move.AirSlash,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.IronHead,
					Move.WildCharge,
					Move.Snarl,
					Move.PlayRough,
					Move.SolarBlade,
					Move.PsychicFangs,
					Move.SteelBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.MetalClaw,
					Move.IronDefense,
					Move.PoisonJab,
					Move.FlashCannon,
					Move.MistyTerrain,
					Move.DazzlingGleam,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.QuickGuard,
					Move.SacredSword,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NobleRoar,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					22,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.Dig,
					Move.Agility,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.IronTail,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.Revenge,
					Move.BrickBreak,
					Move.Imprison,
					Move.HyperVoice,
					Move.CloseCombat,
					Move.Assurance,
					Move.AirSlash,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.PsychoCut,
					Move.IronHead,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.WildCharge,
					Move.TailSlap,
					Move.Snarl,
					Move.PlayRough,
					Move.SolarBlade,
					Move.BrutalSwing,
					Move.PsychicFangs,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.QuickGuard,
					Move.SacredSword,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.SteelBeam,
				),
			].flat(),
			[
				{
					ability: Ability.IntrepidSword,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Zacian,
					PokemonFormBits.Default,
					{
						frontDefault: '135b14b0.png',
						frontShiny: '3ab130dc.png',
						backDefault: '2fb1ff08.png',
						backShiny: '0300d363.png',
					},
					[Type.Fairy],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Zacian'],
						[Language.De]: ['Zacian'],
						[Language.En]: ['Zacian'],
					},
					{
						[Language.JaHrkt]: ['れきせんのゆうしゃ'],
						[Language.Ko]: ['역전의 용사'],
						[Language.ZhHant]: ['百戰勇者'],
						[Language.Fr]: ['Héros Aguerri'],
						[Language.De]: ['Heldenhafter Krieger'],
						[Language.Es]: ['Guerrero Avezado'],
						[Language.It]: ['Eroe di Mille Lotte'],
						[Language.En]: ['Hero of Many Battles'],
						[Language.Ja]: ['れきせんのゆうしゃ'],
						[Language.ZhHans]: ['百战勇者'],
					},
				],
			],
		],
		[
			Variety.ZacianCrowned,
			360,
			28,
			3550,
			[Type.Fairy, Type.Steel],
			{
				frontDefault: '5cb7fb2e.png',
				frontShiny: 'bfac582e.png',
				backDefault: 'e161c92f.png',
				backShiny: '594f23fe.png',
			},
			{
				[Stat.Hp]: {baseStat: 92},
				[Stat.Attack]: {baseStat: 150},
				[Stat.Defense]: {baseStat: 115},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 115},
				[Stat.Speed]: {baseStat: 148, effort: 3},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					22,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.Dig,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.Imprison,
					Move.HyperVoice,
					Move.CloseCombat,
					Move.AirSlash,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.IronHead,
					Move.WildCharge,
					Move.Snarl,
					Move.PlayRough,
					Move.SolarBlade,
					Move.PsychicFangs,
					Move.SteelBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.MetalClaw,
					Move.IronDefense,
					Move.PoisonJab,
					Move.FlashCannon,
					Move.MistyTerrain,
					Move.DazzlingGleam,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.QuickGuard,
					Move.SacredSword,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NobleRoar,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					22,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.HyperBeam,
					Move.Dig,
					Move.Agility,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.IronTail,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.Revenge,
					Move.BrickBreak,
					Move.Imprison,
					Move.HyperVoice,
					Move.CloseCombat,
					Move.Assurance,
					Move.AirSlash,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.PsychoCut,
					Move.IronHead,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.WildCharge,
					Move.TailSlap,
					Move.Snarl,
					Move.PlayRough,
					Move.SolarBlade,
					Move.BrutalSwing,
					Move.PsychicFangs,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.QuickGuard,
					Move.SacredSword,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.SteelBeam,
				),
			].flat(),
			[
				{
					ability: Ability.IntrepidSword,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.ZacianCrowned,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '5cb7fb2e.png',
						frontShiny: 'bfac582e.png',
						backDefault: 'e161c92f.png',
						backShiny: '594f23fe.png',
					},
					[Type.Fairy, Type.Steel],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Zacian Épée Suprême'],
						[Language.De]: ['König Zacian'],
						[Language.En]: ['Crowned Zacian'],
					},
					{
						[Language.JaHrkt]: ['けんのおう'],
						[Language.Ko]: ['검왕'],
						[Language.ZhHant]: ['劍之王'],
						[Language.Fr]: ['Épée Suprême'],
						[Language.De]: ['König des Schwertes'],
						[Language.Es]: ['Espada Suprema'],
						[Language.It]: ['Re delle Spade'],
						[Language.En]: ['Crowned Sword'],
						[Language.Ja]: ['けんのおう'],
						[Language.ZhHans]: ['剑之王'],
					},
					'crowned',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Zamazenta,
	0,
	10,
	Color.Red,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ザマゼンタ'],
		[Language.Roomaji]: ['Zamazenta'],
		[Language.Ko]: ['자마젠타'],
		[Language.ZhHant]: ['藏瑪然特'],
		[Language.Fr]: ['Zamazenta'],
		[Language.De]: ['Zamazenta'],
		[Language.Es]: ['Zamazenta'],
		[Language.It]: ['Zamazenta'],
		[Language.En]: ['Zamazenta'],
		[Language.Ja]: ['ザマゼンタ'],
		[Language.ZhHans]: ['藏玛然特'],
	},
	{
		[Language.JaHrkt]: ['つわものポケモン'],
		[Language.Ko]: ['강자포켓몬'],
		[Language.ZhHant]: ['強者寶可夢'],
		[Language.Fr]: ['Pokémon Valeureux'],
		[Language.De]: ['Krieger-Pokémon'],
		[Language.Es]: ['Pokémon Guerrero'],
		[Language.It]: ['Pokémon Guerriero'],
		[Language.En]: ['Warrior Pokémon'],
		[Language.Ja]: ['つわものポケモン'],
		[Language.ZhHans]: ['强者宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ひとのおうと　ちからを　あわせ\nガラルを　すくった　ポケモン。\nきんぞくを　とりこみ　たたかう。',
			'せきぞうの　ような　すがたで\nわすれさられるほどの　あいだ\nねむりに　ついていた　ポケモン。',
		],
		[Language.Ko]: [
			'인간의 왕과 힘을 합쳐\n가라르를 구한 포켓몬.\n금속을 흡수해서 싸운다.',
			'석상 같은 모습으로\n잊혀질 정도의 세월 동안\n잠들어 있던 포켓몬이다.',
		],
		[Language.ZhHant]: [
			'與眾人之王協力\n拯救了伽勒爾的寶可夢。\n吸收金屬來進行戰鬥。',
			'以石像般的姿態陷入\n長久沉眠的寶可夢。\n幾乎就要被人們所遺忘。',
		],
		[Language.Fr]: [
			'Ce Pokémon sauva autrefois Galar en joignant\nses forces à celles du roi des Hommes.\nIl absorbe du métal quand il passe au combat.',
			'Ce Pokémon, changé en statue, est resté pétrifié\nsi longtemps qu’il a failli tomber dans l’oubli.',
		],
		[Language.De]: [
			'Dieses Pokémon vereinte seine Kräfte mit einem\nMenschenkönig und rettete die Galar-Region.\nEs nimmt Metall in sich auf und kämpft damit.',
			'Dieses Pokémon fiel in Form einer Steinstatue\nin solch einen langen Schlaf, dass es in\nVergessenheit geraten ist.',
		],
		[Language.Es]: [
			'Este Pokémon se erigió en salvador de Galar,\ntras unir fuerzas con un rey de los hombres.\nAbsorbe el metal para utilizarlo en combate.',
			'Con la apariencia de una estatua de piedra, este\nPokémon se sumió en un letargo tan profundo\nque acabó cayendo en el olvido.',
		],
		[Language.It]: [
			'Ha salvato Galar unendo le forze con il re\ndegli uomini. Assorbe il metallo e se ne serve\nper lottare.',
			'Questo Pokémon è rimasto addormentato sotto\nforma di statua così a lungo da venire\ncompletamente dimenticato.',
		],
		[Language.En]: [
			'In times past, it worked together with a king of\nthe people to save the Galar region. It absorbs\nmetal that it then uses in battle.',
			'This Pokémon slept for aeons while in the form of\na statue. It was asleep for so long, people forgot\nthat it ever existed.',
		],
		[Language.Ja]: [
			'人の王と　力を　あわせ\nガラルを　救った　ポケモン。\n金属を　取り込み　戦う。',
			'石像の　ような　姿で\n忘れ去られるほどの　あいだ\n眠りに　ついていた　ポケモン。',
		],
		[Language.ZhHans]: [
			'与众人之王协力\n拯救了伽勒尔的宝可梦。\n吸收金属来进行战斗。',
			'以石像般的姿态陷入\n长久沉眠的宝可梦。\n几乎就要被人们所遗忘。',
		],
	},
	[
		[
			Variety.Zamazenta,
			335,
			29,
			2100,
			[Type.Fighting],
			{
				frontDefault: 'ae72aefb.png',
				frontShiny: '6311cf73.png',
				backDefault: '562de9bd.png',
				backShiny: '26a0fd89.png',
			},
			{
				[Stat.Hp]: {baseStat: 92},
				[Stat.Attack]: {baseStat: 120},
				[Stat.Defense]: {baseStat: 115},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 115},
				[Stat.Speed]: {baseStat: 138, effort: 3},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Roar,
					Move.Sandstorm,
					Move.MetalClaw,
					Move.RainDance,
					Move.SunnyDay,
					Move.BrickBreak,
					Move.StoneEdge,
					Move.HeavySlam,
					Move.BodyPress,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.WideGuard,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Dig,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.Imprison,
					Move.HyperVoice,
					Move.IronDefense,
					Move.CloseCombat,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.FlashCannon,
					Move.IronHead,
					Move.WildCharge,
					Move.Snarl,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.PsychicFangs,
					Move.SteelBeam,
					Move.Coaching,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					22,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalBurst,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.MetalBurst,
					Move.WideGuard,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Dig,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Safeguard,
					Move.IronTail,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.Revenge,
					Move.Imprison,
					Move.HyperVoice,
					Move.IronDefense,
					Move.CloseCombat,
					Move.Payback,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.FlashCannon,
					Move.IronHead,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.WildCharge,
					Move.TailSlap,
					Move.Snarl,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.PsychicFangs,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SteelBeam,
					Move.Coaching,
				),
			].flat(),
			[
				{
					ability: Ability.DauntlessShield,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Zamazenta,
					PokemonFormBits.Default,
					{
						frontDefault: 'ae72aefb.png',
						frontShiny: '6311cf73.png',
						backDefault: '562de9bd.png',
						backShiny: '26a0fd89.png',
					},
					[Type.Fighting],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Zamazenta'],
						[Language.De]: ['Zamazenta'],
						[Language.En]: ['Zamazenta'],
					},
					{
						[Language.JaHrkt]: ['れきせんのゆうしゃ'],
						[Language.Ko]: ['역전의 용사'],
						[Language.ZhHant]: ['百戰勇者'],
						[Language.Fr]: ['Héros Aguerri'],
						[Language.De]: ['Heldenhafter Krieger'],
						[Language.Es]: ['Guerrero Avezado'],
						[Language.It]: ['Eroe di Mille Lotte'],
						[Language.En]: ['Hero of Many Battles'],
						[Language.Ja]: ['れきせんのゆうしゃ'],
						[Language.ZhHans]: ['百战勇者'],
					},
				],
			],
		],
		[
			Variety.ZamazentaCrowned,
			360,
			29,
			7850,
			[Type.Fighting, Type.Steel],
			{
				frontDefault: '512d21d2.png',
				frontShiny: 'e0745316.png',
				backDefault: 'e443dfe4.png',
				backShiny: 'a8a4855d.png',
			},
			{
				[Stat.Hp]: {baseStat: 92},
				[Stat.Attack]: {baseStat: 120},
				[Stat.Defense]: {baseStat: 140},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 140},
				[Stat.Speed]: {baseStat: 128, effort: 3},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.Roar,
					Move.Sandstorm,
					Move.MetalClaw,
					Move.RainDance,
					Move.SunnyDay,
					Move.BrickBreak,
					Move.StoneEdge,
					Move.HeavySlam,
					Move.BodyPress,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.WideGuard,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Dig,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.Imprison,
					Move.HyperVoice,
					Move.IronDefense,
					Move.CloseCombat,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.FlashCannon,
					Move.IronHead,
					Move.WildCharge,
					Move.Snarl,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.PsychicFangs,
					Move.SteelBeam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					22,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalBurst,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Bite,
					Move.QuickAttack,
					Move.MetalClaw,
					Move.Howl,
					Move.MetalBurst,
					Move.WideGuard,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Dig,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Safeguard,
					Move.IronTail,
					Move.Crunch,
					Move.Facade,
					Move.HelpingHand,
					Move.Revenge,
					Move.Imprison,
					Move.HyperVoice,
					Move.IronDefense,
					Move.CloseCombat,
					Move.Payback,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.IceFang,
					Move.FireFang,
					Move.FlashCannon,
					Move.IronHead,
					Move.Round,
					Move.Retaliate,
					Move.WorkUp,
					Move.WildCharge,
					Move.TailSlap,
					Move.Snarl,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.PsychicFangs,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					11,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					55,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					22,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					77,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaImpact,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					33,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					44,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.SteelBeam,
					Move.Coaching,
				),
			].flat(),
			[
				{
					ability: Ability.DauntlessShield,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.ZamazentaCrowned,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '512d21d2.png',
						frontShiny: 'e0745316.png',
						backDefault: 'e443dfe4.png',
						backShiny: 'a8a4855d.png',
					},
					[Type.Fighting, Type.Steel],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Zamazenta Bouclier Suprême'],
						[Language.De]: ['König Zamazenta'],
						[Language.En]: ['Crowned Zamazenta'],
					},
					{
						[Language.JaHrkt]: ['たてのおう'],
						[Language.Ko]: ['방패왕'],
						[Language.ZhHant]: ['盾之王'],
						[Language.Fr]: ['Bouclier Suprême'],
						[Language.De]: ['König des Schildes'],
						[Language.Es]: ['Escudo Supremo'],
						[Language.It]: ['Re degli Scudi'],
						[Language.En]: ['Crowned Shield'],
						[Language.Ja]: ['たてのおう'],
						[Language.ZhHans]: ['盾之王'],
					},
					'crowned',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Eternatus,
	0,
	255,
	Color.Purple,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Wings,
	{
		[Language.JaHrkt]: ['ムゲンダイナ'],
		[Language.Roomaji]: ['Mugendina'],
		[Language.Ko]: ['무한다이노'],
		[Language.ZhHant]: ['無極汰那'],
		[Language.Fr]: ['Éthernatos'],
		[Language.De]: ['Endynalos'],
		[Language.Es]: ['Eternatus'],
		[Language.It]: ['Eternatus'],
		[Language.En]: ['Eternatus'],
		[Language.Ja]: ['ムゲンダイナ'],
		[Language.ZhHans]: ['无极汰那'],
	},
	{
		[Language.JaHrkt]: ['キョダイポケモン'],
		[Language.Ko]: ['거대포켓몬'],
		[Language.ZhHant]: ['超極巨寶可夢'],
		[Language.Fr]: ['Pokémon Giga'],
		[Language.De]: ['Giganten-Pokémon'],
		[Language.Es]: ['Pokémon Gigantesco'],
		[Language.It]: ['Pokémon Gigante'],
		[Language.En]: ['Gigantic Pokémon'],
		[Language.Ja]: ['キョダイポケモン'],
		[Language.ZhHans]: ['超极巨宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'むねの　コアが　ガラルちほうの\nだいちから　わきだす　エネルギーを\nきゅうしゅうして　かつどうしている。',
			'２まんねんまえに　おちた　いんせきの\nなかに　いた。　ダイマックスの\nなぞに　かんけいしている　らしい。',
		],
		[Language.Ko]: [
			'가슴의 코어가 가라르지방의\n대지에서 솟아나는 에너지를\n흡수해서 활동한다.',
			'2만 년 전에 떨어진 운석\n안에 있었다. 다이맥스의\n수수께끼와 관련이 있는 듯하다.',
		],
		[Language.ZhHant]: [
			'會用胸部的核心吸收\n伽勒爾的大地湧出的能量，\n藉以保持自己的活力。',
			'來自於２萬年前墜落\n到地上的隕石之中。\n似乎與極巨化之謎有所關聯。',
		],
		[Language.Fr]: [
			'Il devient actif en absorbant l’énergie qui émerge\ndu sol de Galar grâce au noyau situé\nsur sa poitrine.',
			'Il se trouvait dans une météorite qui s’est écrasée\nil y a 20 000 ans. Il semble y avoir un lien\nentre ce Pokémon et le phénomène Dynamax.',
		],
		[Language.De]: [
			'Indem der Kern in seinem Brustkorb die Energie\nabsorbiert, die aus dem Boden der Galar-Region\nströmt, wird es aktiv.',
			'Es steckte in einem Meteorit, der vor 20 000\nJahren herabstürzte. Es scheint in Verbindung\nmit dem Dynamax-Phänomen zu stehen.',
		],
		[Language.Es]: [
			'Se alimenta de la energía que brota de la tierra\nde Galar absorbiéndola por el núcleo del pecho.',
			'Fue hallado en el interior de un meteorito caído\nhace 20 000 años. Por lo visto, está relacionado\ncon el misterio que rodea al fenómeno Dinamax.',
		],
		[Language.It]: [
			'Si alimenta attraverso il nucleo sul suo petto,\ncon cui assorbe l’energia emanata dalla terra\ndella regione di Galar.',
			'È giunto dallo spazio dentro un meteorite caduto\n20.000 anni fa. Sembra essere in qualche modo\ncollegato al mistero del fenomeno Dynamax.',
		],
		[Language.En]: [
			'The core on its chest absorbs energy emanating\nfrom the lands of the Galar region. This energy is\nwhat allows Eternatus to stay active.',
			'It was inside a meteorite that fell 20,000 years\nago. There seems to be a connection between\nthis Pokémon and the Dynamax phenomenon.',
		],
		[Language.Ja]: [
			'胸の　コアが　ガラル地方の\n大地から　涌きだす　エネルギーを\n吸収して　活動している。',
			'２万年前に　落ちた　隕石の\n中に　いた。　ダイマックスの\n謎に　関係している　らしい。',
		],
		[Language.ZhHans]: [
			'会用胸部的核心吸收\n伽勒尔地区涌出的能量，\n借以保持自己的活力。',
			'来自于２万年前坠落\n到地上的陨石之中。\n似乎与极巨化之谜有所关联。',
		],
	},
	[
		[
			Variety.Eternatus,
			345,
			200,
			9500,
			[Type.Poison, Type.Dragon],
			{
				frontDefault: '960bdd56.png',
				frontShiny: 'b9cb52a5.png',
				backDefault: '07432294.png',
				backShiny: 'b7a88b54.png',
			},
			{
				[Stat.Hp]: {baseStat: 140, effort: 3},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 145},
				[Stat.SpecialDefense]: {baseStat: 95},
				[Stat.Speed]: {baseStat: 130},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.SleepTalk,
					Move.ShadowBall,
					Move.Facade,
					Move.DragonDance,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.FlashCannon,
					Move.DracoMeteor,
					Move.Venoshock,
					Move.SludgeWave,
					Move.MeteorBeam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.FireSpin,
					Move.Toxic,
					Move.ConfuseRay,
					Move.FireBlast,
					Move.Outrage,
					Move.RainDance,
					Move.SunnyDay,
					Move.PoisonTail,
					Move.Gravity,
					Move.GunkShot,
					Move.DragonTail,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flamethrower,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					8,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Agility,
					Move.ConfuseRay,
					Move.PoisonTail,
					Move.DragonTail,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					72,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Outrage,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CosmicPower,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CrossPoison,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Venoshock,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DynamaxCannon,
					56,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Agility,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.SleepTalk,
					Move.ShadowBall,
					Move.Facade,
					Move.CosmicPower,
					Move.DragonDance,
					Move.Payback,
					Move.Assurance,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.FlashCannon,
					Move.CrossPoison,
					Move.Venoshock,
					Move.SludgeWave,
					Move.Round,
					Move.MysticalFire,
					Move.VenomDrench,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Flamethrower,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Agility,
					Move.ConfuseRay,
					Move.PoisonTail,
					Move.DragonTail,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CosmicPower,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.MeteorBeam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CrossPoison,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Venoshock,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DynamaxCannon,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Eternabeam,
					88,
				),
			].flat(),
			[
				{
					ability: Ability.Pressure,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Eternatus,
					PokemonFormBits.Default,
					{
						frontDefault: '960bdd56.png',
						frontShiny: 'b9cb52a5.png',
						backDefault: '07432294.png',
						backShiny: 'b7a88b54.png',
					},
					[Type.Poison, Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.EternatusEternamax,
			563,
			1000,
			0,
			[Type.Poison, Type.Dragon],
			{
				frontDefault: 'ce2d1b5c.png',
			},
			{
				[Stat.Hp]: {baseStat: 255, effort: 3},
				[Stat.Attack]: {baseStat: 115},
				[Stat.Defense]: {baseStat: 250},
				[Stat.SpecialAttack]: {baseStat: 125},
				[Stat.SpecialDefense]: {baseStat: 250},
				[Stat.Speed]: {baseStat: 130},
			},
			{},
			[
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.Flamethrower,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Agility,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Endure,
					Move.SleepTalk,
					Move.ShadowBall,
					Move.Facade,
					Move.CosmicPower,
					Move.DragonDance,
					Move.Payback,
					Move.Assurance,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.FlashCannon,
					Move.CrossPoison,
					Move.Venoshock,
					Move.SludgeWave,
					Move.Round,
					Move.MysticalFire,
					Move.VenomDrench,
					Move.BrutalSwing,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Flamethrower,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Agility,
					Move.ConfuseRay,
					Move.PoisonTail,
					Move.DragonTail,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Recover,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CosmicPower,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonPulse,
					40,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.MeteorBeam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CrossPoison,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Venoshock,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DynamaxCannon,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Eternabeam,
					88,
				),
			].flat(),
			[
				{
					ability: Ability.Pressure,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.EternatusEternamax,
					PokemonFormBits.Default,
					{
						frontDefault: 'ce2d1b5c.png',
					},
					[Type.Poison, Type.Dragon],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Éthernatos Infinimax'],
						[Language.De]: ['Unendynamax-Endynalos'],
						[Language.En]: ['Eternamax Eternatus'],
					},
					{
						[Language.JaHrkt]: ['ムゲンダイマックス'],
						[Language.Ko]: ['무한다이맥스'],
						[Language.ZhHant]: ['無極巨化'],
						[Language.Fr]: ['Infinimax'],
						[Language.De]: ['Unendynamax'],
						[Language.Es]: ['Dinamax Infinito'],
						[Language.It]: ['Dynamax Infinito'],
						[Language.En]: ['Eternamax'],
						[Language.Ja]: ['ムゲンダイマックス'],
						[Language.ZhHans]: ['无极巨化'],
					},
					'eternamax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Kubfu,
	50,
	3,
	Color.Gray,
	[EggGroup.NoEggs],
	1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ダクマ'],
		[Language.Roomaji]: ['Dakuma'],
		[Language.Ko]: ['치고마'],
		[Language.ZhHant]: ['熊徒弟'],
		[Language.Fr]: ['Wushours'],
		[Language.De]: ['Dakuma'],
		[Language.Es]: ['Kubfu'],
		[Language.It]: ['Kubfu'],
		[Language.En]: ['Kubfu'],
		[Language.Ja]: ['ダクマ'],
		[Language.ZhHans]: ['熊徒弟'],
	},
	{
		[Language.JaHrkt]: ['けんぽうポケモン'],
		[Language.Ko]: ['권법포켓몬'],
		[Language.ZhHant]: ['拳法寶可夢'],
		[Language.Fr]: ['Pokémon Kung-fu'],
		[Language.De]: ['Kung-Fu-Pokémon'],
		[Language.Es]: ['Pokémon Kung-fu'],
		[Language.It]: ['Pokémon Kung Fu'],
		[Language.En]: ['Wushu Pokémon'],
		[Language.Ja]: ['けんぽうポケモン'],
		[Language.ZhHans]: ['拳法宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'きびしい　たんれんを　つみ　わざを\nみがく。　たいとくした　わざによって\nしんかしたときに　すがたが　かわる。',
			'あたまの　しろく　ながい　たいもうを\nひっぱると　きあいが　たかまり\nたんでんから　パワーが　わきあがる。',
		],
		[Language.Ko]: [
			'혹독한 수련을 거듭하며 기술을\n갈고닦는다. 체득한 기술에 따라\n진화했을 때의 모습이 달라진다.',
			'머리의 하얗고 긴 털을\n잡아당기면 기세가 고조되어\n단전에서 파워가 끓어오른다.',
		],
		[Language.ZhHant]: [
			'藉由累積嚴苛的鍛鍊來\n磨練招式。進化後的樣子\n會根據牠領會的招式而不同。',
			'拉緊頭上又白又長的體毛\n就會變得氣勢高昂，\n並且由丹田湧出力量。',
		],
		[Language.Fr]: [
			'Il suit un entraînement rigoureux pour parfaire\nses techniques. La forme de son évolution\ndépend des capacités qu’il a assimilées.',
			'Lorsqu’il tire sur les longs poils blancs\nsur sa tête, il devient plus combatif et\nde l’énergie jaillit de sous son nombril.',
		],
		[Language.De]: [
			'Durch rigoroses Training perfektioniert es seine\nKampftechnik. Diese bestimmt, welche Form\nDakuma nach der Entwicklung annimmt.',
			'Zieht es an dem langen weißen Fell an seinem\nHinterkopf, steigert das seinen Kampfgeist und\naus seiner Körpermitte steigt Kraft empor.',
		],
		[Language.Es]: [
			'Perfecciona su técnica mediante una estricta\ndisciplina. Según la corriente marcial que siga,\nadoptará una forma u otra al evolucionar.',
			'Al tirar de los mechones blancos de la cabeza,\nacrecienta su espíritu luchador y empieza a\nacumular fuerza en el órgano de su bajo vientre.',
		],
		[Language.It]: [
			'Affina le sue mosse sottoponendosi a duri\nallenamenti. La forma assunta dopo l’evoluzione\ncambia a seconda delle mosse padroneggiate.',
			'Tira i lunghi ciuffi di pelo bianco che ha sulla\ntesta per incrementare il suo spirito combattivo,\nfacendo sgorgare energia dal ventre.',
		],
		[Language.En]: [
			'Kubfu trains hard to perfect its moves. The moves\nit masters will determine which form it takes when\nit evolves.',
			'If Kubfu pulls the long white hair on its head,\nits fighting spirit heightens and power wells up\nfrom the depths of its belly.',
		],
		[Language.Ja]: [
			'厳しい　鍛錬を　積み　技を\n磨く。　体得した　技によって\n進化したときの　姿が　変わる。',
			'頭の　白く　長い　体毛を\n引っぱると　気合が　高まり\n丹田から　パワーが　湧きあがる。',
		],
		[Language.ZhHans]: [
			'日积月累地进行艰苦锻炼，\n认真钻研招式。进化后的样子\n会根据所习得的招式不同而改变。',
			'拉紧头上又白又长的体毛，\n就会变得斗气势高昂，\n并从丹田涌出力量。',
		],
	},
	[
		[
			Variety.Kubfu,
			77,
			6,
			120,
			[Type.Fighting],
			{
				frontDefault: '9444ee56.png',
				frontShiny: 'f43b425f.png',
				backDefault: '58697fd9.png',
				backShiny: '61f1f3fb.png',
			},
			{
				[Stat.Hp]: {baseStat: 60},
				[Stat.Attack]: {baseStat: 90, effort: 1},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 53},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 72},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.BodySlam,
					Move.LowKick,
					Move.Dig,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Facade,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.BulkUp,
					Move.UTurn,
					Move.CloseCombat,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.LowSweep,
					Move.Acrobatics,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.MetalClaw,
					Move.FocusPunch,
					Move.AerialAce,
					Move.Fling,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.RockSmash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Endure,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DynamicPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusPunch,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.LowKick,
					Move.Dig,
					Move.FocusEnergy,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Attract,
					Move.SleepTalk,
					Move.Facade,
					Move.HelpingHand,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.BulkUp,
					Move.UTurn,
					Move.CloseCombat,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.LowSweep,
					Move.Round,
					Move.Acrobatics,
					Move.Retaliate,
					Move.WorkUp,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.RockSmash,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Endure,
					4,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DynamicPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FocusPunch,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Coaching,
				),
			].flat(),
			[
				{
					ability: Ability.InnerFocus,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Kubfu,
					PokemonFormBits.Default,
					{
						frontDefault: '9444ee56.png',
						frontShiny: 'f43b425f.png',
						backDefault: '58697fd9.png',
						backShiny: '61f1f3fb.png',
					},
					[Type.Fighting],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Urshifu,
	50,
	3,
	Color.Gray,
	[EggGroup.NoEggs],
	1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['ウーラオス'],
		[Language.Roomaji]: ['Wulaosu'],
		[Language.Ko]: ['우라오스'],
		[Language.ZhHant]: ['武道熊師'],
		[Language.Fr]: ['Shifours'],
		[Language.De]: ['Wulaosu'],
		[Language.Es]: ['Urshifu'],
		[Language.It]: ['Urshifu'],
		[Language.En]: ['Urshifu'],
		[Language.Ja]: ['ウーラオス'],
		[Language.ZhHans]: ['武道熊师'],
	},
	{
		[Language.JaHrkt]: ['けんぽうポケモン'],
		[Language.Ko]: ['권법포켓몬'],
		[Language.ZhHant]: ['拳法寶可夢'],
		[Language.Fr]: ['Pokémon Kung-fu'],
		[Language.De]: ['Kung-Fu-Pokémon'],
		[Language.Es]: ['Pokémon Kung-fu'],
		[Language.It]: ['Pokémon Kung Fu'],
		[Language.En]: ['Wushu Pokémon'],
		[Language.Ja]: ['けんぽうポケモン'],
		[Language.ZhHans]: ['拳法宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'いちげきひっさつが　しんじょう。\nあいての　ふところに　とびこみ\nきたえられた　こぶしを　たたきこむ。',
			'とおい　ちほうの　さんがくちたいで\nくらす。　だんがいぜっぺきを　はしり\nあしこしを　きたえ　わざを　みがく。',
		],
		[Language.Ko]: [
			'일격필살이 신조다.\n상대의 품으로 파고들어\n단련된 주먹을 질러 넣는다.',
			'먼 지방의 산악지대에 산다.\n낭떠러지 절벽을 달리며\n하체를 단련하고 기술을 연마한다.',
		],
		[Language.ZhHant]: [
			'一擊必殺是牠的信念。\n會衝進對手的懷裡，不留情地\n用千錘百煉的拳頭給予一擊。',
			'棲息在遙遠地區的山岳地帶。\n會在斷崖絕壁上來回奔跑\n鍛鍊下盤，磨練招式。',
		],
		[Language.Fr]: [
			'Adepte des techniques pouvant mettre K.O.\nen un seul coup, il se jette sur son adversaire\net le frappe de son poing robuste.',
			'Il vit dans une lointaine région montagneuse où\nil peaufine ses techniques et muscle ses jambes\nen courant le long des falaises abruptes.',
		],
		[Language.De]: [
			'Es ist darauf spezialisiert, Gegner mit nur einem\nTreffer zu bezwingen, indem es sie schlagartig\nanfällt und einen fokussierten Hieb austeilt.',
			'Wulaosu lebt in den Bergen einer fernen Region.\nUm die Beine zu stählen und seine Kampftechnik\nzu verbessern, rennt es steile Klippen entlang.',
		],
		[Language.Es]: [
			'Su estilo de lucha se basa en abatir a sus rivales\nde un solo golpe. Se abalanza sobre ellos con su\npuño cincelado por el entrenamiento.',
			'Vive en zonas montañosas en áreas recónditas,\ndonde entrena corriendo por escarpados riscos\npara fortalecer sus piernas y refinar su técnica.',
		],
		[Language.It]: [
			'Il suo credo è sconfiggere l’avversario con un\ncolpo solo. Si lancia sul nemico e lo colpisce con\nun pugno potenziato al massimo dall’allenamento.',
			'Vive nelle zone montuose di una regione lontana.\nCorre sulle pareti dei dirupi, allenando gli arti\ninferiori e perfezionando le sue mosse.',
		],
		[Language.En]: [
			'This form of Urshifu is a strong believer in the\none-hit KO. Its strategy is to leap in close to foes\nand land a devastating blow with a hardened fist.',
			'Inhabiting the mountains of a distant region, this\nPokémon races across sheer cliffs, training its legs\nand refining its moves.',
		],
		[Language.Ja]: [
			'一撃必殺が　信条。\n相手の　懐に　飛びこみ\n鍛えられた　拳を　叩きこむ。',
			'遠い　地方の　山岳地帯で\n暮らす。　断崖絶壁を　走り\n足腰を　鍛え　技を　磨く。',
		],
		[Language.ZhHans]: [
			'一击必杀是它的信条。\n飞冲到对方的怀中，用自己\n经过千锤百炼的拳头一拳击入。',
			'生活在遥远地区的山岳地带。\n通过在断崖绝壁上奔跑\n来锻炼腰腿，磨炼招式。',
		],
	},
	[
		[
			Variety.UrshifuSingleStrike,
			275,
			19,
			1050,
			[Type.Fighting, Type.Dark],
			{
				frontDefault: 'f2224ee7.png',
				frontShiny: '9abf2925.png',
				backDefault: '6159028b.png',
				backShiny: 'efbadfab.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 130, effort: 3},
				[Stat.Defense]: {baseStat: 100},
				[Stat.SpecialAttack]: {baseStat: 63},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 97},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.BodySlam,
					Move.LowKick,
					Move.Dig,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.BulkUp,
					Move.UTurn,
					Move.CloseCombat,
					Move.Fling,
					Move.AuraSphere,
					Move.PoisonJab,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.LowSweep,
					Move.FoulPlay,
					Move.Acrobatics,
					Move.Snarl,
					Move.ThroatChop,
					Move.BodyPress,
					Move.LashOut,
					Move.Coaching,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.MetalClaw,
					Move.FocusPunch,
					Move.AerialAce,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.FocusEnergy,
					Move.Endure,
					Move.RockSmash,
					Move.SuckerPunch,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DynamicPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusPunch,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WickedBlow,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.LowKick,
					Move.Dig,
					Move.FocusEnergy,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.Attract,
					Move.SleepTalk,
					Move.Crunch,
					Move.BeatUp,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.BulkUp,
					Move.UTurn,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.AuraSphere,
					Move.PoisonJab,
					Move.DarkPulse,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.LowSweep,
					Move.FoulPlay,
					Move.Round,
					Move.Acrobatics,
					Move.Retaliate,
					Move.WorkUp,
					Move.Snarl,
					Move.DarkestLariat,
					Move.ThroatChop,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.FocusEnergy,
					Move.Endure,
					Move.RockSmash,
					Move.SuckerPunch,
					Move.WickedBlow,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DynamicPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FocusPunch,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.LashOut,
					Move.Coaching,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.WickedBlow,
				),
			].flat(),
			[
				{
					ability: Ability.UnseenFist,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.UrshifuSingleStrike,
					PokemonFormBits.Default,
					{
						frontDefault: 'f2224ee7.png',
						frontShiny: '9abf2925.png',
						backDefault: '6159028b.png',
						backShiny: 'efbadfab.png',
					},
					[Type.Fighting, Type.Dark],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Shifours Style Poing Final'],
						[Language.De]: ['Wulaosu (Fokussiert)'],
						[Language.En]: ['Single Strike Urshifu'],
					},
					{
						[Language.JaHrkt]: ['いちげきのかた'],
						[Language.Ko]: ['일격의 태세'],
						[Language.ZhHant]: ['一擊流'],
						[Language.Fr]: ['Style Poing Final'],
						[Language.De]: ['Fokussierter Stil'],
						[Language.Es]: ['Estilo Brusco'],
						[Language.It]: ['Stile Singolcolpo'],
						[Language.En]: ['Single Strike Style'],
						[Language.Ja]: ['いちげきのかた'],
						[Language.ZhHans]: ['一击流'],
					},
					'single-strike',
				],
			],
		],
		[
			Variety.UrshifuRapidStrike,
			275,
			19,
			1050,
			[Type.Fighting, Type.Water],
			{
				frontDefault: '980504b0.png',
				frontShiny: '64d3f524.png',
				backDefault: '933594ed.png',
				backShiny: 'dc20e198.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 130, effort: 3},
				[Stat.Defense]: {baseStat: 100},
				[Stat.SpecialAttack]: {baseStat: 63},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 97},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.BodySlam,
					Move.LowKick,
					Move.Dig,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.RockTomb,
					Move.IronDefense,
					Move.BulkUp,
					Move.UTurn,
					Move.CloseCombat,
					Move.AuraSphere,
					Move.PoisonJab,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.LowSweep,
					Move.Acrobatics,
					Move.Liquidation,
					Move.BodyPress,
					Move.Coaching,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.FocusPunch,
					Move.AerialAce,
					Move.Fling,
					Move.TeraBlast,
					Move.IceSpinner,
					Move.Trailblaze,
					Move.ChillingWater,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.FocusEnergy,
					Move.Endure,
					Move.RockSmash,
					Move.AquaJet,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DynamicPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusPunch,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SurgingStrikes,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.LowKick,
					Move.Dig,
					Move.FocusEnergy,
					Move.Waterfall,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.FalseSwipe,
					Move.Attract,
					Move.SleepTalk,
					Move.RainDance,
					Move.Whirlpool,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.Dive,
					Move.RockTomb,
					Move.IronDefense,
					Move.BulkUp,
					Move.Brine,
					Move.UTurn,
					Move.CloseCombat,
					Move.AuraSphere,
					Move.PoisonJab,
					Move.DrainPunch,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.StoneEdge,
					Move.LowSweep,
					Move.Round,
					Move.Scald,
					Move.Acrobatics,
					Move.Retaliate,
					Move.WorkUp,
					Move.Liquidation,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					20,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.FocusEnergy,
					Move.Endure,
					Move.RockSmash,
					Move.AquaJet,
					Move.SurgingStrikes,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Counter,
					44,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Detect,
					28,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DynamicPunch,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FocusPunch,
					52,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AerialAce,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.BulkUp,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronHead,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.Coaching,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SurgingStrikes,
				),
			].flat(),
			[
				{
					ability: Ability.UnseenFist,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.UrshifuRapidStrike,
					PokemonFormBits.Default,
					{
						frontDefault: '980504b0.png',
						frontShiny: '64d3f524.png',
						backDefault: '933594ed.png',
						backShiny: 'dc20e198.png',
					},
					[Type.Fighting, Type.Water],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Shifours Style Mille Poings'],
						[Language.De]: ['Wulaosu (Fließend)'],
						[Language.En]: ['Rapid Strike Urshifu'],
					},
					{
						[Language.JaHrkt]: ['れんげきのかた'],
						[Language.Ko]: ['연격의 태세'],
						[Language.ZhHant]: ['連擊流'],
						[Language.Fr]: ['Style Mille Poings'],
						[Language.De]: ['Fließender Stil'],
						[Language.Es]: ['Estilo Fluido'],
						[Language.It]: ['Stile Pluricolpo'],
						[Language.En]: ['Rapid Strike Style'],
						[Language.Ja]: ['れんげきのかた'],
						[Language.ZhHans]: ['连击流'],
					},
					'rapid-strike',
				],
			],
		],
		[
			Variety.UrshifuSingleStrikeGmax,
			275,
			290,
			10000,
			[Type.Fighting, Type.Dark],
			{
				frontDefault: '825a561b.png',
				frontShiny: '83119d52.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 130, effort: 3},
				[Stat.Defense]: {baseStat: 100},
				[Stat.SpecialAttack]: {baseStat: 63},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 97},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.UnseenFist,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.UrshifuSingleStrikeGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '825a561b.png',
						frontShiny: '83119d52.png',
					},
					[Type.Fighting, Type.Dark],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Shifours Style Poing Final Gigamax'],
						[Language.De]: ['Gigadynamax-Wulaosu (Fokussiert)'],
						[Language.En]: ['Gigantamax Single Strike Urshifu'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
		[
			Variety.UrshifuRapidStrikeGmax,
			275,
			260,
			10000,
			[Type.Fighting, Type.Water],
			{
				frontDefault: '192be9a1.png',
				frontShiny: 'd46cb962.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 130, effort: 3},
				[Stat.Defense]: {baseStat: 100},
				[Stat.SpecialAttack]: {baseStat: 63},
				[Stat.SpecialDefense]: {baseStat: 60},
				[Stat.Speed]: {baseStat: 97},
			},
			{},
			[].flat(),
			[
				{
					ability: Ability.UnseenFist,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.UrshifuRapidStrikeGmax,
					PokemonFormBits.BattleOnly | PokemonFormBits.Default,
					{
						frontDefault: '192be9a1.png',
						frontShiny: 'd46cb962.png',
					},
					[Type.Fighting, Type.Water],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Shifours Style Mille Poings Gigamax'],
						[Language.De]: ['Gigadynamax-Wulaosu (Fließend)'],
						[Language.En]: ['Gigantamax Rapid Strike Urshifu'],
					},
					{
						[Language.Fr]: ['Forme Gigamax'],
						[Language.De]: ['Gigadynamax-Form'],
						[Language.En]: ['Gigantamax Form'],
					},
					'gmax',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Zarude,
	0,
	3,
	Color.Green,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Mythical,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['ザルード'],
		[Language.Roomaji]: ['Zarude'],
		[Language.Ko]: ['자루도'],
		[Language.ZhHant]: ['薩戮德'],
		[Language.Fr]: ['Zarude'],
		[Language.De]: ['Zarude'],
		[Language.Es]: ['Zarude'],
		[Language.It]: ['Zarude'],
		[Language.En]: ['Zarude'],
		[Language.Ja]: ['ザルード'],
		[Language.ZhHans]: ['萨戮德'],
	},
	{
		[Language.JaHrkt]: ['わるざるポケモン'],
		[Language.Ko]: ['나쁜원숭이포켓몬'],
		[Language.ZhHant]: ['惡猿寶可夢'],
		[Language.Fr]: ['Pokémon Vilain Singe'],
		[Language.De]: ['Finsteraffen-Pokémon'],
		[Language.Es]: ['Pokémon Simiestro'],
		[Language.It]: ['Pokémon Scimmialigna'],
		[Language.En]: ['Rogue Monkey Pokémon'],
		[Language.Ja]: ['わるざるポケモン'],
		[Language.ZhHans]: ['恶猿宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'むれを　つくり　みつりんで　くらす。\nとても　こうげきてきで　もりにすむ\nポケモンたちから　おそれられている。',
			'からだに　はえる　ツルは　ちぎれると\nつちの　えいようぶんとなって　もりの\nしょくぶつたちを　そだてるのだ。',
		],
		[Language.Ko]: [
			'무리 지어 밀림에 산다.\n매우 공격적이라 숲에 사는\n포켓몬들에게는 두려움의 대상이다.',
			'몸에 난 덩굴이 끊어지면\n토양에 영양분이 되어\n숲의 식물들을 성장시킨다.',
		],
		[Language.ZhHant]: [
			'集結成群生活在密林裡。\n攻擊性很強，令棲息在\n森林的寶可夢們畏懼不已。',
			'生長在身上的藤蔓斷落後\n會化為土壤的養分，\n孕育森林裡的各種植物。',
		],
		[Language.Fr]: [
			'Ils vivent en groupe dans la jungle, où les autres\nPokémon les craignent à cause de leur nature\nagressive.',
			'Lorsque ses lianes se détachent de son corps,\nelles fertilisent le sol et favorisent la croissance\ndes plantes de la forêt.',
		],
		[Language.De]: [
			'Zarude leben gruppenweise in dichten Wäldern\nund werden von den anderen Pokémon dort\ngefürchtet, da sie sehr aggressiv sind.',
			'Reißen die an seinem Körper wachsenden Ranken\nab, werden sie zu Nährstoffen für den Boden,\nwas den Pflanzen im Wald zum Wachstum verhilft.',
		],
		[Language.Es]: [
			'Viven en manada en la selva. Debido a su\nmarcada agresividad, son muy temidos por otros\nPokémon selváticos.',
			'Las lianas que le brotan del cuerpo nutren y\nfertilizan el mantillo del bosque cuando se le\ndesprenden.',
		],
		[Language.It]: [
			'Vive in branco nella giungla.\nÈ temuto dagli altri Pokémon della foresta\nperché estremamente aggressivo.',
			'Se si staccano, le liane del suo corpo diventano\nnutrimento per il suolo, favorendo lo sviluppo\ndelle piante della foresta.',
		],
		[Language.En]: [
			'Within dense forests, this Pokémon lives in a pack\nwith others of its kind. It’s incredibly aggressive,\nand the other Pokémon of the forest fear it.',
			'Once the vines on Zarude’s body tear off, they\nbecome nutrients in the soil. This helps the plants\nof the forest grow.',
		],
		[Language.Ja]: [
			'群れを　つくり　密林で　暮らす。\nとても　攻撃的で　森にすむ\nポケモンたちから　恐れられている。',
			'体に　生える　ツルは　ちぎれると\n土の　栄養分となって　森の\n植物たちを　育てるのだ。',
		],
		[Language.ZhHans]: [
			'成群结队地在密林中生活。\n攻击性很强，森林中栖息的\n宝可梦都很怕它。',
			'长在身上的藤蔓断掉之后\n会变成土壤的养分，\n帮助森林中的植物成长。',
		],
	},
	[
		[
			Variety.Zarude,
			300,
			18,
			700,
			[Type.Dark, Type.Grass],
			{
				frontDefault: '4ce49337.png',
				frontShiny: 'a3bf6d9b.png',
				backDefault: 'df4714a3.png',
				backShiny: '0ab76d91.png',
			},
			{
				[Stat.Hp]: {baseStat: 105},
				[Stat.Attack]: {baseStat: 120, effort: 3},
				[Stat.Defense]: {baseStat: 105},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 95},
				[Stat.Speed]: {baseStat: 105},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Bind,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.FocusPunch,
					Move.HelpingHand,
					Move.KnockOff,
					Move.AerialAce,
					Move.LeafStorm,
					Move.LowSweep,
					Move.PetalBlizzard,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.VineWhip,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.SolarBeam,
					Move.Dig,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.SunnyDay,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.RockTomb,
					Move.BulletSeed,
					Move.BulkUp,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.CloseCombat,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.GrassKnot,
					Move.Acrobatics,
					Move.Snarl,
					Move.GrassyTerrain,
					Move.SolarBlade,
					Move.ThroatChop,
					Move.StompingTantrum,
					Move.GrassyGlide,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Growth,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Synthesis,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PowerWhip,
					84,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GrassKnot,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.JungleHealing,
					90,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.SolarBeam,
					Move.Dig,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.IronTail,
					Move.SunnyDay,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.RockTomb,
					Move.BulletSeed,
					Move.BulkUp,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.PowerWhip,
					Move.GrassKnot,
					Move.Round,
					Move.Acrobatics,
					Move.Snarl,
					Move.GrassyTerrain,
					Move.DarkestLariat,
					Move.SolarBlade,
					Move.ThroatChop,
					Move.BrutalSwing,
					Move.StompingTantrum,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Bind,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.VineWhip,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Growth,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Synthesis,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerWhip,
					84,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GrassKnot,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.GrassyGlide,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.JungleHealing,
					90,
				),
			].flat(),
			[
				{
					ability: Ability.LeafGuard,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Zarude,
					PokemonFormBits.Default,
					{
						frontDefault: '4ce49337.png',
						frontShiny: 'a3bf6d9b.png',
						backDefault: 'df4714a3.png',
						backShiny: '0ab76d91.png',
					},
					[Type.Dark, Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.ZarudeDada,
			300,
			18,
			700,
			[Type.Dark, Type.Grass],
			{},
			{
				[Stat.Hp]: {baseStat: 105},
				[Stat.Attack]: {baseStat: 120, effort: 3},
				[Stat.Defense]: {baseStat: 105},
				[Stat.SpecialAttack]: {baseStat: 70},
				[Stat.SpecialDefense]: {baseStat: 95},
				[Stat.Speed]: {baseStat: 105},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Bind,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.Roar,
					Move.FocusPunch,
					Move.HelpingHand,
					Move.KnockOff,
					Move.AerialAce,
					Move.LeafStorm,
					Move.LowSweep,
					Move.TeraBlast,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.VineWhip,
					12,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.SolarBeam,
					Move.Dig,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.SunnyDay,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.RockTomb,
					Move.BulletSeed,
					Move.BulkUp,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.CloseCombat,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.GrassKnot,
					Move.Acrobatics,
					Move.Snarl,
					Move.GrassyTerrain,
					Move.SolarBlade,
					Move.StompingTantrum,
					Move.GrassyGlide,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Growth,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Synthesis,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PowerWhip,
					84,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GrassKnot,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.JungleHealing,
					90,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.MegaPunch,
					Move.MegaKick,
					Move.BodySlam,
					Move.HyperBeam,
					Move.LowKick,
					Move.SolarBeam,
					Move.Dig,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Encore,
					Move.IronTail,
					Move.SunnyDay,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.Revenge,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.RockTomb,
					Move.BulletSeed,
					Move.BulkUp,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.UTurn,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.Fling,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.DrainPunch,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.PowerWhip,
					Move.GrassKnot,
					Move.Round,
					Move.Acrobatics,
					Move.Snarl,
					Move.GrassyTerrain,
					Move.DarkestLariat,
					Move.SolarBlade,
					Move.ThroatChop,
					Move.BrutalSwing,
					Move.StompingTantrum,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Bind,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.VineWhip,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Growth,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Swagger,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Synthesis,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.UTurn,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.PowerWhip,
					84,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GrassKnot,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.GrassyGlide,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.JungleHealing,
					90,
				),
			].flat(),
			[
				{
					ability: Ability.LeafGuard,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.ZarudeDada,
					PokemonFormBits.Default,
					{},
					[Type.Dark, Type.Grass],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Zarude Papa'],
						[Language.De]: ['Papa Zarude'],
						[Language.En]: ['Dada Zarude'],
					},
					{
						[Language.JaHrkt]: ['とうちゃん'],
						[Language.Ko]: ['아빠'],
						[Language.ZhHant]: ['阿爸'],
						[Language.Fr]: ['Papa'],
						[Language.De]: ['Papa'],
						[Language.Es]: ['Papá'],
						[Language.It]: ['Papà'],
						[Language.En]: ['Dada'],
						[Language.Ja]: ['とうちゃん'],
						[Language.ZhHans]: ['阿爸'],
					},
					'dada',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Regieleki,
	35,
	3,
	Color.Yellow,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['レジエレキ'],
		[Language.Roomaji]: ['Regieleki'],
		[Language.Ko]: ['레지에레키'],
		[Language.ZhHant]: ['雷吉艾勒奇'],
		[Language.Fr]: ['Regieleki'],
		[Language.De]: ['Regieleki'],
		[Language.Es]: ['Regieleki'],
		[Language.It]: ['Regieleki'],
		[Language.En]: ['Regieleki'],
		[Language.Ja]: ['レジエレキ'],
		[Language.ZhHans]: ['雷吉艾勒奇'],
	},
	{
		[Language.JaHrkt]: ['エレクトロンポケモン'],
		[Language.Ko]: ['일렉트론포켓몬'],
		[Language.ZhHant]: ['電子寶可夢'],
		[Language.Fr]: ['Pokémon Électron'],
		[Language.De]: ['Elektronen-Pokémon'],
		[Language.Es]: ['Pokémon Electrón'],
		[Language.It]: ['Pokémon Elettrone'],
		[Language.En]: ['Electron Pokémon'],
		[Language.Ja]: ['エレクトロンポケモン'],
		[Language.ZhHans]: ['电子宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'でんきエネルギーの　かたまり。\nからだの　リングを　はずすと　ひめた\nちからが　ときはなたれるらしい。',
			'ぜんしんが　でんきエネルギーを\nつくる　きかん。　ガラルぜんどの\nでんきを　つくりだすことができる。',
		],
		[Language.Ko]: [
			'전기 에너지 덩어리다.\n몸에 있는 링을 해제하면\n숨겨진 힘이 해방된다고 한다.',
			'온몸이 전기 에너지를 만드는 기관이다.\n가라르 전 지역에서 사용하는 양의\n전기를 만들어 낼 수 있다.',
		],
		[Language.ZhHant]: [
			'由電能凝聚而成的寶可夢。\n據說拿下牠身上的圓環後，\n就會解放牠潛藏的力量。',
			'全身都是能發電的器官。\n牠製造的電能可以滿足\n伽勒爾全域的電力需求。',
		],
		[Language.Fr]: [
			'Son corps est un véritable concentré d’énergie\nélectrique. On raconte que si on lui retire\nses anneaux, sa puissance cachée se libère.',
			'Son corps est entièrement composé d’organes\ngénérant de l’électricité. Il peut produire\nassez d’énergie pour alimenter tout Galar.',
		],
		[Language.De]: [
			'Es besteht aus gebündelter elektrischer Energie.\nWerden die Ringe an seinem Körper entfernt,\nsetzt das angeblich seine verborgenen Kräfte frei.',
			'Sein Körper besteht aus einem Organ, das\nelektrische Energie erzeugt. Regieleki kann genug\nStrom produzieren, um ganz Galar zu versorgen.',
		],
		[Language.Es]: [
			'Su cuerpo entero es energía eléctrica. Por lo\nvisto, quitarle los anillos que lleva libera su\npoder oculto.',
			'Todo su cuerpo es un órgano electrógeno, cuya\npotencia sería suficiente para abastecer la región\nde Galar por completo.',
		],
		[Language.It]: [
			'È un agglomerato di energia elettrica. Si dice\nche rimuovere gli anelli che ha attorno al corpo\nliberi la sua potenza latente.',
			'Il suo corpo è costituito interamente da un\norgano che produce energia elettrica.\nFornisce corrente all’intera regione di Galar.',
		],
		[Language.En]: [
			'This Pokémon is a cluster of electrical energy.\nIt’s said that removing the rings on Regieleki’s\nbody will unleash the Pokémon’s latent power.',
			'Its entire body is made up of a single organ that\ngenerates electrical energy. Regieleki is capable\nof creating all Galar’s electricity.',
		],
		[Language.Ja]: [
			'電気エネルギーの　塊。\n体の　リングを　外すと　秘めた\n力が　解き放たれるらしい。',
			'全身が　電気エネルギーを\n作る　器官。　ガラル全土の\n電気を　作りだすことができる。',
		],
		[Language.ZhHans]: [
			'由电能聚集而成。\n据说在解开身上的圆环后\n会释放出隐藏的力量。',
			'整个身体是制造电能的\n器官。可以制造出\n伽勒尔全域所需的电力。',
		],
	},
	[
		[
			Variety.Regieleki,
			290,
			12,
			1450,
			[Type.Electric],
			{
				frontDefault: '7c76d53f.png',
				frontShiny: '0aa29c09.png',
				backDefault: '0571cd4f.png',
				backShiny: '64c1a8bc.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 100},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 100},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 200, effort: 3},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Facade,
					Move.GigaImpact,
					Move.ElectroBall,
					Move.Acrobatics,
					Move.VoltSwitch,
					Move.Electroweb,
					Move.WildCharge,
					Move.EerieImpulse,
					Move.ElectricTerrain,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Charge,
					Move.ChargeBeam,
					Move.TeraBlast,
					Move.SupercellSlam,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					72,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.ThunderShock,
					Move.RapidSpin,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thunderbolt,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ThunderWave,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Explosion,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ZapCannon,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LockOn,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ExtremeSpeed,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShockWave,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MagnetRise,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Electroweb,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ThunderCage,
					36,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Agility,
					Move.Screech,
					Move.LightScreen,
					Move.Reflect,
					Move.SelfDestruct,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.Facade,
					Move.Bounce,
					Move.Assurance,
					Move.GigaImpact,
					Move.ElectroBall,
					Move.Round,
					Move.Acrobatics,
					Move.VoltSwitch,
					Move.Electroweb,
					Move.WildCharge,
					Move.EerieImpulse,
					Move.ElectricTerrain,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					72,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.ThunderShock,
					Move.RapidSpin,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thunderbolt,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ThunderWave,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Explosion,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ZapCannon,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LockOn,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ExtremeSpeed,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShockWave,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.MagnetRise,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Electroweb,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.RisingVoltage,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ThunderCage,
					36,
				),
			].flat(),
			[
				{
					ability: Ability.Transistor,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Regieleki,
					PokemonFormBits.Default,
					{
						frontDefault: '7c76d53f.png',
						frontShiny: '0aa29c09.png',
						backDefault: '0571cd4f.png',
						backShiny: '64c1a8bc.png',
					},
					[Type.Electric],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Regidrago,
	35,
	3,
	Color.Green,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['レジドラゴ'],
		[Language.Roomaji]: ['Regidorago'],
		[Language.Ko]: ['레지드래고'],
		[Language.ZhHant]: ['雷吉鐸拉戈'],
		[Language.Fr]: ['Regidrago'],
		[Language.De]: ['Regidrago'],
		[Language.Es]: ['Regidrago'],
		[Language.It]: ['Regidrago'],
		[Language.En]: ['Regidrago'],
		[Language.Ja]: ['レジドラゴ'],
		[Language.ZhHans]: ['雷吉铎拉戈'],
	},
	{
		[Language.JaHrkt]: ['りゅうぎょくポケモン'],
		[Language.Ko]: ['용옥포켓몬'],
		[Language.ZhHant]: ['龍玉寶可夢'],
		[Language.Fr]: ['Pokémon Boule Dragon'],
		[Language.De]: ['Drachenkugel-Pokémon'],
		[Language.Es]: ['Pokémon Dragosfera'],
		[Language.It]: ['Pokémon Dracosfera'],
		[Language.En]: ['Dragon Orb Pokémon'],
		[Language.Ja]: ['りゅうぎょくポケモン'],
		[Language.ZhHans]: ['龙玉宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'うでの　かたちは　こだいの　ドラゴン\nポケモンの　あたまという　がくせつも\nあるが　しょうめいされていない。',
			'ぜんしんが　ドラゴンエネルギーの\nけっしょう。　すべての　ドラゴン\nポケモンの　ちからを　もつらしい。',
		],
		[Language.Ko]: [
			'팔의 형태가 고대 드래곤포켓몬의\n머리라는 학설도 있지만\n증명된 바는 없다.',
			'온몸이 드래곤 에너지의\n결정체다. 모든 드래곤포켓몬의\n힘을 가지고 있는 듯하다.',
		],
		[Language.ZhHant]: [
			'有學者認為牠的手臂是\n古代龍寶可夢頭部的形狀。\n但這個學說尚未被證實。',
			'全身是由龍之能量的結晶\n打造而成。據說牠擁有\n所有的龍寶可夢的力量。',
		],
		[Language.Fr]: [
			'Une théorie stipule que ses bras ont la forme\nde la tête d’un Pokémon Dragon des temps\nanciens, mais aucune preuve ne l’atteste.',
			'Son corps est entièrement composé de cristaux\nd’énergie draconique. Il possèderait les pouvoirs\nde tous les Pokémon Dragon.',
		],
		[Language.De]: [
			'Einer unbestätigten Theorie zufolge sind seine\nArme wie der Kopf eines urzeitlichen\nDrachen-Pokémon geformt.',
			'Sein ganzer Körper besteht aus kristallisierter\nDrachen-Energie. Es soll über die Kräfte aller\nDrachen-Pokémon verfügen.',
		],
		[Language.Es]: [
			'Cierta teoría afirma que la forma de sus brazos\nrepresenta la cabeza de un Pokémon dragón\nancestral, aunque esto no ha podido verificarse.',
			'Todo su cuerpo es una gema de energía dragón\ncristalizada. Se cree que posee los poderes de\ntodos los Pokémon dragón.',
		],
		[Language.It]: [
			'Si ipotizza che le sue braccia abbiano la forma\ndella testa di un antico Pokémon di tipo Drago,\nma non esistono prove certe.',
			'Il suo corpo è formato da energia Drago\ncristallizzata. Pare che possieda i poteri\ndi tutti i Pokémon di tipo Drago.',
		],
		[Language.En]: [
			'An academic theory proposes that Regidrago’s\narms were once the head of an ancient dragon\nPokémon. The theory remains unproven.',
			'Its body is composed of crystallized dragon\nenergy. Regidrago is said to have the powers of\nevery dragon Pokémon.',
		],
		[Language.Ja]: [
			'腕の　形は　古代の　ドラゴン\nポケモンの　頭という　学説も\nあるが　証明されていない。',
			'全身が　ドラゴンエネルギーの\n結晶。　すべての　ドラゴン\nポケモンの　力を　持つらしい。',
		],
		[Language.ZhHans]: [
			'有一种未经证实的学术说法\n认为它手臂的形状\n是古代龙宝可梦的头，',
			'整个身体是龙之能量的\n结晶。据说它拥有\n所有龙宝可梦的能力。',
		],
	},
	[
		[
			Variety.Regidrago,
			290,
			21,
			2000,
			[Type.Dragon],
			{
				frontDefault: '8555e63e.png',
				frontShiny: '62ecf78e.png',
				backDefault: 'ee40b8d4.png',
				backShiny: 'f39c889a.png',
			},
			{
				[Stat.Hp]: {baseStat: 200, effort: 3},
				[Stat.Attack]: {baseStat: 100},
				[Stat.Defense]: {baseStat: 50},
				[Stat.SpecialAttack]: {baseStat: 100},
				[Stat.SpecialDefense]: {baseStat: 50},
				[Stat.Speed]: {baseStat: 80},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.LightScreen,
					Move.Reflect,
					Move.Rest,
					Move.Substitute,
					Move.Reversal,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.DragonClaw,
					Move.DragonDance,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.FireFang,
					Move.DracoMeteor,
					Move.BreakingSwipe,
					Move.ScaleShot,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Earthquake,
					Move.Swift,
					Move.EarthPower,
					Move.IceFang,
					Move.TeraBlast,
					Move.DragonCheer,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					72,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Explosion,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonBreath,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Twister,
					1,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonClaw,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DragonEnergy,
					66,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.ViceGrip,
					Move.Twister,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.LightScreen,
					Move.Reflect,
					Move.FocusEnergy,
					Move.SelfDestruct,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Reversal,
					Move.Protect,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.DragonClaw,
					Move.DragonDance,
					Move.DragonPulse,
					Move.GigaImpact,
					Move.ThunderFang,
					Move.FireFang,
					Move.Round,
					Move.BreakingSwipe,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					6,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HyperBeam,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Explosion,
					78,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonBreath,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.AncientPower,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonClaw,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonDance,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					42,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.DracoMeteor,
					Move.ScaleShot,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LaserFocus,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DragonEnergy,
					66,
				),
			].flat(),
			[
				{
					ability: Ability.DragonsMaw,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Regidrago,
					PokemonFormBits.Default,
					{
						frontDefault: '8555e63e.png',
						frontShiny: '62ecf78e.png',
						backDefault: 'ee40b8d4.png',
						backShiny: 'f39c889a.png',
					},
					[Type.Dragon],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Glastrier,
	35,
	3,
	Color.White,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ブリザポス'],
		[Language.Roomaji]: ['Blizzapos'],
		[Language.Ko]: ['블리자포스'],
		[Language.ZhHant]: ['雪暴馬'],
		[Language.Fr]: ['Blizzeval'],
		[Language.De]: ['Polaross'],
		[Language.Es]: ['Glastrier'],
		[Language.It]: ['Glastrier'],
		[Language.En]: ['Glastrier'],
		[Language.Ja]: ['ブリザポス'],
		[Language.ZhHans]: ['雪暴马'],
	},
	{
		[Language.JaHrkt]: ['あばれうまポケモン'],
		[Language.Ko]: ['사나운말포켓몬'],
		[Language.ZhHant]: ['烈馬寶可夢'],
		[Language.Fr]: ['Pokémon Cheval Rétif'],
		[Language.De]: ['Wildblut-Pokémon'],
		[Language.Es]: ['Pokémon Corcel Feroz'],
		[Language.It]: ['Pokémon Furiequino'],
		[Language.En]: ['Wild Horse Pokémon'],
		[Language.Ja]: ['あばれうまポケモン'],
		[Language.ZhHans]: ['烈马宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'ひづめから　きょうりょくな　れいきを\nはなつ。　ほしいものは　なんでも\nちからずくで　うばう　あばれんぼう。',
			'すさまじい　かいりきの　もちぬし。\nかおを　おおう　こおりの　マスクは\nダイヤモンドの　１００ばい　かたい。',
		],
		[Language.Ko]: [
			'발굽에서 강력한 냉기를 발산한다.\n원하는 것은 무엇이든\n힘으로 빼앗는 폭군.',
			'굉장한 괴력을 가졌다.\n얼굴을 덮는 얼음 마스크는\n다이아몬드보다 100배 단단하다.',
		],
		[Language.ZhHant]: [
			'會從蹄子釋放出強烈的寒氣。\n性情暴躁，只要是自己想要\n的東西，就會強行去搶奪。',
			'擁有十分驚人的怪力。\n遮住臉部的冰面罩比\n鑽石還要堅硬１００倍。',
		],
		[Language.Fr]: [
			'Violent au point de s’emparer de tout ce qu’il\ndésire par la force, ce Pokémon est capable\nde libérer un puissant air glacial de ses sabots.',
			'Ce Pokémon à la force hors du commun porte\nun masque composé de glace cent fois plus\nsolide que le diamant.',
		],
		[Language.De]: [
			'Aus seinen Hufen verströmt es eisige Kälte.\nDieses ungestüme Pokémon nimmt sich alles,\nwas es will, mit roher Gewalt.',
			'Das Gesicht dieses außergewöhnlich starken\nPokémon wird von einer Maske aus Eis bedeckt,\ndie hundertmal härter als Diamant ist.',
		],
		[Language.Es]: [
			'Libera un potente vaho gélido por las pezuñas.\nUn ser violento que no duda en tomar a la fuerza\ntodo cuanto desea.',
			'Cuenta con una fuerza física sobrecogedora.\nLa máscara de hielo que le cubre el rostro es\ncien veces más dura que el diamante.',
		],
		[Language.It]: [
			'Rilascia una potente aria gelida dagli zoccoli.\nÈ impetuoso e prende con la forza tutto ciò\nche vuole.',
			'È dotato di una forza incommensurabile.\nLa maschera di ghiaccio che gli ricopre il muso\nè cento volte più dura del diamante.',
		],
		[Language.En]: [
			'Glastrier emits intense cold from its hooves.\nIt’s also a belligerent Pokémon—anything it\nwants, it takes by force.',
			'Glastrier has tremendous physical strength, and\nthe mask of ice covering its face is 100 times\nharder than diamond.',
		],
		[Language.Ja]: [
			'蹄から　強力な　冷気を\n放つ。　欲しいものは　なんでも\n力尽くで　奪う　暴れん坊。',
			'凄まじい　怪力の　持ち主。\n顔を　覆う　氷の　マスクは\nダイヤモンドの　１００倍　硬い。',
		],
		[Language.ZhHans]: [
			'会从蹄子释放出强力的冷气。\n性格粗暴，只要是自己想要的\n东西，就会竭尽全力去抢夺。',
			'拥有十分惊人的怪力。\n戴在脸上的冰之面罩\n硬度是钻石的１００倍',
		],
	},
	[
		[
			Variety.Glastrier,
			290,
			22,
			8000,
			[Type.Ice],
			{
				frontDefault: 'bd0b67db.png',
				frontShiny: '496dc90a.png',
				backDefault: '296d0ee2.png',
				backShiny: '3373b748.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 145, effort: 3},
				[Stat.Defense]: {baseStat: 130},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 110},
				[Stat.Speed]: {baseStat: 30},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					72,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.IronDefense,
					Move.MudShot,
					Move.CloseCombat,
					Move.GigaImpact,
					Move.Avalanche,
					Move.HeavySlam,
					Move.Bulldoze,
					Move.Snarl,
					Move.HighHorsepower,
					Move.ThroatChop,
					Move.SmartStrike,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					6,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					42,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.Curse,
					Move.ZenHeadbutt,
					Move.TeraBlast,
					Move.Snowscape,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Avalanche,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IcicleCrash,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					72,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.Megahorn,
					Move.Crunch,
					Move.Uproar,
					Move.Hail,
					Move.Facade,
					Move.Taunt,
					Move.Superpower,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.MudShot,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.GigaImpact,
					Move.Avalanche,
					Move.HeavySlam,
					Move.Round,
					Move.Bulldoze,
					Move.Snarl,
					Move.HighHorsepower,
					Move.ThroatChop,
					Move.SmartStrike,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					6,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Mist,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Avalanche,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.IcicleCrash,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.ChillingNeigh,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Glastrier,
					PokemonFormBits.Default,
					{
						frontDefault: 'bd0b67db.png',
						frontShiny: '496dc90a.png',
						backDefault: '296d0ee2.png',
						backShiny: '3373b748.png',
					},
					[Type.Ice],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Spectrier,
	35,
	3,
	Color.Black,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['レイスポス'],
		[Language.Roomaji]: ['Wraithpos'],
		[Language.Ko]: ['레이스포스'],
		[Language.ZhHant]: ['靈幽馬'],
		[Language.Fr]: ['Spectreval'],
		[Language.De]: ['Phantoross'],
		[Language.Es]: ['Spectrier'],
		[Language.It]: ['Spectrier'],
		[Language.En]: ['Spectrier'],
		[Language.Ja]: ['レイスポス'],
		[Language.ZhHans]: ['灵幽马'],
	},
	{
		[Language.JaHrkt]: ['しゅんばポケモン'],
		[Language.Ko]: ['빠른말포켓몬'],
		[Language.ZhHant]: ['駿馬寶可夢'],
		[Language.Fr]: ['Pokémon Cheval Vif'],
		[Language.De]: ['Flinkblut-Pokémon'],
		[Language.Es]: ['Pokémon Corcel Veloz'],
		[Language.It]: ['Pokémon Sveltequino'],
		[Language.En]: ['Swift Horse Pokémon'],
		[Language.Ja]: ['しゅんばポケモン'],
		[Language.ZhHans]: ['骏马宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'しかく　いがいの　ごかんを　つかい\nようすを　さぐる。　けられたものは\nたましいを　ぬかれてしまうという。',
			'やみよを　かけぬけ　ねているものの\nせいめいエネルギーを　すいとる。\nこどくと　せいじゃくを　このむ。',
		],
		[Language.Ko]: [
			'시각 이외의 오감을 사용해서\n동태를 살핀다. 발에 차인 자는\n영혼이 빠져나가 버린다고 한다.',
			'어두운 밤을 달리며 잠든 자의\n생명 에너지를 흡수한다.\n고독과 정적을 좋아한다.',
		],
		[Language.ZhHant]: [
			'會利用視覺之外的感官\n去探測周圍的狀況。據說\n被牠踢到時靈魂就會出竅。',
			'在漆黑的夜裡奔馳，吸取\n正在睡覺的生物的生命能量。\n喜愛孤獨與寂靜。',
		],
		[Language.Fr]: [
			'Il se sert de tous ses sens pour se repérer, sauf\ncelui de la vue. Un coup de ses sabots suffirait\nà séparer l’âme du corps de sa cible.',
			'Ce Pokémon friand de silence et de solitude\ngalope à travers les ténèbres nocturnes\net aspire l’énergie vitale des êtres endormis.',
		],
		[Language.De]: [
			'Um sein Umfeld zu erkunden, nutzt es all seine\nSinne – bis auf den Sehsinn. Wer von Phantoross\ngetreten wird, verliert angeblich seine Seele.',
			'Es galoppiert durch die finstere Nacht und\nabsorbiert die Lebensenergie der Schlafenden.\nPhantoross bevorzugt Einsamkeit und Stille.',
		],
		[Language.Es]: [
			'Examina su entorno con todos los sentidos, salvo\nla vista. Se dice que sus coces son capaces de\nrobarle el alma a quien las recibe.',
			'Amante de la quietud y la soledad, galopa por\nlas tinieblas nocturnas absorbiendo la energía\nvital de toda criatura que esté durmiendo.',
		],
		[Language.It]: [
			'Sonda l’area circostante con tutti i suoi sensi,\nesclusa la vista. Si narra che chi subisce i suoi\ncalci venga privato dell’anima.',
			'Galoppa nelle notti buie assorbendo l’energia\nvitale delle creature addormentate.\nAma la solitudine e la quiete.',
		],
		[Language.En]: [
			'It probes its surroundings with all its senses save\none—it doesn’t use its sense of sight. Spectrier’s\nkicks are said to separate soul from body.',
			'As it dashes through the night, Spectrier absorbs\nthe life-force of sleeping creatures. It craves\nsilence and solitude.',
		],
		[Language.Ja]: [
			'視覚　以外の　五感を　使い\n様子を　探る。　蹴られたものは\n魂を　抜かれてしまうという。',
			'闇夜を　駆けぬけ　寝ているものの\n生命エネルギーを　吸い取る。\n孤独と　静寂を　好む。',
		],
		[Language.ZhHans]: [
			'使用视觉以外的五感探索\n周围的情况。据说如果\n被它踢到，就会灵魂出窍。',
			'在黑暗的夜晚中奔跑，吸取\n正在睡觉的生物的生命能量。\n喜欢孤独和静寂。',
		],
	},
	[
		[
			Variety.Spectrier,
			290,
			20,
			445,
			[Type.Ghost],
			{
				frontDefault: '9478a30f.png',
				frontShiny: 'ef683772.png',
				backDefault: 'e2750a1b.png',
				backShiny: '647485b8.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 65},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 145, effort: 3},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 130},
			},
			{},
			[
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					6,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Taunt,
					Move.MudShot,
					Move.CalmMind,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.FoulPlay,
					Move.Hex,
					Move.Bulldoze,
					Move.Snarl,
					Move.PhantomForce,
					Move.StompingTantrum,
					Move.LashOut,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					42,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.Psychic,
					Move.NightShade,
					Move.ConfuseRay,
					Move.Haze,
					Move.Curse,
					Move.PainSplit,
					Move.DrainingKiss,
					Move.Poltergeist,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Disable,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ConfuseRay,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Haze,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					18,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleKick,
					6,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.TailWhip,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.Crunch,
					Move.ShadowBall,
					Move.Uproar,
					Move.WillOWisp,
					Move.Facade,
					Move.Taunt,
					Move.MudShot,
					Move.CalmMind,
					Move.Payback,
					Move.Assurance,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.PsychoCut,
					Move.FoulPlay,
					Move.Round,
					Move.Hex,
					Move.Bulldoze,
					Move.Snarl,
					Move.PhantomForce,
					Move.StompingTantrum,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					42,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					54,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					66,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Disable,
					60,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ConfuseRay,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Haze,
					30,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.ShadowBall,
					36,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.NastyPlot,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Hex,
					12,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.GrimNeigh,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Spectrier,
					PokemonFormBits.Default,
					{
						frontDefault: '9478a30f.png',
						frontShiny: 'ef683772.png',
						backDefault: 'e2750a1b.png',
						backShiny: '647485b8.png',
					},
					[Type.Ghost],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Calyrex,
	100,
	3,
	Color.Green,
	[EggGroup.NoEggs],
	-1,
	PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	120,
	GrowthRate.Slow,
	Shape.Humanoid,
	{
		[Language.JaHrkt]: ['バドレックス'],
		[Language.Roomaji]: ['Budrex'],
		[Language.Ko]: ['버드렉스'],
		[Language.ZhHant]: ['蕾冠王'],
		[Language.Fr]: ['Sylveroy'],
		[Language.De]: ['Coronospa'],
		[Language.Es]: ['Calyrex'],
		[Language.It]: ['Calyrex'],
		[Language.En]: ['Calyrex'],
		[Language.Ja]: ['バドレックス'],
		[Language.ZhHans]: ['蕾冠王'],
	},
	{
		[Language.JaHrkt]: ['キングポケモン'],
		[Language.Ko]: ['킹포켓몬'],
		[Language.ZhHant]: ['國王寶可夢'],
		[Language.Fr]: ['Pokémon Roi'],
		[Language.De]: ['Königs-Pokémon'],
		[Language.Es]: ['Pokémon Rey'],
		[Language.It]: ['Pokémon Re'],
		[Language.En]: ['King Pokémon'],
		[Language.Ja]: ['キングポケモン'],
		[Language.ZhHans]: ['国王宝可梦'],
	},
	{
		[Language.JaHrkt]: [
			'いやしと　めぐみの　ちからを　もつ\nじあいに　みちた　ポケモン。　はるか\nむかし　ガラルに　くんりんしていた。',
			'おおむかしの　ガラルを　すべていた\nでんせつの　おう。　こころを　いやし\nくさきを　めぶかせる　ちからがある。',
		],
		[Language.Ko]: [
			'치유와 은총의 힘을 가진\n자애로운 포켓몬.\n먼 옛날 가라르에 군림했었다.',
			'먼 옛날 가라르를 지배했던\n전설의 왕. 마음을 치유하고\n초목을 싹 트게 하는 능력이 있다.',
		],
		[Language.ZhHant]: [
			'擁有治癒與賜恩之力，\n且滿懷慈愛的寶可夢。\n在遠古時代曾統治伽勒爾。',
			'曾在很久以前統治伽勒爾的\n傳說之王。擁有治癒心靈，\n讓草木發芽的力量。',
		],
		[Language.Fr]: [
			'Doté de pouvoirs de guérison et d’abondance,\nce Pokémon miséricordieux régnait sur Galar\nil y a fort longtemps.',
			'Ce roi légendaire qui a régné sur Galar il y a fort\nlongtemps possède le pouvoir d’apaiser les cœurs\net de faire germer les plantes.',
		],
		[Language.De]: [
			'Ein warmherziges Pokémon, das über heilende\nund segnende Kräfte verfügt. In längst\nvergangenen Zeiten herrschte es über Galar.',
			'Ein legendärer König, der einst Galar regierte.\nCoronospa besitzt die Macht, Herzen zu\nbesänftigen und Pflanzen gedeihen zu lassen.',
		],
		[Language.Es]: [
			'Un Pokémon muy compasivo agraciado con el\npoder de la curación. Reinó en Galar en tiempos\nremotos.',
			'Legendario monarca del antiguo Galar. Posee el\npoder de sanar el espíritu y de hacer brotar la\nvegetación.',
		],
		[Language.It]: [
			'Portatore di rigogliosità e dotato di poteri\ncurativi, questo Pokémon compassionevole\nregnò su Galar in tempi antichi.',
			'Il re delle leggende che dominò su Galar in un\nlontano passato. È in grado di calmare gli animi\ne far germogliare la vegetazione.',
		],
		[Language.En]: [
			'Calyrex is a merciful Pokémon, capable of\nproviding healing and blessings. It reigned over\nthe Galar region in times of yore.',
			'Calyrex is known in legend as a king that ruled\nover Galar in ancient times. It has the power to\ncause hearts to mend and plants to spring forth.',
		],
		[Language.Ja]: [
			'癒しと　恵みの　力を　もつ\n慈愛に　満ちた　ポケモン。　はるか\nむかし　ガラルに　君臨していた。',
			'大昔の　ガラルを　統べていた\n伝説の　王。　心を　癒し\n草木を　芽吹かせる　力がある。',
		],
		[Language.ZhHans]: [
			'拥有治愈与恩泽之力，\n满腹慈爱之心的宝可梦。\n在很久以前曾统治伽勒尔。',
			'曾经在很久以前统治着\n伽勒尔的传说之王。拥有\n治愈心灵和让草木发芽的能力。',
		],
	},
	[
		[
			Variety.Calyrex,
			250,
			11,
			77,
			[Type.Psychic, Type.Grass],
			{
				frontDefault: '97d0ee68.png',
				frontShiny: 'd0565b8f.png',
				backDefault: '260ad32b.png',
				backShiny: '6011b6cb.png',
			},
			{
				[Stat.Hp]: {baseStat: 100, effort: 3},
				[Stat.Attack]: {baseStat: 80},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 80},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.MegaDrain,
					Move.Growth,
					Move.Confusion,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Psybeam,
					Move.ScaryFace,
					Move.PsychUp,
					Move.MudShot,
					Move.Gravity,
					Move.Snarl,
					Move.BodyPress,
					Move.TeraBlast,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Encore,
					Move.SunnyDay,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.BulletSeed,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Psyshock,
					Move.StoredPower,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.SolarBlade,
					Move.PollenPuff,
					Move.PsychicTerrain,
					Move.ExpandingForce,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SolarBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FutureSight,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psyshock,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					72,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 40,
					},

					Move.GrassyTerrain,
					Move.PsychicTerrain,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.MegaDrain,
					Move.Growth,
					Move.Confusion,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PayDay,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.TriAttack,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.Encore,
					Move.SunnyDay,
					Move.FutureSight,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.BulletSeed,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.SolarBlade,
					Move.PollenPuff,
					Move.PsychicTerrain,
					Move.SpeedSwap,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SolarBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FutureSight,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psyshock,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					8,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_Tutor,
					Move.ExpandingForce,
				),
			].flat(),
			[
				{
					ability: Ability.Unnerve,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.Calyrex,
					PokemonFormBits.Default,
					{
						frontDefault: '97d0ee68.png',
						frontShiny: 'd0565b8f.png',
						backDefault: '260ad32b.png',
						backShiny: '6011b6cb.png',
					},
					[Type.Psychic, Type.Grass],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.CalyrexIce,
			340,
			24,
			8091,
			[Type.Psychic, Type.Ice],
			{
				frontDefault: 'ce74277b.png',
				frontShiny: '76236f66.png',
				backDefault: '9f8650a0.png',
				backShiny: 'fd700ddb.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 165, effort: 3},
				[Stat.Defense]: {baseStat: 150},
				[Stat.SpecialAttack]: {baseStat: 85},
				[Stat.SpecialDefense]: {baseStat: 130},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.SwordsDance,
					Move.Stomp,
					Move.DoubleKick,
					Move.Tackle,
					Move.TakeDown,
					Move.Thrash,
					Move.DoubleEdge,
					Move.TailWhip,
					Move.Mist,
					Move.MegaDrain,
					Move.Growth,
					Move.Confusion,
					Move.Torment,
					Move.Taunt,
					Move.IronDefense,
					Move.Avalanche,
					Move.IcicleCrash,
					Move.GlacialLance,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.BodySlam,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Outrage,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Encore,
					Move.SunnyDay,
					Move.Crunch,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.BulletSeed,
					Move.IronDefense,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.CloseCombat,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Psyshock,
					Move.HeavySlam,
					Move.StoredPower,
					Move.Bulldoze,
					Move.Snarl,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.PollenPuff,
					Move.PsychicTerrain,
					Move.SmartStrike,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Psybeam,
					Move.TeraBlast,
					Move.Snowscape,
					Move.Trailblaze,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SolarBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FutureSight,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psyshock,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					72,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GrassyTerrain,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.SwordsDance,
					Move.Stomp,
					Move.DoubleKick,
					Move.Tackle,
					Move.TakeDown,
					Move.Thrash,
					Move.DoubleEdge,
					Move.TailWhip,
					Move.Mist,
					Move.MegaDrain,
					Move.Growth,
					Move.Confusion,
					Move.Torment,
					Move.Taunt,
					Move.IronDefense,
					Move.Avalanche,
					Move.IcicleCrash,
					Move.GlacialLance,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PayDay,
					Move.SwordsDance,
					Move.BodySlam,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.TriAttack,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Outrage,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Safeguard,
					Move.Megahorn,
					Move.BatonPass,
					Move.Encore,
					Move.SunnyDay,
					Move.Crunch,
					Move.FutureSight,
					Move.Uproar,
					Move.Hail,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Trick,
					Move.Superpower,
					Move.SkillSwap,
					Move.Imprison,
					Move.BulletSeed,
					Move.IcicleSpear,
					Move.IronDefense,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.CloseCombat,
					Move.Payback,
					Move.Assurance,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.Avalanche,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.HeavySlam,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.Bulldoze,
					Move.Snarl,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.HighHorsepower,
					Move.SolarBlade,
					Move.ThroatChop,
					Move.PollenPuff,
					Move.PsychicTerrain,
					Move.SpeedSwap,
					Move.SmartStrike,
					Move.StompingTantrum,
					Move.BodyPress,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SolarBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FutureSight,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psyshock,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ExpandingForce,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.AsOneGlastrier,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.CalyrexIce,
					PokemonFormBits.Default,
					{
						frontDefault: 'ce74277b.png',
						frontShiny: '76236f66.png',
						backDefault: '9f8650a0.png',
						backShiny: 'fd700ddb.png',
					},
					[Type.Psychic, Type.Ice],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Calyrex Cavalier du Froid'],
						[Language.De]: ['Coronospa (Schimmelreiter)'],
						[Language.En]: ['Ice Calyrex'],
					},
					{
						[Language.JaHrkt]: ['はくばじょうのすがた'],
						[Language.Ko]: ['백마 탄 모습'],
						[Language.ZhHant]: ['騎白馬的樣子'],
						[Language.Fr]: ['Cavalier du Froid'],
						[Language.De]: ['Schimmelreiter'],
						[Language.Es]: ['Jinete Glacial'],
						[Language.It]: ['Cavaliere Glaciale'],
						[Language.En]: ['Ice Rider'],
						[Language.Ja]: ['はくばじょうのすがた'],
						[Language.ZhHans]: ['骑白马的样子'],
					},
					'ice',
				],
			],
		],
		[
			Variety.CalyrexShadow,
			340,
			24,
			536,
			[Type.Psychic, Type.Ghost],
			{
				frontDefault: '641a9786.png',
				frontShiny: 'f5a5b774.png',
				backDefault: '70e09232.png',
				backShiny: 'c75d4e22.png',
			},
			{
				[Stat.Hp]: {baseStat: 100},
				[Stat.Attack]: {baseStat: 85},
				[Stat.Defense]: {baseStat: 80},
				[Stat.SpecialAttack]: {baseStat: 165, effort: 3},
				[Stat.SpecialDefense]: {baseStat: 100},
				[Stat.Speed]: {baseStat: 150},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Stomp,
					Move.DoubleKick,
					Move.Tackle,
					Move.TakeDown,
					Move.Thrash,
					Move.DoubleEdge,
					Move.TailWhip,
					Move.Disable,
					Move.MegaDrain,
					Move.Growth,
					Move.Confusion,
					Move.Agility,
					Move.ConfuseRay,
					Move.Haze,
					Move.ShadowBall,
					Move.NastyPlot,
					Move.Hex,
					Move.AstralBarrage,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_SwordShield,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.BatonPass,
					Move.Encore,
					Move.SunnyDay,
					Move.Crunch,
					Move.ShadowBall,
					Move.WillOWisp,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.BulletSeed,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.Psyshock,
					Move.FoulPlay,
					Move.StoredPower,
					Move.Hex,
					Move.Bulldoze,
					Move.Snarl,
					Move.PhantomForce,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.PollenPuff,
					Move.PsychicTerrain,
					Move.StompingTantrum,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.Psybeam,
					Move.NightShade,
					Move.ConfuseRay,
					Move.TeraBlast,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SolarBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FutureSight,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Psyshock,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					72,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 40,
					},

					Move.GrassyTerrain,
					Move.PsychicTerrain,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Pound,
					Move.Stomp,
					Move.DoubleKick,
					Move.Tackle,
					Move.TakeDown,
					Move.Thrash,
					Move.DoubleEdge,
					Move.TailWhip,
					Move.Disable,
					Move.MegaDrain,
					Move.Growth,
					Move.Confusion,
					Move.Agility,
					Move.ConfuseRay,
					Move.Haze,
					Move.ShadowBall,
					Move.NastyPlot,
					Move.Hex,
					Move.AstralBarrage,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.PayDay,
					Move.BodySlam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Psychic,
					Move.Agility,
					Move.LightScreen,
					Move.Reflect,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.TriAttack,
					Move.Substitute,
					Move.Snore,
					Move.Protect,
					Move.ScaryFace,
					Move.GigaDrain,
					Move.Endure,
					Move.SleepTalk,
					Move.Safeguard,
					Move.BatonPass,
					Move.Encore,
					Move.SunnyDay,
					Move.Crunch,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Uproar,
					Move.WillOWisp,
					Move.Facade,
					Move.Taunt,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.BulletSeed,
					Move.MudShot,
					Move.MagicalLeaf,
					Move.CalmMind,
					Move.Payback,
					Move.Assurance,
					Move.PowerSwap,
					Move.GuardSwap,
					Move.DarkPulse,
					Move.SeedBomb,
					Move.EnergyBall,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.PsychoCut,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.LeafStorm,
					Move.GrassKnot,
					Move.WonderRoom,
					Move.Psyshock,
					Move.MagicRoom,
					Move.FoulPlay,
					Move.Round,
					Move.StoredPower,
					Move.AllySwitch,
					Move.Hex,
					Move.Bulldoze,
					Move.Snarl,
					Move.PhantomForce,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.SolarBlade,
					Move.PollenPuff,
					Move.PsychicTerrain,
					Move.SpeedSwap,
					Move.StompingTantrum,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LeechSeed,
					64,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.SolarBeam,
					80,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psychic,
					56,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.GigaDrain,
					16,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.FutureSight,
					88,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HelpingHand,
					32,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Aromatherapy,
					40,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.EnergyBall,
					48,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.Psyshock,
					24,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.HealPulse,
					72,
				),
				move(
					VersionGroup_SwordShield,
					VersionGroup_SwordShield,
					MoveLearnMethod_LevelUp,
					Move.LifeDew,
					8,
				),
				moves(
					{
						versionGroups: [VersionGroup_SwordShield, VersionGroup_SwordShield],
						learnMethod: MoveLearnMethod_Tutor,
					},

					Move.ExpandingForce,
					Move.LashOut,
				),
			].flat(),
			[
				{
					ability: Ability.AsOneSpectrier,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.CalyrexShadow,
					PokemonFormBits.Default,
					{
						frontDefault: '641a9786.png',
						frontShiny: 'f5a5b774.png',
						backDefault: '70e09232.png',
						backShiny: 'c75d4e22.png',
					},
					[Type.Psychic, Type.Ghost],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Calyrex Cavalier d’Effroi'],
						[Language.De]: ['Coronospa (Rappenreiter)'],
						[Language.En]: ['Shadow Calyrex'],
					},
					{
						[Language.JaHrkt]: ['こくばじょうのすがた'],
						[Language.Ko]: ['흑마 탄 모습'],
						[Language.ZhHant]: ['騎黑馬的樣子'],
						[Language.Fr]: ['Cavalier d’Effroi'],
						[Language.De]: ['Rappenreiter'],
						[Language.Es]: ['Jinete Espectral'],
						[Language.It]: ['Cavaliere Spettrale'],
						[Language.En]: ['Shadow Rider'],
						[Language.Ja]: ['こくばじょうのすがた'],
						[Language.ZhHans]: ['骑黑马的样子'],
					},
					'shadow',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Wyrdeer,
	null,
	135,
	Color.Gray,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	null,
	GrowthRate.Slow,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['アヤシシ'],
		[Language.Roomaji]: ['Ayashishi'],
		[Language.Ko]: ['신비록'],
		[Language.ZhHant]: ['詭角鹿'],
		[Language.Fr]: ['Cerbyllin'],
		[Language.De]: ['Damythir'],
		[Language.Es]: ['Wyrdeer'],
		[Language.It]: ['Wyrdeer'],
		[Language.En]: ['Wyrdeer'],
		[Language.Ja]: ['アヤシシ'],
		[Language.ZhHans]: ['诡角鹿'],
	},
	{
		[Language.JaHrkt]: ['おおツノポケモン'],
		[Language.ZhHant]: ['大角寶可夢'],
		[Language.Fr]: ['Pokémon Maxi Corne'],
		[Language.De]: ['Vielender-Pokémon'],
		[Language.It]: ['Pokémon Grancorno'],
		[Language.En]: ['Big Horn Pokémon'],
		[Language.Ja]: ['おおツノポケモン'],
		[Language.ZhHans]: ['大角宝可梦'],
	},
	{
		[Language.En]: [
			'The black orbs shine with an uncanny light when the Pokémon is\nerecting invisible barriers. The fur shed from its beard retains\nheat well and is a highly useful material for winter clothing.',
		],
	},
	[
		[
			Variety.Wyrdeer,
			263,
			18,
			951,
			[Type.Normal, Type.Psychic],
			{
				frontDefault: '80c41782.png',
				frontShiny: 'c653b5a9.png',
			},
			{
				[Stat.Hp]: {baseStat: 103},
				[Stat.Attack]: {baseStat: 105, effort: 1},
				[Stat.Defense]: {baseStat: 72},
				[Stat.SpecialAttack]: {baseStat: 105},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 65},
			},
			{},
			[
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Stomp,
					13,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SandAttack,
					16,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Tackle,
					1,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.BodySlam,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.Psybeam,
					Move.HyperBeam,
					Move.SolarBeam,
					Move.Thunderbolt,
					Move.ThunderWave,
					Move.Thunder,
					Move.Earthquake,
					Move.Dig,
					Move.Psychic,
					Move.Agility,
					Move.ConfuseRay,
					Move.LightScreen,
					Move.Reflect,
					Move.Swift,
					Move.Rest,
					Move.Substitute,
					Move.Thief,
					Move.Curse,
					Move.Spite,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.SunnyDay,
					Move.PsychUp,
					Move.ShadowBall,
					Move.FutureSight,
					Move.Uproar,
					Move.Facade,
					Move.HelpingHand,
					Move.Trick,
					Move.SkillSwap,
					Move.Imprison,
					Move.CalmMind,
					Move.Gravity,
					Move.EnergyBall,
					Move.EarthPower,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.TrickRoom,
					Move.ChargeBeam,
					Move.Psyshock,
					Move.StoredPower,
					Move.Bulldoze,
					Move.WildCharge,
					Move.HighHorsepower,
					Move.ThroatChop,
					Move.Lunge,
					Move.ExpandingForce,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.PsychicNoise,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					21,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					55,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Leer,
					3,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Hypnosis,
					10,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ConfuseRay,
					23,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Megahorn,
					62,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RolePlay,
					32,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Imprison,
					49,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Astonish,
					7,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CalmMind,
					27,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ZenHeadbutt,
					37,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PsyshieldBash,
				),
			].flat(),
			[
				{
					ability: Ability.Intimidate,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Frisk,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.SapSipper,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Wyrdeer,
					PokemonFormBits.Default,
					{
						frontDefault: '80c41782.png',
						frontShiny: 'c653b5a9.png',
					},
					[Type.Normal, Type.Psychic],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Kleavor,
	null,
	115,
	Color.Brown,
	[EggGroup.Bug],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	null,
	GrowthRate.Medium,
	Shape.BugWings,
	{
		[Language.JaHrkt]: ['バサギリ'],
		[Language.Roomaji]: ['Basagiri'],
		[Language.Ko]: ['사마자르'],
		[Language.ZhHant]: ['劈斧螳螂'],
		[Language.Fr]: ['Hachécateur'],
		[Language.De]: ['Axantor'],
		[Language.Es]: ['Kleavor'],
		[Language.It]: ['Kleavor'],
		[Language.En]: ['Kleavor'],
		[Language.Ja]: ['バサギリ'],
		[Language.ZhHans]: ['劈斧螳螂'],
	},
	{
		[Language.JaHrkt]: ['まさかりポケモン'],
		[Language.ZhHant]: ['斧鉞寶可夢'],
		[Language.Fr]: ['Pokémon Hache'],
		[Language.De]: ['Axt-Pokémon'],
		[Language.It]: ['Pokémon Scure'],
		[Language.En]: ['Axe Pokémon'],
		[Language.Ja]: ['まさかりポケモン'],
		[Language.ZhHans]: ['斧钺宝可梦'],
	},
	{
		[Language.En]: [
			"A violent creature that fells towering trees with its crude axes\nand shields itself with hard stone. If one should chance upon\nthis Pokémon in the wilds, one's only recourse is to flee.",
		],
	},
	[
		[
			Variety.Kleavor,
			175,
			18,
			890,
			[Type.Bug, Type.Rock],
			{
				frontDefault: 'd8ae7985.png',
				frontShiny: '2e1d88a2.png',
			},
			{
				[Stat.Hp]: {baseStat: 70},
				[Stat.Attack]: {baseStat: 135, effort: 2},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 45},
				[Stat.SpecialDefense]: {baseStat: 70},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SwordsDance,
					44,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.HyperBeam,
					Move.Agility,
					Move.LightScreen,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Reversal,
					Move.Protect,
					Move.ScaryFace,
					Move.Sandstorm,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.BatonPass,
					Move.SunnyDay,
					Move.Facade,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.AirCutter,
					Move.RockTomb,
					Move.AerialAce,
					Move.RockBlast,
					Move.Tailwind,
					Move.UTurn,
					Move.CloseCombat,
					Move.AirSlash,
					Move.XScissor,
					Move.BugBuzz,
					Move.VacuumWave,
					Move.GigaImpact,
					Move.StoneEdge,
					Move.StealthRock,
					Move.BugBite,
					Move.SmackDown,
					Move.Acrobatics,
					Move.StruggleBug,
					Move.Lunge,
					Move.SkitterSmack,
					Move.DualWingbeat,
					Move.TeraBlast,
					Move.Pounce,
					Move.Trailblaze,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Leer,
					Move.QuickAttack,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					32,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleTeam,
					16,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FocusEnergy,
					28,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.RockSlide,
					36,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					24,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FalseSwipe,
					8,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FuryCutter,
					4,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.XScissor,
					40,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleHit,
					20,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SmackDown,
					12,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.StoneAxe,
				),
			].flat(),
			[
				{
					ability: Ability.Swarm,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.SheerForce,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Sharpness,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Kleavor,
					PokemonFormBits.Default,
					{
						frontDefault: 'd8ae7985.png',
						frontShiny: '2e1d88a2.png',
					},
					[Type.Bug, Type.Rock],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Ursaluna,
	null,
	75,
	Color.Brown,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	null,
	GrowthRate.Medium,
	Shape.Quadruped,
	{
		[Language.JaHrkt]: ['ガチグマ'],
		[Language.Roomaji]: ['Gachiguma'],
		[Language.Ko]: ['다투곰'],
		[Language.ZhHant]: ['月月熊'],
		[Language.Fr]: ['Ursaking'],
		[Language.De]: ['Ursaluna'],
		[Language.Es]: ['Ursaluna'],
		[Language.It]: ['Ursaluna'],
		[Language.En]: ['Ursaluna'],
		[Language.Ja]: ['ガチグマ'],
		[Language.ZhHans]: ['月月熊'],
	},
	{
		[Language.JaHrkt]: ['でいたんポケモン'],
		[Language.ZhHant]: ['泥炭寶可夢'],
		[Language.Fr]: ['Pokémon Tourbe'],
		[Language.De]: ['Torf-Pokémon'],
		[Language.It]: ['Pokémon Torba'],
		[Language.En]: ['Peat Pokémon'],
		[Language.Ja]: ['でいたんポケモン'],
		[Language.ZhHans]: ['泥炭宝可梦'],
	},
	{
		[Language.En]: [
			"I believe it was Hisui's swampy terrain that gave Ursaluna its\nburly physique and newfound capacity to manipulate peat\nat will.",
		],
	},
	[
		[
			Variety.Ursaluna,
			275,
			24,
			2900,
			[Type.Ground, Type.Normal],
			{
				frontDefault: 'f38bf4f2.png',
				frontShiny: '6efa9934.png',
			},
			{
				[Stat.Hp]: {baseStat: 130},
				[Stat.Attack]: {baseStat: 140, effort: 3},
				[Stat.Defense]: {baseStat: 105},
				[Stat.SpecialAttack]: {baseStat: 45},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 50},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.SwordsDance,
					Move.BodySlam,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.HyperBeam,
					Move.LowKick,
					Move.Earthquake,
					Move.Dig,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Curse,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.MetalClaw,
					Move.RainDance,
					Move.SunnyDay,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.FocusPunch,
					Move.Taunt,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.FakeTears,
					Move.RockTomb,
					Move.AerialAce,
					Move.BulkUp,
					Move.CloseCombat,
					Move.Fling,
					Move.SeedBomb,
					Move.DrainPunch,
					Move.VacuumWave,
					Move.EarthPower,
					Move.GigaImpact,
					Move.Avalanche,
					Move.ShadowClaw,
					Move.GunkShot,
					Move.StoneEdge,
					Move.SmackDown,
					Move.HeavySlam,
					Move.Bulldoze,
					Move.PlayRough,
					Move.HighHorsepower,
					Move.ThroatChop,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.HardPress,
					Move.SupercellSlam,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Leer,
					Move.Lick,
					Move.FakeTears,
					Move.Covet,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					56,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					8,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 41,
					},

					Move.Rest,
					Move.Snore,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					22,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					35,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SweetScent,
					17,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					64,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Payback,
					13,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayRough,
					29,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayNice,
					25,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HighHorsepower,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeadlongRush,
				),
			].flat(),
			[
				{
					ability: Ability.Guts,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Bulletproof,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Unnerve,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Ursaluna,
					PokemonFormBits.Default,
					{
						frontDefault: 'f38bf4f2.png',
						frontShiny: '6efa9934.png',
					},
					[Type.Ground, Type.Normal],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
		[
			Variety.UrsalunaBloodmoon,
			null,
			24,
			2900,
			[Type.Ground, Type.Normal],
			{
				frontDefault: 'd822c4e6.png',
				frontShiny: '288d3cbc.png',
			},
			{
				[Stat.Hp]: {baseStat: 113},
				[Stat.Attack]: {baseStat: 70, effort: 3},
				[Stat.Defense]: {baseStat: 120},
				[Stat.SpecialAttack]: {baseStat: 135},
				[Stat.SpecialDefense]: {baseStat: 65},
				[Stat.Speed]: {baseStat: 52},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.IcePunch,
					Move.ThunderPunch,
					Move.SwordsDance,
					Move.BodySlam,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.Roar,
					Move.HyperBeam,
					Move.LowKick,
					Move.Earthquake,
					Move.Dig,
					Move.Metronome,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Protect,
					Move.ScaryFace,
					Move.Endure,
					Move.Charm,
					Move.SleepTalk,
					Move.MetalClaw,
					Move.RainDance,
					Move.SunnyDay,
					Move.Crunch,
					Move.Uproar,
					Move.Facade,
					Move.FocusPunch,
					Move.Taunt,
					Move.HelpingHand,
					Move.BrickBreak,
					Move.HyperVoice,
					Move.FakeTears,
					Move.RockTomb,
					Move.AerialAce,
					Move.BulkUp,
					Move.MudShot,
					Move.CalmMind,
					Move.CloseCombat,
					Move.Fling,
					Move.SeedBomb,
					Move.DrainPunch,
					Move.VacuumWave,
					Move.FocusBlast,
					Move.EarthPower,
					Move.GigaImpact,
					Move.Avalanche,
					Move.ShadowClaw,
					Move.GunkShot,
					Move.StoneEdge,
					Move.SmackDown,
					Move.HeavySlam,
					Move.Bulldoze,
					Move.Snarl,
					Move.PlayRough,
					Move.HighHorsepower,
					Move.StompingTantrum,
					Move.BodyPress,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.HardPress,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Leer,
					Move.Lick,
					Move.HeadlongRush,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Harden,
					17,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FurySwipes,
					8,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 41,
					},

					Move.Rest,
					Move.Snore,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					22,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					35,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_Egg,
					Move.Moonlight,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HammerArm,
					64,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Payback,
					13,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.EarthPower,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					56,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PlayNice,
					25,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BloodMoon,
					70,
				),
			].flat(),
			[
				{
					ability: Ability.MindsEye,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.UrsalunaBloodmoon,
					PokemonFormBits.None,
					{},
					[Type.Ground, Type.Normal],
					VersionGroup.TheTealMask,
					{
						[Language.Fr]: ['Ursaking Lune Vermeille'],
					},
					{
						[Language.JaHrkt]: ['アカツキ'],
						[Language.Ko]: ['붉은 달'],
						[Language.ZhHant]: ['赫月'],
						[Language.Fr]: ['Lune Vermeille'],
						[Language.De]: ['Blutmond'],
						[Language.Es]: ['Luna Carmesí'],
						[Language.It]: ['Luna Cremisi'],
						[Language.En]: ['Bloodmoon'],
						[Language.Ja]: ['アカツキ'],
						[Language.ZhHans]: ['赫月'],
					},
					'bloodmoon',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Basculegion,
	null,
	135,
	Color.Green,
	[EggGroup.Water2],
	4,
	PokemonSpeciesBits.FormsSwitchable | PokemonSpeciesBits.GenderDifferences,
	Generation.GenerationVIII,
	null,
	GrowthRate.Medium,
	Shape.Fish,
	{
		[Language.JaHrkt]: ['イダイトウ'],
		[Language.Roomaji]: ['Idaitou'],
		[Language.Ko]: ['대쓰여너'],
		[Language.ZhHant]: ['幽尾玄魚'],
		[Language.Fr]: ['Paragruel'],
		[Language.De]: ['Salmagnis'],
		[Language.Es]: ['Basculegion'],
		[Language.It]: ['Basculegion'],
		[Language.En]: ['Basculegion'],
		[Language.Ja]: ['イダイトウ'],
		[Language.ZhHans]: ['幽尾玄鱼'],
	},
	{
		[Language.JaHrkt]: ['おおうおポケモン'],
		[Language.ZhHant]: ['大魚寶可夢'],
		[Language.Fr]: ['Pokémon Poissigrand'],
		[Language.De]: ['Großfisch-Pokémon'],
		[Language.It]: ['Pokémon Pescegrosso'],
		[Language.En]: ['Big Fish Pokémon'],
		[Language.Ja]: ['おおうおポケモン'],
		[Language.ZhHans]: ['大鱼宝可梦'],
	},
	{
		[Language.En]: [
			"Clads itself in the souls of comrades that perished before\nfulfilling their goals of journeying upstream. No other species\nthroughout all Hisui's rivers is Basculegion's equal.",
		],
	},
	[
		[
			Variety.BasculegionMale,
			265,
			30,
			1100,
			[Type.Water, Type.Ghost],
			{
				frontDefault: 'dda4522a.png',
				frontShiny: '698da530.png',
			},
			{
				[Stat.Hp]: {baseStat: 120, effort: 2},
				[Stat.Attack]: {baseStat: 112},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 80},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 78},
			},
			{},
			[
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Tackle,
					4,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					36,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.NightShade,
					Move.ConfuseRay,
					Move.Waterfall,
					Move.Rest,
					Move.Substitute,
					Move.Spite,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Outrage,
					Move.SleepTalk,
					Move.PainSplit,
					Move.RainDance,
					Move.Crunch,
					Move.ShadowBall,
					Move.Whirlpool,
					Move.Uproar,
					Move.Facade,
					Move.Endeavor,
					Move.MuddyWater,
					Move.MudShot,
					Move.WaterPulse,
					Move.GigaImpact,
					Move.IceFang,
					Move.Hex,
					Move.PhantomForce,
					Move.PsychicFangs,
					Move.Liquidation,
					Move.ScaleShot,
					Move.FlipTurn,
					Move.TeraBlast,
					Move.Snowscape,
					Move.ChillingWater,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					52,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.WaterGun,
					Move.ShadowBall,
					Move.PhantomForce,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					16,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flail,
					8,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					20,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					32,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					40,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Endeavor,
					Move.LastRespects,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AquaJet,
					12,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeadSmash,
					56,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					28,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaveCrash,
					44,
				),
			].flat(),
			[
				{
					ability: Ability.SwiftSwim,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Adaptability,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MoldBreaker,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.BasculegionMale,
					PokemonFormBits.Default,
					{
						frontDefault: 'dda4522a.png',
						frontShiny: '698da530.png',
					},
					[Type.Water, Type.Ghost],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Paragruel Mâle'],
						[Language.En]: ['Male Basculegion'],
					},
					{
						[Language.JaHrkt]: ['オスのすがた'],
						[Language.Fr]: ['Mâle'],
						[Language.En]: ['Male'],
						[Language.Ja]: ['オスのすがた'],
					},
					'male',
				],
			],
		],
		[
			Variety.BasculegionFemale,
			null,
			30,
			1100,
			[Type.Water, Type.Ghost],
			{
				frontDefault: 'e005afd1.png',
				frontShiny: 'af8e83d7.png',
			},
			{
				[Stat.Hp]: {baseStat: 120, effort: 2},
				[Stat.Attack]: {baseStat: 92},
				[Stat.Defense]: {baseStat: 65},
				[Stat.SpecialAttack]: {baseStat: 100},
				[Stat.SpecialDefense]: {baseStat: 75},
				[Stat.Speed]: {baseStat: 78},
			},
			{},
			[
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Headbutt,
					24,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Tackle,
					4,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.TakeDown,
					36,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.TakeDown,
					Move.DoubleEdge,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Agility,
					Move.NightShade,
					Move.ConfuseRay,
					Move.Waterfall,
					Move.Rest,
					Move.Substitute,
					Move.Spite,
					Move.Protect,
					Move.ScaryFace,
					Move.IcyWind,
					Move.Outrage,
					Move.SleepTalk,
					Move.PainSplit,
					Move.RainDance,
					Move.Crunch,
					Move.ShadowBall,
					Move.Whirlpool,
					Move.Uproar,
					Move.Facade,
					Move.Endeavor,
					Move.MuddyWater,
					Move.MudShot,
					Move.WaterPulse,
					Move.GigaImpact,
					Move.IceFang,
					Move.Hex,
					Move.PhantomForce,
					Move.PsychicFangs,
					Move.Liquidation,
					Move.ScaleShot,
					Move.FlipTurn,
					Move.TeraBlast,
					Move.Snowscape,
					Move.ChillingWater,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Thrash,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DoubleEdge,
					52,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.TailWhip,
					Move.WaterGun,
					Move.ShadowBall,
					Move.PhantomForce,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					16,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flail,
					8,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ScaryFace,
					20,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					32,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					40,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Egg,
					},

					Move.Endeavor,
					Move.LastRespects,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.AquaJet,
					12,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HeadSmash,
					56,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Soak,
					28,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.WaveCrash,
					44,
				),
			].flat(),
			[
				{
					ability: Ability.SwiftSwim,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Adaptability,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.MoldBreaker,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.BasculegionFemale,
					PokemonFormBits.Default,
					{
						frontDefault: 'e005afd1.png',
						frontShiny: 'af8e83d7.png',
					},
					[Type.Water, Type.Ghost],
					VersionGroup.LegendsArceus,
					{
						[Language.Fr]: ['Paragruel Femelle'],
						[Language.De]: ['Barschuft ♀'],
						[Language.En]: ['Female Basculegion'],
					},
					{
						[Language.JaHrkt]: ['メスのすがた'],
						[Language.Fr]: ['Femelle'],
						[Language.De]: ['Weiblich'],
						[Language.En]: ['Female'],
						[Language.Ja]: ['メスのすがた'],
					},
					'female',
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Sneasler,
	null,
	135,
	Color.Gray,
	[EggGroup.Ground],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	null,
	GrowthRate.MediumSlow,
	Shape.Upright,
	{
		[Language.JaHrkt]: ['オオニューラ'],
		[Language.Roomaji]: ['Oonyura'],
		[Language.Ko]: ['포푸니크'],
		[Language.ZhHant]: ['大狃拉'],
		[Language.Fr]: ['Farfurex'],
		[Language.De]: ['Snieboss'],
		[Language.Es]: ['Sneasler'],
		[Language.It]: ['Sneasler'],
		[Language.En]: ['Sneasler'],
		[Language.Ja]: ['オオニューラ'],
		[Language.ZhHans]: ['大狃拉'],
	},
	{
		[Language.JaHrkt]: ['クライミングポケモン'],
		[Language.ZhHant]: ['攀崖寶可夢'],
		[Language.Fr]: ['Pokémon Grimpeur'],
		[Language.De]: ['Kletterei-Pokémon'],
		[Language.It]: ['Pokémon Scalata'],
		[Language.En]: ['Free Climb Pokémon'],
		[Language.Ja]: ['クライミングポケモン'],
		[Language.ZhHans]: ['攀崖宝可梦'],
	},
	{
		[Language.En]: [
			"Because of Sneasler's virulent poison and daunting physical\nprowess, no other species could hope to best it on the frozen\nhighlands. Preferring solitude, this species does not form packs.",
		],
	},
	[
		[
			Variety.Sneasler,
			102,
			13,
			430,
			[Type.Fighting, Type.Poison],
			{
				frontDefault: '7436540f.png',
				frontShiny: 'd3ced1fa.png',
			},
			{
				[Stat.Hp]: {baseStat: 80},
				[Stat.Attack]: {baseStat: 130, effort: 1},
				[Stat.Defense]: {baseStat: 60},
				[Stat.SpecialAttack]: {baseStat: 40},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 120, effort: 1},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.FirePunch,
					Move.SwordsDance,
					Move.TakeDown,
					Move.HyperBeam,
					Move.LowKick,
					Move.Dig,
					Move.Toxic,
					Move.Agility,
					Move.Swift,
					Move.Rest,
					Move.RockSlide,
					Move.Substitute,
					Move.Thief,
					Move.Reversal,
					Move.Spite,
					Move.Protect,
					Move.SludgeBomb,
					Move.Endure,
					Move.FalseSwipe,
					Move.SleepTalk,
					Move.MetalClaw,
					Move.RainDance,
					Move.SunnyDay,
					Move.ShadowBall,
					Move.Facade,
					Move.FocusPunch,
					Move.Taunt,
					Move.BrickBreak,
					Move.RockTomb,
					Move.AerialAce,
					Move.BulkUp,
					Move.PoisonTail,
					Move.CalmMind,
					Move.UTurn,
					Move.CloseCombat,
					Move.Fling,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.XScissor,
					Move.VacuumWave,
					Move.FocusBlast,
					Move.GigaImpact,
					Move.NastyPlot,
					Move.ShadowClaw,
					Move.GunkShot,
					Move.GrassKnot,
					Move.Venoshock,
					Move.SludgeWave,
					Move.LowSweep,
					Move.AcidSpray,
					Move.Acrobatics,
					Move.ThroatChop,
					Move.LashOut,
					Move.Coaching,
					Move.TeraBlast,
					Move.Trailblaze,
					Move.UpperHand,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Scratch,
					Move.Leer,
					Move.RockSmash,
					Move.Fling,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Agility,
					48,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.QuickAttack,
					12,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Screech,
					54,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Slash,
					42,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MetalClaw,
					18,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Taunt,
					6,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BrickBreak,
					30,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.CloseCombat,
					60,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PoisonJab,
					24,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HoneClaws,
					36,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DireClaw,
				),
			].flat(),
			[
				{
					ability: Ability.Pressure,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Unburden,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.PoisonTouch,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Sneasler,
					PokemonFormBits.Default,
					{
						frontDefault: '7436540f.png',
						frontShiny: 'd3ced1fa.png',
					},
					[Type.Fighting, Type.Poison],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Overqwil,
	null,
	135,
	Color.Black,
	[EggGroup.Water2],
	4,
	PokemonSpeciesBits.None,
	Generation.GenerationVIII,
	null,
	GrowthRate.Medium,
	Shape.Fish,
	{
		[Language.JaHrkt]: ['ハリーマン'],
		[Language.Roomaji]: ['Hariman'],
		[Language.Ko]: ['장침바루'],
		[Language.ZhHant]: ['萬針魚'],
		[Language.Fr]: ['Qwilpik'],
		[Language.De]: ['Myriador'],
		[Language.Es]: ['Overqwil'],
		[Language.It]: ['Overqwil'],
		[Language.En]: ['Overqwil'],
		[Language.Ja]: ['ハリーマン'],
		[Language.ZhHans]: ['万针鱼'],
	},
	{
		[Language.JaHrkt]: ['けんざんポケモン'],
		[Language.ZhHant]: ['劍山寶可夢'],
		[Language.Fr]: ['Pokémon Épineux'],
		[Language.De]: ['Tausenddorn-Pokémon'],
		[Language.It]: ['Pokémon Spinoso'],
		[Language.En]: ['Pin Cluster Pokémon'],
		[Language.Ja]: ['けんざんポケモン'],
		[Language.ZhHans]: ['剑山宝可梦'],
	},
	{
		[Language.En]: [
			'Its lancelike spikes and savage temperament have earned it the\nnickname ”sea fiend.” It slurps up poison to nourish itself.',
		],
	},
	[
		[
			Variety.Overqwil,
			179,
			25,
			605,
			[Type.Dark, Type.Poison],
			{
				frontDefault: 'd4e705c6.png',
				frontShiny: 'd856a850.png',
			},
			{
				[Stat.Hp]: {baseStat: 85},
				[Stat.Attack]: {baseStat: 115, effort: 1},
				[Stat.Defense]: {baseStat: 95},
				[Stat.SpecialAttack]: {baseStat: 65},
				[Stat.SpecialDefense]: {baseStat: 65},
				[Stat.Speed]: {baseStat: 85},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.SwordsDance,
					Move.TakeDown,
					Move.DoubleEdge,
					Move.HydroPump,
					Move.Surf,
					Move.IceBeam,
					Move.Blizzard,
					Move.HyperBeam,
					Move.Toxic,
					Move.Agility,
					Move.Haze,
					Move.Waterfall,
					Move.Rest,
					Move.Substitute,
					Move.Curse,
					Move.Reversal,
					Move.Spite,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Spikes,
					Move.IcyWind,
					Move.Endure,
					Move.SleepTalk,
					Move.PainSplit,
					Move.RainDance,
					Move.Crunch,
					Move.ShadowBall,
					Move.Facade,
					Move.Taunt,
					Move.MudShot,
					Move.PoisonTail,
					Move.GyroBall,
					Move.ToxicSpikes,
					Move.PoisonJab,
					Move.DarkPulse,
					Move.GigaImpact,
					Move.GunkShot,
					Move.Venoshock,
					Move.SludgeWave,
					Move.ThroatChop,
					Move.SmartStrike,
					Move.Liquidation,
					Move.ScaleShot,
					Move.LashOut,
					Move.TeraBlast,
					Move.ChillingWater,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Tackle,
					Move.PoisonSting,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.PinMissile,
					32,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Bite,
					8,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Toxic,
					44,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Harden,
					4,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Minimize,
					16,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Spikes,
					20,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DestinyBond,
					56,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Crunch,
					48,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 40,
					},

					Move.Stockpile,
					Move.SpitUp,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Brine,
					24,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Acupressure,
					52,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.ToxicSpikes,
					36,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.FellStinger,
					12,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.BarbBarrage,
					28,
				),
			].flat(),
			[
				{
					ability: Ability.PoisonPoint,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.SwiftSwim,
					isHidden: false,
					slot: 2,
				},
				{
					ability: Ability.Intimidate,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.Overqwil,
					PokemonFormBits.Default,
					{
						frontDefault: 'd4e705c6.png',
						frontShiny: 'd856a850.png',
					},
					[Type.Dark, Type.Poison],
					VersionGroup.SwordShield,
					{},
					{},
				],
			],
		],
	],
);
new PokemonSpecies(
	Species.Enamorus,
	null,
	3,
	Color.Pink,
	[EggGroup.NoEggs],
	8,
	PokemonSpeciesBits.FormsSwitchable | PokemonSpeciesBits.Legendary,
	Generation.GenerationVIII,
	null,
	GrowthRate.Slow,
	Shape.Arms,
	{
		[Language.JaHrkt]: ['ラブトロス'],
		[Language.Roomaji]: ['Lovetolos'],
		[Language.Ko]: ['러브로스'],
		[Language.ZhHant]: ['眷戀雲'],
		[Language.Fr]: ['Amovénus'],
		[Language.De]: ['Cupidos'],
		[Language.Es]: ['Enamorus'],
		[Language.It]: ['Enamorus'],
		[Language.En]: ['Enamorus'],
		[Language.Ja]: ['ラブトロス'],
		[Language.ZhHans]: ['眷恋云'],
	},
	{
		[Language.JaHrkt]: ['あいぞうポケモン'],
		[Language.ZhHant]: ['愛憎寶可夢'],
		[Language.Fr]: ['Pokémon Hainamour'],
		[Language.De]: ['Hassliebe-Pokémon'],
		[Language.It]: ['Pokémon Amoreodio'],
		[Language.En]: ['Love-Hate Pokémon'],
		[Language.Ja]: ['あいぞうポケモン'],
		[Language.ZhHans]: ['爱憎宝可梦'],
	},
	{
		[Language.En]: [
			"When it flies to this land from across the sea, the bitter winter\ncomes to an end. According to legend, this Pokémon's love\ngives rise to the budding of fresh life across Hisui.",
		],
	},
	[
		[
			Variety.EnamorusIncarnate,
			116,
			16,
			480,
			[Type.Fairy, Type.Flying],
			{
				frontDefault: 'c9e4990c.png',
				frontShiny: '10ff9036.png',
			},
			{
				[Stat.Hp]: {baseStat: 74},
				[Stat.Attack]: {baseStat: 115},
				[Stat.Defense]: {baseStat: 70},
				[Stat.SpecialAttack]: {baseStat: 135, effort: 3},
				[Stat.SpecialDefense]: {baseStat: 80},
				[Stat.Speed]: {baseStat: 106},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.BodySlam,
					Move.TakeDown,
					Move.HyperBeam,
					Move.Psychic,
					Move.Agility,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.SunnyDay,
					Move.PsychUp,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Imprison,
					Move.WeatherBall,
					Move.IronDefense,
					Move.CalmMind,
					Move.Tailwind,
					Move.FocusBlast,
					Move.EarthPower,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.GrassKnot,
					Move.DisarmingVoice,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.MistyTerrain,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.MistyExplosion,
					Move.TeraBlast,
					Move.AlluringVoice,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Outrage,
					70,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Twister,
					15,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					50,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					5,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					10,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					55,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Imprison,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Astonish,
					Move.FairyWind,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Extrasensory,
					45,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					25,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					60,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrainingKiss,
					20,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					65,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MysticalFire,
					35,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					40,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SpringtideStorm,
					75,
				),
			].flat(),
			[
				{
					ability: Ability.CuteCharm,
					isHidden: false,
					slot: 1,
				},
				{
					ability: Ability.Contrary,
					isHidden: true,
					slot: 3,
				},
			],
			[
				[
					Form.EnamorusIncarnate,
					PokemonFormBits.Default,
					{
						frontDefault: 'c9e4990c.png',
						frontShiny: '10ff9036.png',
					},
					[Type.Fairy, Type.Flying],
					VersionGroup.SwordShield,
					{
						[Language.Fr]: ['Amovénus Avatar'],
						[Language.En]: ['Incarnate Enamorus'],
					},
					{
						[Language.JaHrkt]: ['けしんフォルム'],
						[Language.Fr]: ['Forme Avatar'],
						[Language.En]: ['Incarnate Forme'],
						[Language.Ja]: ['けしんフォルム'],
					},
					'incarnate',
				],
			],
		],
		[
			Variety.EnamorusTherian,
			null,
			16,
			480,
			[Type.Fairy, Type.Flying],
			{
				frontDefault: '8c748842.png',
				frontShiny: '07ebafc2.png',
			},
			{
				[Stat.Hp]: {baseStat: 74},
				[Stat.Attack]: {baseStat: 115, effort: 3},
				[Stat.Defense]: {baseStat: 110},
				[Stat.SpecialAttack]: {baseStat: 135},
				[Stat.SpecialDefense]: {baseStat: 100},
				[Stat.Speed]: {baseStat: 46},
			},
			{},
			[
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_Machine,
					},

					Move.Fly,
					Move.BodySlam,
					Move.TakeDown,
					Move.HyperBeam,
					Move.Psychic,
					Move.Agility,
					Move.Rest,
					Move.Substitute,
					Move.Protect,
					Move.ScaryFace,
					Move.SludgeBomb,
					Move.Outrage,
					Move.Endure,
					Move.SleepTalk,
					Move.RainDance,
					Move.SunnyDay,
					Move.PsychUp,
					Move.Uproar,
					Move.Facade,
					Move.Taunt,
					Move.Imprison,
					Move.WeatherBall,
					Move.IronDefense,
					Move.CalmMind,
					Move.Tailwind,
					Move.FocusBlast,
					Move.EarthPower,
					Move.GigaImpact,
					Move.ZenHeadbutt,
					Move.IronHead,
					Move.GrassKnot,
					Move.DisarmingVoice,
					Move.DrainingKiss,
					Move.GrassyTerrain,
					Move.MistyTerrain,
					Move.PlayRough,
					Move.DazzlingGleam,
					Move.MistyExplosion,
					Move.TeraBlast,
					Move.AlluringVoice,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Outrage,
					70,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Twister,
					15,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Uproar,
					50,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Torment,
					5,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Flatter,
					10,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Superpower,
					55,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Imprison,
					30,
				),
				moves(
					{
						versionGroups: [
							VersionGroup_ScarletViolet,
							VersionGroup_ScarletViolet,
						],
						learnMethod: MoveLearnMethod_LevelUp,
						levelLearnedAt: 1,
					},

					Move.Astonish,
					Move.FairyWind,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Extrasensory,
					45,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.IronDefense,
					25,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.HealingWish,
					60,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DrainingKiss,
					20,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.Moonblast,
					65,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.MysticalFire,
					35,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.DazzlingGleam,
					40,
				),
				move(
					VersionGroup_ScarletViolet,
					VersionGroup_ScarletViolet,
					MoveLearnMethod_LevelUp,
					Move.SpringtideStorm,
					75,
				),
			].flat(),
			[
				{
					ability: Ability.Overcoat,
					isHidden: false,
					slot: 1,
				},
			],
			[
				[
					Form.EnamorusTherian,
					PokemonFormBits.Default,
					{
						frontDefault: '8c748842.png',
						frontShiny: '07ebafc2.png',
					},
					[Type.Fairy, Type.Flying],
					VersionGroup.LegendsArceus,
					{
						[Language.Fr]: ['Amovénus Totémique'],
						[Language.De]: ['Enamorus (Tiergeist)'],
						[Language.En]: ['Therian Enamorus'],
					},
					{
						[Language.JaHrkt]: ['れいじゅうフォルム'],
						[Language.Fr]: ['Forme Totémique'],
						[Language.De]: ['Tiergeistform'],
						[Language.En]: ['Therian Forme'],
						[Language.Ja]: ['れいじゅうフォルム'],
					},
					'therian',
				],
			],
		],
	],
);
